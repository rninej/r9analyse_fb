(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([
  [636],
  {
    92: (e, n, p) => {
      (window.__NEXT_P = window.__NEXT_P || []).push([
        "/_app",
        function () {
          return p(48272);
        },
      ]);
    },
    581: (e, n, p) => {
      "use strict";
      p.d(n, {
        A: () =>
          function e(n, p) {
            let r = { ...p };
            for (let a in n)
              if (Object.prototype.hasOwnProperty.call(n, a)) {
                if ("components" === a || "slots" === a)
                  r[a] = { ...n[a], ...r[a] };
                else if ("componentsProps" === a || "slotProps" === a) {
                  let t = n[a],
                    P = p[a];
                  if (P) {
                    if (t)
                      for (let n in ((r[a] = { ...P }), t))
                        Object.prototype.hasOwnProperty.call(t, n) &&
                          (r[a][n] = e(t[n], P[n]));
                    else r[a] = P;
                  } else r[a] = t || {};
                } else void 0 === r[a] && (r[a] = n[a]);
              }
            return r;
          },
      });
    },
    632: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, b: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiListItemText", e);
      }
      let P = (0, r.A)("MuiListItemText", [
        "root",
        "multiline",
        "dense",
        "inset",
        "primary",
        "secondary",
      ]);
    },
    903: (e, n, p) => {
      "use strict";
      function r(e, n) {
        if (!e.containerQueries) return n;
        let p = Object.keys(n)
          .filter((e) => e.startsWith("@container"))
          .sort((e, n) => {
            let p = /min-width:\s*([0-9.]+)/;
            return +(e.match(p)?.[1] || 0) - +(n.match(p)?.[1] || 0);
          });
        return p.length
          ? p.reduce(
              (e, p) => {
                let r = n[p];
                return delete e[p], (e[p] = r), e;
              },
              { ...n }
            )
          : n;
      }
      function a(e, n) {
        return (
          "@" === n ||
          (n.startsWith("@") &&
            (e.some((e) => n.startsWith(`@${e}`)) || !!n.match(/^@\d/)))
        );
      }
      function t(e, n) {
        let p = n.match(/^@([^/]+)?\/?(.+)?$/);
        if (!p) return null;
        let [, r, a] = p,
          t = Number.isNaN(+r) ? r || 0 : +r;
        return e.containerQueries(a).up(t);
      }
      function P(e) {
        let n = (e, n) =>
          e.replace("@media", n ? `@container ${n}` : "@container");
        function p(p, r) {
          (p.up = (...p) => n(e.breakpoints.up(...p), r)),
            (p.down = (...p) => n(e.breakpoints.down(...p), r)),
            (p.between = (...p) => n(e.breakpoints.between(...p), r)),
            (p.only = (...p) => n(e.breakpoints.only(...p), r)),
            (p.not = (...p) => {
              let a = n(e.breakpoints.not(...p), r);
              return a.includes("not all and")
                ? a
                    .replace("not all and ", "")
                    .replace("min-width:", "width<")
                    .replace("max-width:", "width>")
                    .replace("and", "or")
                : a;
            });
        }
        let r = {},
          a = (e) => (p(r, e), r);
        return p(a), { ...e, containerQueries: a };
      }
      p.d(n, { Ay: () => P, CT: () => t, _S: () => r, ob: () => a });
    },
    1154: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(84335).A;
    },
    3242: (e, n, p) => {
      "use strict";
      p.d(n, { e1: () => f, Cv: () => l, vc: () => c });
      var r = p(4393),
        a = (function (e) {
          return (
            (e.NotFound = "No cloud evaluation available for that position"), e
          );
        })({}),
        t = p(80703),
        P = p(65364);
      let i = () => !!P.env.NEXT_PUBLIC_SENTRY_DSN && t.Dp(),
        o = (e, n) => {
          i() ? t.Cp(e, { extra: n }) : console.error(e);
        };
      var s = p(24307);
      let l = async function (e) {
          let n =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
          try {
            let p = await b(e, n);
            if ("error" in p) {
              if (p.error === a.NotFound) return { bestMove: "", lines: [] };
              throw Error(p.error);
            }
            let t = p.pvs.map((n, r) => ({
              pv: (0, s.T)(e, n.moves.split(" ")),
              cp: n.cp,
              mate: n.mate,
              depth: p.depth,
              multiPv: r + 1,
            }));
            t.sort(r.e2), "w" !== e.split(" ")[1] && t.reverse();
            let P = t[0].pv[0],
              i = t.slice(0, n);
            return { bestMove: P, lines: i };
          } catch (p) {
            return o(p, { fen: e, multiPv: n }), { bestMove: "", lines: [] };
          }
        },
        c = async (e, n) => {
          let p = await fetch(
            "https://lichess.org/api/games/user/"
              .concat(e, "?until=")
              .concat(
                Date.now(),
                "&max=50&pgnInJson=true&sort=dateDesc&clocks=true"
              ),
            {
              method: "GET",
              headers: { accept: "application/x-ndjson" },
              signal: n,
            }
          );
          if (p.status >= 400) throw Error("Error fetching games from Lichess");
          return (await p.text())
            .split("\n")
            .filter((e) => e.length > 0)
            .map((e) => JSON.parse(e))
            .map(m);
        },
        b = async (e, n) => {
          try {
            return (
              await fetch(
                "https://lichess.org/api/cloud-eval?fen="
                  .concat(e, "&multiPv=")
                  .concat(n),
                { method: "GET", signal: AbortSignal.timeout(200) }
              )
            ).json();
          } catch (e) {
            return console.error(e), { error: a.NotFound };
          }
        },
        f = async (e, n) => {
          try {
            let p = await fetch(
              "https://lichess.org/game/export/".concat(
                e,
                "?pgnInJson=true&clocks=true"
              ),
              {
                method: "GET",
                headers: { accept: "application/x-ndjson" },
                signal: n,
              }
            );
            if (p.status >= 400)
              throw Error("Error fetching game ".concat(e, " from Lichess"));
            return (await p.json()).pgn;
          } catch (e) {
            return (
              console.error(e),
              { error: e instanceof Error ? e.message : "Unknown error" }
            );
          }
        },
        m = (e) => {
          var n, p, r, a, t, P, i;
          return {
            id: e.id,
            pgn: e.pgn || "",
            white: {
              name:
                (null === (n = e.players.white.user) || void 0 === n
                  ? void 0
                  : n.name) || "White",
              rating: e.players.white.rating,
              title:
                null === (p = e.players.white.user) || void 0 === p
                  ? void 0
                  : p.title,
            },
            black: {
              name:
                (null === (r = e.players.black.user) || void 0 === r
                  ? void 0
                  : r.name) || "Black",
              rating: e.players.black.rating,
              title:
                null === (a = e.players.black.user) || void 0 === a
                  ? void 0
                  : a.title,
            },
            result: u(e),
            timeControl: ""
              .concat(
                Math.floor(
                  (null === (t = e.clock) || void 0 === t
                    ? void 0
                    : t.initial) / 60 || 0
                ),
                "+"
              )
              .concat(
                (null === (P = e.clock) || void 0 === P
                  ? void 0
                  : P.increment) || 0
              ),
            date: new Date(e.createdAt || e.lastMoveAt).toLocaleDateString(),
            movesNb:
              (null === (i = e.moves) || void 0 === i
                ? void 0
                : i.split(" ").length) || 0,
            url: "https://lichess.org/".concat(e.id),
          };
        },
        u = (e) =>
          "draw" === e.status
            ? "1/2-1/2"
            : e.winner
              ? "white" === e.winner
                ? "1-0"
                : "0-1"
              : "*";
    },
    3637: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = "$$material";
    },
    3904: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => F });
      var r = (function () {
          function e(e) {
            var n = this;
            (this._insertTag = function (e) {
              var p;
              (p =
                0 === n.tags.length
                  ? n.insertionPoint
                    ? n.insertionPoint.nextSibling
                    : n.prepend
                      ? n.container.firstChild
                      : n.before
                  : n.tags[n.tags.length - 1].nextSibling),
                n.container.insertBefore(e, p),
                n.tags.push(e);
            }),
              (this.isSpeedy = void 0 === e.speedy || e.speedy),
              (this.tags = []),
              (this.ctr = 0),
              (this.nonce = e.nonce),
              (this.key = e.key),
              (this.container = e.container),
              (this.prepend = e.prepend),
              (this.insertionPoint = e.insertionPoint),
              (this.before = null);
          }
          var n = e.prototype;
          return (
            (n.hydrate = function (e) {
              e.forEach(this._insertTag);
            }),
            (n.insert = function (e) {
              if (this.ctr % (this.isSpeedy ? 65e3 : 1) == 0) {
                var n;
                this._insertTag(
                  ((n = document.createElement("style")).setAttribute(
                    "data-emotion",
                    this.key
                  ),
                  void 0 !== this.nonce && n.setAttribute("nonce", this.nonce),
                  n.appendChild(document.createTextNode("")),
                  n.setAttribute("data-s", ""),
                  n)
                );
              }
              var p = this.tags[this.tags.length - 1];
              if (this.isSpeedy) {
                var r = (function (e) {
                  if (e.sheet) return e.sheet;
                  for (var n = 0; n < document.styleSheets.length; n++)
                    if (document.styleSheets[n].ownerNode === e)
                      return document.styleSheets[n];
                })(p);
                try {
                  r.insertRule(e, r.cssRules.length);
                } catch (e) {}
              } else p.appendChild(document.createTextNode(e));
              this.ctr++;
            }),
            (n.flush = function () {
              this.tags.forEach(function (e) {
                var n;
                return null == (n = e.parentNode) ? void 0 : n.removeChild(e);
              }),
                (this.tags = []),
                (this.ctr = 0);
            }),
            e
          );
        })(),
        a = Math.abs,
        t = String.fromCharCode,
        P = Object.assign;
      function i(e, n, p) {
        return e.replace(n, p);
      }
      function o(e, n) {
        return e.indexOf(n);
      }
      function s(e, n) {
        return 0 | e.charCodeAt(n);
      }
      function l(e, n, p) {
        return e.slice(n, p);
      }
      function c(e) {
        return e.length;
      }
      function b(e, n) {
        return n.push(e), e;
      }
      var f = 1,
        m = 1,
        u = 0,
        d = 0,
        R = 0,
        B = "";
      function N(e, n, p, r, a, t, P) {
        return {
          value: e,
          root: n,
          parent: p,
          type: r,
          props: a,
          children: t,
          line: f,
          column: m,
          length: P,
          return: "",
        };
      }
      function h(e, n) {
        return P(
          N("", null, null, "", null, null, 0),
          e,
          { length: -e.length },
          n
        );
      }
      function k() {
        return (R = d < u ? s(B, d++) : 0), m++, 10 === R && ((m = 1), f++), R;
      }
      function g() {
        return s(B, d);
      }
      function K(e) {
        switch (e) {
          case 0:
          case 9:
          case 10:
          case 13:
          case 32:
            return 5;
          case 33:
          case 43:
          case 44:
          case 47:
          case 62:
          case 64:
          case 126:
          case 59:
          case 123:
          case 125:
            return 4;
          case 58:
            return 3;
          case 34:
          case 39:
          case 40:
          case 91:
            return 2;
          case 41:
          case 93:
            return 1;
        }
        return 0;
      }
      function Q(e) {
        return (f = m = 1), (u = c((B = e))), (d = 0), [];
      }
      function q(e) {
        var n, p;
        return ((n = d - 1),
        (p = (function e(n) {
          for (; k(); )
            switch (R) {
              case n:
                return d;
              case 34:
              case 39:
                34 !== n && 39 !== n && e(R);
                break;
              case 40:
                41 === n && e(n);
                break;
              case 92:
                k();
            }
          return d;
        })(91 === e ? e + 2 : 40 === e ? e + 1 : e)),
        l(B, n, p)).trim();
      }
      var y = "-ms-",
        v = "-moz-",
        D = "-webkit-",
        S = "comm",
        A = "rule",
        V = "decl",
        G = "@keyframes";
      function C(e, n) {
        for (var p = "", r = e.length, a = 0; a < r; a++)
          p += n(e[a], a, e, n) || "";
        return p;
      }
      function w(e, n, p, r) {
        switch (e.type) {
          case "@layer":
            if (e.children.length) break;
          case "@import":
          case V:
            return (e.return = e.return || e.value);
          case S:
            return "";
          case G:
            return (e.return = e.value + "{" + C(e.children, r) + "}");
          case A:
            e.value = e.props.join(",");
        }
        return c((p = C(e.children, r)))
          ? (e.return = e.value + "{" + p + "}")
          : "";
      }
      function x(e, n, p, r, t, P, o, s, c, b, f) {
        for (
          var m = t - 1,
            u = 0 === t ? P : [""],
            d = u.length,
            R = 0,
            B = 0,
            h = 0;
          R < r;
          ++R
        )
          for (
            var k = 0, g = l(e, m + 1, (m = a((B = o[R])))), K = e;
            k < d;
            ++k
          )
            (K = (B > 0 ? u[k] + " " + g : i(g, /&\f/g, u[k])).trim()) &&
              (c[h++] = K);
        return N(e, n, p, 0 === t ? A : s, c, b, f);
      }
      function M(e, n, p, r) {
        return N(e, n, p, V, l(e, 0, r), l(e, r + 1, -1), r);
      }
      var O = function (e, n, p) {
          for (
            var r = 0, a = 0;
            (r = a), (a = g()), 38 === r && 12 === a && (n[p] = 1), !K(a);

          )
            k();
          return l(B, e, d);
        },
        E = function (e, n) {
          var p = -1,
            r = 44;
          do
            switch (K(r)) {
              case 0:
                38 === r && 12 === g() && (n[p] = 1), (e[p] += O(d - 1, n, p));
                break;
              case 2:
                e[p] += q(r);
                break;
              case 4:
                if (44 === r) {
                  (e[++p] = 58 === g() ? "&\f" : ""), (n[p] = e[p].length);
                  break;
                }
              default:
                e[p] += t(r);
            }
          while ((r = k()));
          return e;
        },
        I = function (e, n) {
          var p;
          return (p = E(Q(e), n)), (B = ""), p;
        },
        L = new WeakMap(),
        z = function (e) {
          if ("rule" === e.type && e.parent && !(e.length < 1)) {
            for (
              var n = e.value,
                p = e.parent,
                r = e.column === p.column && e.line === p.line;
              "rule" !== p.type;

            )
              if (!(p = p.parent)) return;
            if (
              (1 !== e.props.length || 58 === n.charCodeAt(0) || L.get(p)) &&
              !r
            ) {
              L.set(e, !0);
              for (
                var a = [], t = I(n, a), P = p.props, i = 0, o = 0;
                i < t.length;
                i++
              )
                for (var s = 0; s < P.length; s++, o++)
                  e.props[o] = a[i]
                    ? t[i].replace(/&\f/g, P[s])
                    : P[s] + " " + t[i];
            }
          }
        },
        T = function (e) {
          if ("decl" === e.type) {
            var n = e.value;
            108 === n.charCodeAt(0) &&
              98 === n.charCodeAt(2) &&
              ((e.return = ""), (e.value = ""));
          }
        },
        _ = [
          function (e, n, p, r) {
            if (e.length > -1 && !e.return)
              switch (e.type) {
                case V:
                  e.return = (function e(n, p) {
                    switch (
                      45 ^ s(n, 0)
                        ? (((((((p << 2) ^ s(n, 0)) << 2) ^ s(n, 1)) << 2) ^
                            s(n, 2)) <<
                            2) ^
                          s(n, 3)
                        : 0
                    ) {
                      case 5103:
                        return D + "print-" + n + n;
                      case 5737:
                      case 4201:
                      case 3177:
                      case 3433:
                      case 1641:
                      case 4457:
                      case 2921:
                      case 5572:
                      case 6356:
                      case 5844:
                      case 3191:
                      case 6645:
                      case 3005:
                      case 6391:
                      case 5879:
                      case 5623:
                      case 6135:
                      case 4599:
                      case 4855:
                      case 4215:
                      case 6389:
                      case 5109:
                      case 5365:
                      case 5621:
                      case 3829:
                        return D + n + n;
                      case 5349:
                      case 4246:
                      case 4810:
                      case 6968:
                      case 2756:
                        return D + n + v + n + y + n + n;
                      case 6828:
                      case 4268:
                        return D + n + y + n + n;
                      case 6165:
                        return D + n + y + "flex-" + n + n;
                      case 5187:
                        return (
                          D +
                          n +
                          i(
                            n,
                            /(\w+).+(:[^]+)/,
                            D + "box-$1$2" + y + "flex-$1$2"
                          ) +
                          n
                        );
                      case 5443:
                        return (
                          D + n + y + "flex-item-" + i(n, /flex-|-self/, "") + n
                        );
                      case 4675:
                        return (
                          D +
                          n +
                          y +
                          "flex-line-pack" +
                          i(n, /align-content|flex-|-self/, "") +
                          n
                        );
                      case 5548:
                        return D + n + y + i(n, "shrink", "negative") + n;
                      case 5292:
                        return D + n + y + i(n, "basis", "preferred-size") + n;
                      case 6060:
                        return (
                          D +
                          "box-" +
                          i(n, "-grow", "") +
                          D +
                          n +
                          y +
                          i(n, "grow", "positive") +
                          n
                        );
                      case 4554:
                        return (
                          D + i(n, /([^-])(transform)/g, "$1" + D + "$2") + n
                        );
                      case 6187:
                        return (
                          i(
                            i(
                              i(n, /(zoom-|grab)/, D + "$1"),
                              /(image-set)/,
                              D + "$1"
                            ),
                            n,
                            ""
                          ) + n
                        );
                      case 5495:
                      case 3959:
                        return i(n, /(image-set\([^]*)/, D + "$1$`$1");
                      case 4968:
                        return (
                          i(
                            i(
                              n,
                              /(.+:)(flex-)?(.*)/,
                              D + "box-pack:$3" + y + "flex-pack:$3"
                            ),
                            /s.+-b[^;]+/,
                            "justify"
                          ) +
                          D +
                          n +
                          n
                        );
                      case 4095:
                      case 3583:
                      case 4068:
                      case 2532:
                        return i(n, /(.+)-inline(.+)/, D + "$1$2") + n;
                      case 8116:
                      case 7059:
                      case 5753:
                      case 5535:
                      case 5445:
                      case 5701:
                      case 4933:
                      case 4677:
                      case 5533:
                      case 5789:
                      case 5021:
                      case 4765:
                        if (c(n) - 1 - p > 6)
                          switch (s(n, p + 1)) {
                            case 109:
                              if (45 !== s(n, p + 4)) break;
                            case 102:
                              return (
                                i(
                                  n,
                                  /(.+:)(.+)-([^]+)/,
                                  "$1" +
                                    D +
                                    "$2-$3$1" +
                                    v +
                                    (108 == s(n, p + 3) ? "$3" : "$2-$3")
                                ) + n
                              );
                            case 115:
                              return ~o(n, "stretch")
                                ? e(i(n, "stretch", "fill-available"), p) + n
                                : n;
                          }
                        break;
                      case 4949:
                        if (115 !== s(n, p + 1)) break;
                      case 6444:
                        switch (s(n, c(n) - 3 - (~o(n, "!important") && 10))) {
                          case 107:
                            return i(n, ":", ":" + D) + n;
                          case 101:
                            return (
                              i(
                                n,
                                /(.+:)([^;!]+)(;|!.+)?/,
                                "$1" +
                                  D +
                                  (45 === s(n, 14) ? "inline-" : "") +
                                  "box$3$1" +
                                  D +
                                  "$2$3$1" +
                                  y +
                                  "$2box$3"
                              ) + n
                            );
                        }
                        break;
                      case 5936:
                        switch (s(n, p + 11)) {
                          case 114:
                            return (
                              D + n + y + i(n, /[svh]\w+-[tblr]{2}/, "tb") + n
                            );
                          case 108:
                            return (
                              D +
                              n +
                              y +
                              i(n, /[svh]\w+-[tblr]{2}/, "tb-rl") +
                              n
                            );
                          case 45:
                            return (
                              D + n + y + i(n, /[svh]\w+-[tblr]{2}/, "lr") + n
                            );
                        }
                        return D + n + y + n + n;
                    }
                    return n;
                  })(e.value, e.length);
                  break;
                case G:
                  return C([h(e, { value: i(e.value, "@", "@" + D) })], r);
                case A:
                  if (e.length)
                    return e.props
                      .map(function (n) {
                        var p;
                        switch (
                          ((p = n),
                          (p = /(::plac\w+|:read-\w+)/.exec(p)) ? p[0] : p)
                        ) {
                          case ":read-only":
                          case ":read-write":
                            return C(
                              [
                                h(e, {
                                  props: [i(n, /:(read-\w+)/, ":" + v + "$1")],
                                }),
                              ],
                              r
                            );
                          case "::placeholder":
                            return C(
                              [
                                h(e, {
                                  props: [
                                    i(n, /:(plac\w+)/, ":" + D + "input-$1"),
                                  ],
                                }),
                                h(e, {
                                  props: [i(n, /:(plac\w+)/, ":" + v + "$1")],
                                }),
                                h(e, {
                                  props: [i(n, /:(plac\w+)/, y + "input-$1")],
                                }),
                              ],
                              r
                            );
                        }
                        return "";
                      })
                      .join("");
              }
          },
        ],
        F = function (e) {
          var n,
            p,
            a,
            P,
            u,
            h = e.key;
          if ("css" === h) {
            var y = document.querySelectorAll(
              "style[data-emotion]:not([data-s])"
            );
            Array.prototype.forEach.call(y, function (e) {
              -1 !== e.getAttribute("data-emotion").indexOf(" ") &&
                (document.head.appendChild(e), e.setAttribute("data-s", ""));
            });
          }
          var v = e.stylisPlugins || _,
            D = {},
            A = [];
          (P = e.container || document.head),
            Array.prototype.forEach.call(
              document.querySelectorAll('style[data-emotion^="' + h + ' "]'),
              function (e) {
                for (
                  var n = e.getAttribute("data-emotion").split(" "), p = 1;
                  p < n.length;
                  p++
                )
                  D[n[p]] = !0;
                A.push(e);
              }
            );
          var V =
              ((p = (n = [z, T].concat(v, [
                w,
                ((a = function (e) {
                  u.insert(e);
                }),
                function (e) {
                  !e.root && (e = e.return) && a(e);
                }),
              ])).length),
              function (e, r, a, t) {
                for (var P = "", i = 0; i < p; i++) P += n[i](e, r, a, t) || "";
                return P;
              }),
            G = function (e) {
              var n, p;
              return C(
                ((p = (function e(n, p, r, a, P, u, h, Q, y) {
                  for (
                    var v,
                      D = 0,
                      A = 0,
                      V = h,
                      G = 0,
                      C = 0,
                      w = 0,
                      O = 1,
                      E = 1,
                      I = 1,
                      L = 0,
                      z = "",
                      T = P,
                      _ = u,
                      F = a,
                      j = z;
                    E;

                  )
                    switch (((w = L), (L = k()))) {
                      case 40:
                        if (108 != w && 58 == s(j, V - 1)) {
                          -1 != o((j += i(q(L), "&", "&\f")), "&\f") &&
                            (I = -1);
                          break;
                        }
                      case 34:
                      case 39:
                      case 91:
                        j += q(L);
                        break;
                      case 9:
                      case 10:
                      case 13:
                      case 32:
                        j += (function (e) {
                          for (; (R = g()); )
                            if (R < 33) k();
                            else break;
                          return K(e) > 2 || K(R) > 3 ? "" : " ";
                        })(w);
                        break;
                      case 92:
                        j += (function (e, n) {
                          for (
                            var p;
                            --n &&
                            k() &&
                            !(R < 48) &&
                            !(R > 102) &&
                            (!(R > 57) || !(R < 65)) &&
                            (!(R > 70) || !(R < 97));

                          );
                          return (
                            (p = d + (n < 6 && 32 == g() && 32 == k())),
                            l(B, e, p)
                          );
                        })(d - 1, 7);
                        continue;
                      case 47:
                        switch (g()) {
                          case 42:
                          case 47:
                            b(
                              ((v = (function (e, n) {
                                for (; k(); )
                                  if (e + R === 57) break;
                                  else if (e + R === 84 && 47 === g()) break;
                                return (
                                  "/*" +
                                  l(B, n, d - 1) +
                                  "*" +
                                  t(47 === e ? e : k())
                                );
                              })(k(), d)),
                              N(v, p, r, S, t(R), l(v, 2, -2), 0)),
                              y
                            );
                            break;
                          default:
                            j += "/";
                        }
                        break;
                      case 123 * O:
                        Q[D++] = c(j) * I;
                      case 125 * O:
                      case 59:
                      case 0:
                        switch (L) {
                          case 0:
                          case 125:
                            E = 0;
                          case 59 + A:
                            -1 == I && (j = i(j, /\f/g, "")),
                              C > 0 &&
                                c(j) - V &&
                                b(
                                  C > 32
                                    ? M(j + ";", a, r, V - 1)
                                    : M(i(j, " ", "") + ";", a, r, V - 2),
                                  y
                                );
                            break;
                          case 59:
                            j += ";";
                          default:
                            if (
                              (b(
                                (F = x(
                                  j,
                                  p,
                                  r,
                                  D,
                                  A,
                                  P,
                                  Q,
                                  z,
                                  (T = []),
                                  (_ = []),
                                  V
                                )),
                                u
                              ),
                              123 === L)
                            ) {
                              if (0 === A) e(j, p, F, F, T, u, V, Q, _);
                              else
                                switch (99 === G && 110 === s(j, 3) ? 100 : G) {
                                  case 100:
                                  case 108:
                                  case 109:
                                  case 115:
                                    e(
                                      n,
                                      F,
                                      F,
                                      a &&
                                        b(
                                          x(
                                            n,
                                            F,
                                            F,
                                            0,
                                            0,
                                            P,
                                            Q,
                                            z,
                                            P,
                                            (T = []),
                                            V
                                          ),
                                          _
                                        ),
                                      P,
                                      _,
                                      V,
                                      Q,
                                      a ? T : _
                                    );
                                    break;
                                  default:
                                    e(j, F, F, F, [""], _, 0, Q, _);
                                }
                            }
                        }
                        (D = A = C = 0), (O = I = 1), (z = j = ""), (V = h);
                        break;
                      case 58:
                        (V = 1 + c(j)), (C = w);
                      default:
                        if (O < 1) {
                          if (123 == L) --O;
                          else if (
                            125 == L &&
                            0 == O++ &&
                            125 ==
                              ((R = d > 0 ? s(B, --d) : 0),
                              m--,
                              10 === R && ((m = 1), f--),
                              R)
                          )
                            continue;
                        }
                        switch (((j += t(L)), L * O)) {
                          case 38:
                            I = A > 0 ? 1 : ((j += "\f"), -1);
                            break;
                          case 44:
                            (Q[D++] = (c(j) - 1) * I), (I = 1);
                            break;
                          case 64:
                            45 === g() && (j += q(k())),
                              (G = g()),
                              (A = V =
                                c(
                                  (z = j +=
                                    (function (e) {
                                      for (; !K(g()); ) k();
                                      return l(B, e, d);
                                    })(d))
                                )),
                              L++;
                            break;
                          case 45:
                            45 === w && 2 == c(j) && (O = 0);
                        }
                    }
                  return u;
                })("", null, null, null, [""], (n = Q((n = e))), 0, [0], n)),
                (B = ""),
                p),
                V
              );
            },
            O = {
              key: h,
              sheet: new r({
                key: h,
                container: P,
                nonce: e.nonce,
                speedy: e.speedy,
                prepend: e.prepend,
                insertionPoint: e.insertionPoint,
              }),
              nonce: e.nonce,
              inserted: D,
              registered: {},
              insert: function (e, n, p, r) {
                (u = p),
                  G(e ? e + "{" + n.styles + "}" : n.styles),
                  r && (O.inserted[n.name] = !0);
              },
            };
          return O.sheet.hydrate(A), O;
        };
    },
    4073: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(14232).createContext(null);
    },
    4393: (e, n, p) => {
      "use strict";
      p.d(n, { VJ: () => P, e2: () => t, ue: () => a });
      var r = p(24307);
      let a = (e, n) => {
          let p = { lines: [] },
            r = {};
          for (let a of e) {
            if (a.startsWith("bestmove")) {
              let e = P(a, "bestmove");
              e && (p.bestMove = e);
            }
            if (a.startsWith("info")) {
              let e = i(a, n),
                p = P(a, "multipv"),
                t = P(a, "depth");
              if (!e || !p || !t || (r[p] && parseInt(t) < r[p].depth))
                continue;
              let o = P(a, "cp"),
                s = P(a, "mate");
              r[p] = {
                pv: e,
                cp: o ? parseInt(o) : void 0,
                mate: s ? parseInt(s) : void 0,
                depth: parseInt(t),
                multiPv: parseInt(p),
              };
            }
          }
          return (
            (p.lines = Object.values(r).sort(t)),
            "w" !== n.split(" ")[1] &&
              (p.lines = p.lines.map((e) => ({
                ...e,
                cp: e.cp ? -e.cp : e.cp,
                mate: e.mate ? -e.mate : e.mate,
              }))),
            p
          );
        },
        t = (e, n) => {
          var p, r;
          return void 0 !== e.mate && void 0 !== n.mate
            ? e.mate - n.mate
            : void 0 !== e.mate
              ? -e.mate
              : void 0 !== n.mate
                ? n.mate
                : (null !== (p = n.cp) && void 0 !== p ? p : 0) -
                  (null !== (r = e.cp) && void 0 !== r ? r : 0);
        },
        P = (e, n) => {
          let p = e.split(" "),
            r = p.indexOf(n);
          if (-1 !== r && !(r + 1 >= p.length)) return p[r + 1];
        },
        i = (e, n) => {
          let p = e.split(" "),
            a = p.indexOf("pv");
          if (-1 === a || a + 1 >= p.length) return;
          let t = p.slice(a + 1);
          return (0, r.T)(n, t);
        };
    },
    4697: (e, n, p) => {
      "use strict";
      function r(e, n, p) {
        let r = {};
        for (let a in e) {
          let t = e[a],
            P = "",
            i = !0;
          for (let e = 0; e < t.length; e += 1) {
            let r = t[e];
            r &&
              ((P += (!0 === i ? "" : " ") + n(r)),
              (i = !1),
              p && p[r] && (P += " " + p[r]));
          }
          r[a] = P;
        }
        return r;
      }
      p.d(n, { A: () => r });
    },
    6299: (e, n, p) => {
      "use strict";
      p.d(n, { c: () => a, q: () => r });
      let r = (e) => e.scrollTop;
      function a(e, n) {
        var p, r;
        let { timeout: a, easing: t, style: P = {} } = e;
        return {
          duration:
            null !== (p = P.transitionDuration) && void 0 !== p
              ? p
              : "number" == typeof a
                ? a
                : a[n.mode] || 0,
          easing:
            null !== (r = P.transitionTimingFunction) && void 0 !== r
              ? r
              : "object" == typeof t
                ? t[n.mode]
                : t,
          delay: P.transitionDelay,
        };
      }
    },
    7045: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(14232).createContext({});
    },
    7061: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t });
      var r = p(14232),
        a = p(99659);
      let t = function (e) {
        let n = r.useRef(e);
        return (
          (0, a.A)(() => {
            n.current = e;
          }),
          r.useRef((...e) => (0, n.current)(...e)).current
        );
      };
    },
    7674: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, v: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiOutlinedInput", e);
      }
      let P = {
        ...p(40642).A,
        ...(0, r.A)("MuiOutlinedInput", ["root", "notchedOutline", "input"]),
      };
    },
    7957: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => S });
      var r = p(28888),
        a = p(14232),
        t = p(69241),
        P = p(4697),
        i = p(38993),
        o = p(54773),
        s = p(82987),
        l = p(52196),
        c = p(80027),
        b = p(78457),
        f = p(47951),
        m = p(45879);
      function u(e) {
        return (0, m.Ay)("MuiCircularProgress", e);
      }
      (0, f.A)("MuiCircularProgress", [
        "root",
        "determinate",
        "indeterminate",
        "colorPrimary",
        "colorSecondary",
        "svg",
        "circle",
        "circleDeterminate",
        "circleIndeterminate",
        "circleDisableShrink",
      ]);
      var d = p(37876);
      function R() {
        let e = (0, r._)([
          "\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n",
        ]);
        return (
          (R = function () {
            return e;
          }),
          e
        );
      }
      function B() {
        let e = (0, r._)([
          "\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: -126px;\n  }\n",
        ]);
        return (
          (B = function () {
            return e;
          }),
          e
        );
      }
      function N() {
        let e = (0, r._)([
          "\n        animation: ",
          " 1.4s linear infinite;\n      ",
        ]);
        return (
          (N = function () {
            return e;
          }),
          e
        );
      }
      function h() {
        let e = (0, r._)([
          "\n        animation: ",
          " 1.4s ease-in-out infinite;\n      ",
        ]);
        return (
          (h = function () {
            return e;
          }),
          e
        );
      }
      let k = (0, i.i7)(R()),
        g = (0, i.i7)(B()),
        K = "string" != typeof k ? (0, i.AH)(N(), k) : null,
        Q = "string" != typeof g ? (0, i.AH)(h(), g) : null,
        q = (e) => {
          let { classes: n, variant: p, color: r, disableShrink: a } = e,
            t = {
              root: ["root", p, "color".concat((0, c.A)(r))],
              svg: ["svg"],
              circle: [
                "circle",
                "circle".concat((0, c.A)(p)),
                a && "circleDisableShrink",
              ],
            };
          return (0, P.A)(t, u, n);
        },
        y = (0, o.Ay)("span", {
          name: "MuiCircularProgress",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [n.root, n[p.variant], n["color".concat((0, c.A)(p.color))]];
          },
        })(
          (0, s.A)((e) => {
            let { theme: n } = e;
            return {
              display: "inline-block",
              variants: [
                {
                  props: { variant: "determinate" },
                  style: { transition: n.transitions.create("transform") },
                },
                {
                  props: { variant: "indeterminate" },
                  style: K || {
                    animation: "".concat(k, " 1.4s linear infinite"),
                  },
                },
                ...Object.entries(n.palette)
                  .filter((0, b.A)())
                  .map((e) => {
                    let [p] = e;
                    return {
                      props: { color: p },
                      style: { color: (n.vars || n).palette[p].main },
                    };
                  }),
              ],
            };
          })
        ),
        v = (0, o.Ay)("svg", {
          name: "MuiCircularProgress",
          slot: "Svg",
          overridesResolver: (e, n) => n.svg,
        })({ display: "block" }),
        D = (0, o.Ay)("circle", {
          name: "MuiCircularProgress",
          slot: "Circle",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.circle,
              n["circle".concat((0, c.A)(p.variant))],
              p.disableShrink && n.circleDisableShrink,
            ];
          },
        })(
          (0, s.A)((e) => {
            let { theme: n } = e;
            return {
              stroke: "currentColor",
              variants: [
                {
                  props: { variant: "determinate" },
                  style: {
                    transition: n.transitions.create("stroke-dashoffset"),
                  },
                },
                {
                  props: { variant: "indeterminate" },
                  style: {
                    strokeDasharray: "80px, 200px",
                    strokeDashoffset: 0,
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return "indeterminate" === n.variant && !n.disableShrink;
                  },
                  style: Q || {
                    animation: "".concat(g, " 1.4s ease-in-out infinite"),
                  },
                },
              ],
            };
          })
        ),
        S = a.forwardRef(function (e, n) {
          let p = (0, l.b)({ props: e, name: "MuiCircularProgress" }),
            {
              className: r,
              color: a = "primary",
              disableShrink: P = !1,
              size: i = 40,
              style: o,
              thickness: s = 3.6,
              value: c = 0,
              variant: b = "indeterminate",
              ...f
            } = p,
            m = {
              ...p,
              color: a,
              disableShrink: P,
              size: i,
              thickness: s,
              value: c,
              variant: b,
            },
            u = q(m),
            R = {},
            B = {},
            N = {};
          if ("determinate" === b) {
            let e = 2 * Math.PI * ((44 - s) / 2);
            (R.strokeDasharray = e.toFixed(3)),
              (N["aria-valuenow"] = Math.round(c)),
              (R.strokeDashoffset = "".concat(
                (((100 - c) / 100) * e).toFixed(3),
                "px"
              )),
              (B.transform = "rotate(-90deg)");
          }
          return (0, d.jsx)(y, {
            className: (0, t.A)(u.root, r),
            style: { width: i, height: i, ...B, ...o },
            ownerState: m,
            ref: n,
            role: "progressbar",
            ...N,
            ...f,
            children: (0, d.jsx)(v, {
              className: u.svg,
              ownerState: m,
              viewBox: ""
                .concat(22, " ")
                .concat(22, " ")
                .concat(44, " ")
                .concat(44),
              children: (0, d.jsx)(D, {
                className: u.circle,
                style: R,
                ownerState: m,
                cx: 44,
                cy: 44,
                r: (44 - s) / 2,
                fill: "none",
                strokeWidth: s,
              }),
            }),
          });
        });
    },
    9058: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => ee });
      var r = p(69135),
        a = p(12535),
        t = p(54843);
      let P = { black: "#000", white: "#fff" },
        i = {
          50: "#fafafa",
          100: "#f5f5f5",
          200: "#eeeeee",
          300: "#e0e0e0",
          400: "#bdbdbd",
          500: "#9e9e9e",
          600: "#757575",
          700: "#616161",
          800: "#424242",
          900: "#212121",
          A100: "#f5f5f5",
          A200: "#eeeeee",
          A400: "#bdbdbd",
          A700: "#616161",
        },
        o = {
          50: "#f3e5f5",
          100: "#e1bee7",
          200: "#ce93d8",
          300: "#ba68c8",
          400: "#ab47bc",
          500: "#9c27b0",
          600: "#8e24aa",
          700: "#7b1fa2",
          800: "#6a1b9a",
          900: "#4a148c",
          A100: "#ea80fc",
          A200: "#e040fb",
          A400: "#d500f9",
          A700: "#aa00ff",
        };
      var s = p(98291);
      let l = {
        50: "#fff3e0",
        100: "#ffe0b2",
        200: "#ffcc80",
        300: "#ffb74d",
        400: "#ffa726",
        500: "#ff9800",
        600: "#fb8c00",
        700: "#f57c00",
        800: "#ef6c00",
        900: "#e65100",
        A100: "#ffd180",
        A200: "#ffab40",
        A400: "#ff9100",
        A700: "#ff6d00",
      };
      var c = p(90932);
      let b = {
          50: "#e1f5fe",
          100: "#b3e5fc",
          200: "#81d4fa",
          300: "#4fc3f7",
          400: "#29b6f6",
          500: "#03a9f4",
          600: "#039be5",
          700: "#0288d1",
          800: "#0277bd",
          900: "#01579b",
          A100: "#80d8ff",
          A200: "#40c4ff",
          A400: "#00b0ff",
          A700: "#0091ea",
        },
        f = {
          50: "#e8f5e9",
          100: "#c8e6c9",
          200: "#a5d6a7",
          300: "#81c784",
          400: "#66bb6a",
          500: "#4caf50",
          600: "#43a047",
          700: "#388e3c",
          800: "#2e7d32",
          900: "#1b5e20",
          A100: "#b9f6ca",
          A200: "#69f0ae",
          A400: "#00e676",
          A700: "#00c853",
        };
      function m() {
        return {
          text: {
            primary: "rgba(0, 0, 0, 0.87)",
            secondary: "rgba(0, 0, 0, 0.6)",
            disabled: "rgba(0, 0, 0, 0.38)",
          },
          divider: "rgba(0, 0, 0, 0.12)",
          background: { paper: P.white, default: P.white },
          action: {
            active: "rgba(0, 0, 0, 0.54)",
            hover: "rgba(0, 0, 0, 0.04)",
            hoverOpacity: 0.04,
            selected: "rgba(0, 0, 0, 0.08)",
            selectedOpacity: 0.08,
            disabled: "rgba(0, 0, 0, 0.26)",
            disabledBackground: "rgba(0, 0, 0, 0.12)",
            disabledOpacity: 0.38,
            focus: "rgba(0, 0, 0, 0.12)",
            focusOpacity: 0.12,
            activatedOpacity: 0.12,
          },
        };
      }
      let u = m();
      function d() {
        return {
          text: {
            primary: P.white,
            secondary: "rgba(255, 255, 255, 0.7)",
            disabled: "rgba(255, 255, 255, 0.5)",
            icon: "rgba(255, 255, 255, 0.5)",
          },
          divider: "rgba(255, 255, 255, 0.12)",
          background: { paper: "#121212", default: "#121212" },
          action: {
            active: P.white,
            hover: "rgba(255, 255, 255, 0.08)",
            hoverOpacity: 0.08,
            selected: "rgba(255, 255, 255, 0.16)",
            selectedOpacity: 0.16,
            disabled: "rgba(255, 255, 255, 0.3)",
            disabledBackground: "rgba(255, 255, 255, 0.12)",
            disabledOpacity: 0.38,
            focus: "rgba(255, 255, 255, 0.12)",
            focusOpacity: 0.12,
            activatedOpacity: 0.24,
          },
        };
      }
      let R = d();
      function B(e, n, p, r) {
        let a = r.light || r,
          P = r.dark || 1.5 * r;
        e[n] ||
          (e.hasOwnProperty(p)
            ? (e[n] = e[p])
            : "light" === n
              ? (e.light = (0, t.a)(e.main, a))
              : "dark" === n && (e.dark = (0, t.e$)(e.main, P)));
      }
      function N(e) {
        let n;
        let {
            mode: p = "light",
            contrastThreshold: N = 3,
            tonalOffset: h = 0.2,
            ...k
          } = e,
          g =
            e.primary ||
            (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light";
              return "dark" === e
                ? { main: c.A[200], light: c.A[50], dark: c.A[400] }
                : { main: c.A[700], light: c.A[400], dark: c.A[800] };
            })(p),
          K =
            e.secondary ||
            (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light";
              return "dark" === e
                ? { main: o[200], light: o[50], dark: o[400] }
                : { main: o[500], light: o[300], dark: o[700] };
            })(p),
          Q =
            e.error ||
            (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light";
              return "dark" === e
                ? { main: s.A[500], light: s.A[300], dark: s.A[700] }
                : { main: s.A[700], light: s.A[400], dark: s.A[800] };
            })(p),
          q =
            e.info ||
            (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light";
              return "dark" === e
                ? { main: b[400], light: b[300], dark: b[700] }
                : { main: b[700], light: b[500], dark: b[900] };
            })(p),
          y =
            e.success ||
            (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light";
              return "dark" === e
                ? { main: f[400], light: f[300], dark: f[700] }
                : { main: f[800], light: f[500], dark: f[900] };
            })(p),
          v =
            e.warning ||
            (function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : "light";
              return "dark" === e
                ? { main: l[400], light: l[300], dark: l[700] }
                : { main: "#ed6c02", light: l[500], dark: l[900] };
            })(p);
        function D(e) {
          return (0, t.eM)(e, R.text.primary) >= N
            ? R.text.primary
            : u.text.primary;
        }
        let S = (e) => {
          let {
            color: n,
            name: p,
            mainShade: a = 500,
            lightShade: t = 300,
            darkShade: P = 700,
          } = e;
          if (
            (!(n = { ...n }).main && n[a] && (n.main = n[a]),
            !n.hasOwnProperty("main"))
          )
            throw Error((0, r.A)(11, p ? " (".concat(p, ")") : "", a));
          if ("string" != typeof n.main)
            throw Error(
              (0, r.A)(12, p ? " (".concat(p, ")") : "", JSON.stringify(n.main))
            );
          return (
            B(n, "light", t, h),
            B(n, "dark", P, h),
            n.contrastText || (n.contrastText = D(n.main)),
            n
          );
        };
        return (
          "light" === p ? (n = m()) : "dark" === p && (n = d()),
          (0, a.A)(
            {
              common: { ...P },
              mode: p,
              primary: S({ color: g, name: "primary" }),
              secondary: S({
                color: K,
                name: "secondary",
                mainShade: "A400",
                lightShade: "A200",
                darkShade: "A700",
              }),
              error: S({ color: Q, name: "error" }),
              warning: S({ color: v, name: "warning" }),
              info: S({ color: q, name: "info" }),
              success: S({ color: y, name: "success" }),
              grey: i,
              contrastThreshold: N,
              getContrastText: D,
              augmentColor: S,
              tonalOffset: h,
              ...n,
            },
            k
          )
        );
      }
      var h = p(53111),
        k = p(12961);
      let g = (e, n, p, r = []) => {
          let a = e;
          n.forEach((e, t) => {
            t === n.length - 1
              ? Array.isArray(a)
                ? (a[Number(e)] = p)
                : a && "object" == typeof a && (a[e] = p)
              : a &&
                "object" == typeof a &&
                (a[e] || (a[e] = r.includes(e) ? [] : {}), (a = a[e]));
          });
        },
        K = (e, n, p) => {
          !(function e(r, a = [], t = []) {
            Object.entries(r).forEach(([r, P]) => {
              (p && (!p || p([...a, r]))) ||
                null == P ||
                ("object" == typeof P && Object.keys(P).length > 0
                  ? e(P, [...a, r], Array.isArray(P) ? [...t, r] : t)
                  : n([...a, r], P, t));
            });
          })(e);
        },
        Q = (e, n) =>
          "number" == typeof n
            ? ["lineHeight", "fontWeight", "opacity", "zIndex"].some((n) =>
                e.includes(n)
              ) || e[e.length - 1].toLowerCase().includes("opacity")
              ? n
              : `${n}px`
            : n;
      function q(e, n) {
        let { prefix: p, shouldSkipGeneratingVar: r } = n || {},
          a = {},
          t = {},
          P = {};
        return (
          K(
            e,
            (e, n, i) => {
              if (
                ("string" == typeof n || "number" == typeof n) &&
                (!r || !r(e, n))
              ) {
                let r = `--${p ? `${p}-` : ""}${e.join("-")}`,
                  o = Q(e, n);
                Object.assign(a, { [r]: o }),
                  g(t, e, `var(${r})`, i),
                  g(P, e, `var(${r}, ${o})`, i);
              }
            },
            (e) => "vars" === e[0]
          ),
          { css: a, vars: t, varsWithDefaults: P }
        );
      }
      let y = function (e, n = {}) {
        let {
            getSelector: p = function (n, p) {
              let r = t;
              if (
                ("class" === t && (r = ".%s"),
                "data" === t && (r = "[data-%s]"),
                t?.startsWith("data-") &&
                  !t.includes("%s") &&
                  (r = `[${t}="%s"]`),
                n)
              ) {
                if ("media" === r) {
                  if (e.defaultColorScheme === n) return ":root";
                  let r = P[n]?.palette?.mode || n;
                  return {
                    [`@media (prefers-color-scheme: ${r})`]: { ":root": p },
                  };
                }
                if (r)
                  return e.defaultColorScheme === n
                    ? `:root, ${r.replace("%s", String(n))}`
                    : r.replace("%s", String(n));
              }
              return ":root";
            },
            disableCssColorScheme: r,
            colorSchemeSelector: t,
          } = n,
          {
            colorSchemes: P = {},
            components: i,
            defaultColorScheme: o = "light",
            ...s
          } = e,
          { vars: l, css: c, varsWithDefaults: b } = q(s, n),
          f = b,
          m = {},
          { [o]: u, ...d } = P;
        if (
          (Object.entries(d || {}).forEach(([e, p]) => {
            let { vars: r, css: t, varsWithDefaults: P } = q(p, n);
            (f = (0, a.A)(f, P)), (m[e] = { css: t, vars: r });
          }),
          u)
        ) {
          let { css: e, vars: p, varsWithDefaults: r } = q(u, n);
          (f = (0, a.A)(f, r)), (m[o] = { css: e, vars: p });
        }
        return {
          vars: f,
          generateThemeVars: () => {
            let e = { ...l };
            return (
              Object.entries(m).forEach(([, { vars: n }]) => {
                e = (0, a.A)(e, n);
              }),
              e
            );
          },
          generateStyleSheets: () => {
            let n = [],
              a = e.defaultColorScheme || "light";
            function t(e, p) {
              Object.keys(p).length &&
                n.push("string" == typeof e ? { [e]: { ...p } } : e);
            }
            t(p(void 0, { ...c }), c);
            let { [a]: i, ...o } = m;
            if (i) {
              let { css: e } = i,
                n = P[a]?.palette?.mode,
                o = !r && n ? { colorScheme: n, ...e } : { ...e };
              t(p(a, { ...o }), o);
            }
            return (
              Object.entries(o).forEach(([e, { css: n }]) => {
                let a = P[e]?.palette?.mode,
                  i = !r && a ? { colorScheme: a, ...n } : { ...n };
                t(p(e, { ...i }), i);
              }),
              n
            );
          },
        };
      };
      var v = p(31061),
        D = p(74615),
        S = p(89856),
        A = p(88707);
      function V() {
        for (var e = arguments.length, n = Array(e), p = 0; p < e; p++)
          n[p] = arguments[p];
        return [
          ""
            .concat(n[0], "px ")
            .concat(n[1], "px ")
            .concat(n[2], "px ")
            .concat(n[3], "px rgba(0,0,0,")
            .concat(0.2, ")"),
          ""
            .concat(n[4], "px ")
            .concat(n[5], "px ")
            .concat(n[6], "px ")
            .concat(n[7], "px rgba(0,0,0,")
            .concat(0.14, ")"),
          ""
            .concat(n[8], "px ")
            .concat(n[9], "px ")
            .concat(n[10], "px ")
            .concat(n[11], "px rgba(0,0,0,")
            .concat(0.12, ")"),
        ].join(",");
      }
      let G = [
          "none",
          V(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
          V(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
          V(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
          V(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
          V(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
          V(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
          V(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
          V(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
          V(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
          V(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
          V(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
          V(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
          V(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
          V(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
          V(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
          V(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
          V(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
          V(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
          V(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
          V(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
          V(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
          V(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
          V(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
          V(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8),
        ],
        C = {
          easeInOut: "cubic-bezier(0.4, 0, 0.2, 1)",
          easeOut: "cubic-bezier(0.0, 0, 0.2, 1)",
          easeIn: "cubic-bezier(0.4, 0, 1, 1)",
          sharp: "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        w = {
          shortest: 150,
          shorter: 200,
          short: 250,
          standard: 300,
          complex: 375,
          enteringScreen: 225,
          leavingScreen: 195,
        };
      function x(e) {
        return "".concat(Math.round(e), "ms");
      }
      function M(e) {
        if (!e) return 0;
        let n = e / 36;
        return Math.min(Math.round((4 + 15 * n ** 0.25 + n / 5) * 10), 3e3);
      }
      let O = {
        mobileStepper: 1e3,
        fab: 1050,
        speedDial: 1050,
        appBar: 1100,
        drawer: 1200,
        modal: 1300,
        snackbar: 1400,
        tooltip: 1500,
      };
      function E() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          n = { ...e };
        return (
          !(function e(n) {
            let p = Object.entries(n);
            for (let r = 0; r < p.length; r++) {
              let [t, P] = p[r];
              !(
                (0, a.Q)(P) ||
                void 0 === P ||
                "string" == typeof P ||
                "boolean" == typeof P ||
                "number" == typeof P ||
                Array.isArray(P)
              ) || t.startsWith("unstable_")
                ? delete n[t]
                : (0, a.Q)(P) && ((n[t] = { ...P }), e(n[t]));
            }
          })(n),
          "import { unstable_createBreakpoints as createBreakpoints, createTransitions } from '@mui/material/styles';\n\nconst theme = ".concat(
            JSON.stringify(n, null, 2),
            ";\n\ntheme.breakpoints = createBreakpoints(theme.breakpoints || {});\ntheme.transitions = createTransitions(theme.transitions || {});\n\nexport default theme;"
          )
        );
      }
      function I() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        for (
          var n, p = arguments.length, t = Array(p > 1 ? p - 1 : 0), P = 1;
          P < p;
          P++
        )
          t[P - 1] = arguments[P];
        let {
          breakpoints: i,
          mixins: o = {},
          spacing: s,
          palette: l = {},
          transitions: c = {},
          typography: b = {},
          shape: f,
          ...m
        } = e;
        if (e.vars && void 0 === e.generateThemeVars) throw Error((0, r.A)(20));
        let u = N(l),
          d = (0, S.A)(e),
          R = (0, a.A)(d, {
            mixins: {
              toolbar: {
                minHeight: 56,
                [(n = d.breakpoints).up("xs")]: {
                  "@media (orientation: landscape)": { minHeight: 48 },
                },
                [n.up("sm")]: { minHeight: 64 },
              },
              ...o,
            },
            palette: u,
            shadows: G.slice(),
            typography: (0, A.A)(u, b),
            transitions: (function (e) {
              let n = { ...C, ...e.easing },
                p = { ...w, ...e.duration };
              return {
                getAutoHeightDuration: M,
                create: function () {
                  let e =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : ["all"],
                    r =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : {},
                    {
                      duration: a = p.standard,
                      easing: t = n.easeInOut,
                      delay: P = 0,
                      ...i
                    } = r;
                  return (Array.isArray(e) ? e : [e])
                    .map((e) =>
                      ""
                        .concat(e, " ")
                        .concat("string" == typeof a ? a : x(a), " ")
                        .concat(t, " ")
                        .concat("string" == typeof P ? P : x(P))
                    )
                    .join(",");
                },
                ...e,
                easing: n,
                duration: p,
              };
            })(c),
            zIndex: { ...O },
          });
        return (
          (R = (0, a.A)(R, m)),
          ((R = t.reduce((e, n) => (0, a.A)(e, n), R)).unstable_sxConfig = {
            ...v.A,
            ...(null == m ? void 0 : m.unstable_sxConfig),
          }),
          (R.unstable_sx = function (e) {
            return (0, D.A)({ sx: e, theme: this });
          }),
          (R.toRuntimeSource = E),
          R
        );
      }
      var L = p(47402);
      let z = [...Array(25)].map((e, n) => {
        if (0 === n) return "none";
        let p = (0, L.A)(n);
        return "linear-gradient(rgba(255 255 255 / "
          .concat(p, "), rgba(255 255 255 / ")
          .concat(p, "))");
      });
      function T(e) {
        return {
          inputPlaceholder: "dark" === e ? 0.5 : 0.42,
          inputUnderline: "dark" === e ? 0.7 : 0.42,
          switchTrackDisabled: "dark" === e ? 0.2 : 0.12,
          switchTrack: "dark" === e ? 0.3 : 0.38,
        };
      }
      function _(e) {
        return "dark" === e ? z : [];
      }
      function F(e) {
        var n;
        return (
          !!e[0].match(
            /(cssVarPrefix|colorSchemeSelector|rootSelector|typography|mixins|breakpoints|direction|transitions)/
          ) ||
          !!e[0].match(/sxConfig$/) ||
          ("palette" === e[0] &&
            !!(null === (n = e[1]) || void 0 === n
              ? void 0
              : n.match(/(mode|contrastThreshold|tonalOffset)/)))
        );
      }
      let j = (e) => [
          ...[...Array(25)].map((n, p) =>
            "--".concat(e ? "".concat(e, "-") : "", "overlays-").concat(p)
          ),
          "--".concat(e ? "".concat(e, "-") : "", "palette-AppBar-darkBg"),
          "--".concat(e ? "".concat(e, "-") : "", "palette-AppBar-darkColor"),
        ],
        W = (e) => (n, p) => {
          let r = e.rootSelector || ":root",
            a = e.colorSchemeSelector,
            t = a;
          if (
            ("class" === a && (t = ".%s"),
            "data" === a && (t = "[data-%s]"),
            (null == a ? void 0 : a.startsWith("data-")) &&
              !a.includes("%s") &&
              (t = "[".concat(a, '="%s"]')),
            e.defaultColorScheme === n)
          ) {
            if ("dark" === n) {
              let a = {};
              return (j(e.cssVarPrefix).forEach((e) => {
                (a[e] = p[e]), delete p[e];
              }),
              "media" === t)
                ? { [r]: p, "@media (prefers-color-scheme: dark)": { [r]: a } }
                : t
                  ? {
                      [t.replace("%s", n)]: a,
                      ["".concat(r, ", ").concat(t.replace("%s", n))]: p,
                    }
                  : { [r]: { ...p, ...a } };
            }
            if (t && "media" !== t)
              return "".concat(r, ", ").concat(t.replace("%s", String(n)));
          } else if (n) {
            if ("media" === t)
              return {
                ["@media (prefers-color-scheme: ".concat(String(n), ")")]: {
                  [r]: p,
                },
              };
            if (t) return t.replace("%s", String(n));
          }
          return r;
        };
      function H(e, n, p) {
        !e[n] && p && (e[n] = p);
      }
      function $(e) {
        return "string" == typeof e && e.startsWith("hsl") ? (0, t.YL)(e) : e;
      }
      function U(e, n) {
        "".concat(n, "Channel") in e ||
          (e["".concat(n, "Channel")] = (0, t.Me)(
            $(e[n]),
            "MUI: Can't create `palette."
              .concat(n, "Channel` because `palette.")
              .concat(
                n,
                "` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()."
              ) +
              "\n" +
              "To suppress this warning, you need to explicitly provide the `palette.".concat(
                n,
                'Channel` as a string (in rgb format, for example "12 12 12") or undefined if you want to remove the channel token.'
              )
          ));
      }
      let Z = (e) => {
          try {
            return e();
          } catch (e) {}
        },
        Y = function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : "mui";
          return (function (e = "") {
            return (n, ...p) =>
              `var(--${e ? `${e}-` : ""}${n}${(function n(...p) {
                if (!p.length) return "";
                let r = p[0];
                return "string" != typeof r ||
                  r.match(
                    /(#|\(|\)|(-?(\d*\.)?\d+)(px|em|%|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc))|^(-?(\d*\.)?\d+)$|(\d+ \d+ \d+)/
                  )
                  ? `, ${r}`
                  : `, var(--${e ? `${e}-` : ""}${r}${n(...p.slice(1))})`;
              })(...p)})`;
          })(e);
        };
      function J(e, n, p, r) {
        if (!n) return;
        n = !0 === n ? {} : n;
        let a = "dark" === r ? "dark" : "light";
        if (!p) {
          e[r] = (function (e) {
            let {
                palette: n = { mode: "light" },
                opacity: p,
                overlays: r,
                ...a
              } = e,
              t = N(n);
            return {
              palette: t,
              opacity: { ...T(t.mode), ...p },
              overlays: r || _(t.mode),
              ...a,
            };
          })({
            ...n,
            palette: { mode: a, ...(null == n ? void 0 : n.palette) },
          });
          return;
        }
        let { palette: t, ...P } = I({
          ...p,
          palette: { mode: a, ...(null == n ? void 0 : n.palette) },
        });
        return (
          (e[r] = {
            ...n,
            palette: t,
            opacity: { ...T(a), ...(null == n ? void 0 : n.opacity) },
            overlays: (null == n ? void 0 : n.overlays) || _(a),
          }),
          P
        );
      }
      function X(e, n, p) {
        e.colorSchemes &&
          p &&
          (e.colorSchemes[n] = {
            ...(!0 !== p && p),
            palette: N({ ...(!0 === p ? {} : p.palette), mode: n }),
          });
      }
      function ee() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        for (
          var n = arguments.length, p = Array(n > 1 ? n - 1 : 0), P = 1;
          P < n;
          P++
        )
          p[P - 1] = arguments[P];
        let {
            palette: i,
            cssVariables: o = !1,
            colorSchemes: s = i ? void 0 : { light: !0 },
            defaultColorScheme: l = null == i ? void 0 : i.mode,
            ...c
          } = e,
          b = l || "light",
          f = null == s ? void 0 : s[b],
          m = {
            ...s,
            ...(i
              ? { [b]: { ...("boolean" != typeof f && f), palette: i } }
              : void 0),
          };
        if (!1 === o) {
          if (!("colorSchemes" in e)) return I(e, ...p);
          let n = i;
          "palette" in e ||
            !m[b] ||
            (!0 !== m[b]
              ? (n = m[b].palette)
              : "dark" !== b || (n = { mode: "dark" }));
          let r = I({ ...e, palette: n }, ...p);
          return (
            (r.defaultColorScheme = b),
            (r.colorSchemes = m),
            "light" === r.palette.mode &&
              ((r.colorSchemes.light = {
                ...(!0 !== m.light && m.light),
                palette: r.palette,
              }),
              X(r, "dark", m.dark)),
            "dark" === r.palette.mode &&
              ((r.colorSchemes.dark = {
                ...(!0 !== m.dark && m.dark),
                palette: r.palette,
              }),
              X(r, "light", m.light)),
            r
          );
        }
        return (
          i || "light" in m || "light" !== b || (m.light = !0),
          (function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            for (
              var n, p = arguments.length, P = Array(p > 1 ? p - 1 : 0), i = 1;
              i < p;
              i++
            )
              P[i - 1] = arguments[i];
            let {
                colorSchemes: o = { light: !0 },
                defaultColorScheme: s,
                disableCssColorScheme: l = !1,
                cssVarPrefix: c = "mui",
                shouldSkipGeneratingVar: b = F,
                colorSchemeSelector: f = o.light && o.dark ? "media" : void 0,
                rootSelector: m = ":root",
                ...u
              } = e,
              d = Object.keys(o)[0],
              R = s || (o.light && "light" !== d ? "light" : d),
              B = Y(c),
              { [R]: N, light: g, dark: K, ...Q } = o,
              q = { ...Q },
              S = N;
            if (
              ((("dark" !== R || "dark" in o) &&
                ("light" !== R || "light" in o)) ||
                (S = !0),
              !S)
            )
              throw Error((0, r.A)(21, R));
            let A = J(q, S, u, R);
            g && !q.light && J(q, g, void 0, "light"),
              K && !q.dark && J(q, K, void 0, "dark");
            let V = {
              defaultColorScheme: R,
              ...A,
              cssVarPrefix: c,
              colorSchemeSelector: f,
              rootSelector: m,
              getCssVar: B,
              colorSchemes: q,
              font: {
                ...(function (e) {
                  let n = {};
                  return (
                    Object.entries(e).forEach((e) => {
                      let [p, r] = e;
                      "object" == typeof r &&
                        (n[p] =
                          `${r.fontStyle ? `${r.fontStyle} ` : ""}${r.fontVariant ? `${r.fontVariant} ` : ""}${r.fontWeight ? `${r.fontWeight} ` : ""}${r.fontStretch ? `${r.fontStretch} ` : ""}${r.fontSize || ""}${r.lineHeight ? `/${r.lineHeight} ` : ""}${r.fontFamily || ""}`);
                    }),
                    n
                  );
                })(A.typography),
                ...A.font,
              },
              spacing:
                "number" == typeof (n = u.spacing)
                  ? "".concat(n, "px")
                  : "string" == typeof n ||
                      "function" == typeof n ||
                      Array.isArray(n)
                    ? n
                    : "8px",
            };
            Object.keys(V.colorSchemes).forEach((e) => {
              let n = V.colorSchemes[e].palette,
                p = (e) => {
                  let p = e.split("-"),
                    r = p[1],
                    a = p[2];
                  return B(e, n[r][a]);
                };
              if (
                ("light" === n.mode &&
                  (H(n.common, "background", "#fff"),
                  H(n.common, "onBackground", "#000")),
                "dark" === n.mode &&
                  (H(n.common, "background", "#000"),
                  H(n.common, "onBackground", "#fff")),
                (function (e, n) {
                  n.forEach((n) => {
                    e[n] || (e[n] = {});
                  });
                })(n, [
                  "Alert",
                  "AppBar",
                  "Avatar",
                  "Button",
                  "Chip",
                  "FilledInput",
                  "LinearProgress",
                  "Skeleton",
                  "Slider",
                  "SnackbarContent",
                  "SpeedDialAction",
                  "StepConnector",
                  "StepContent",
                  "Switch",
                  "TableCell",
                  "Tooltip",
                ]),
                "light" === n.mode)
              ) {
                H(n.Alert, "errorColor", (0, t.Nd)(n.error.light, 0.6)),
                  H(n.Alert, "infoColor", (0, t.Nd)(n.info.light, 0.6)),
                  H(n.Alert, "successColor", (0, t.Nd)(n.success.light, 0.6)),
                  H(n.Alert, "warningColor", (0, t.Nd)(n.warning.light, 0.6)),
                  H(n.Alert, "errorFilledBg", p("palette-error-main")),
                  H(n.Alert, "infoFilledBg", p("palette-info-main")),
                  H(n.Alert, "successFilledBg", p("palette-success-main")),
                  H(n.Alert, "warningFilledBg", p("palette-warning-main")),
                  H(
                    n.Alert,
                    "errorFilledColor",
                    Z(() => n.getContrastText(n.error.main))
                  ),
                  H(
                    n.Alert,
                    "infoFilledColor",
                    Z(() => n.getContrastText(n.info.main))
                  ),
                  H(
                    n.Alert,
                    "successFilledColor",
                    Z(() => n.getContrastText(n.success.main))
                  ),
                  H(
                    n.Alert,
                    "warningFilledColor",
                    Z(() => n.getContrastText(n.warning.main))
                  ),
                  H(n.Alert, "errorStandardBg", (0, t.j4)(n.error.light, 0.9)),
                  H(n.Alert, "infoStandardBg", (0, t.j4)(n.info.light, 0.9)),
                  H(
                    n.Alert,
                    "successStandardBg",
                    (0, t.j4)(n.success.light, 0.9)
                  ),
                  H(
                    n.Alert,
                    "warningStandardBg",
                    (0, t.j4)(n.warning.light, 0.9)
                  ),
                  H(n.Alert, "errorIconColor", p("palette-error-main")),
                  H(n.Alert, "infoIconColor", p("palette-info-main")),
                  H(n.Alert, "successIconColor", p("palette-success-main")),
                  H(n.Alert, "warningIconColor", p("palette-warning-main")),
                  H(n.AppBar, "defaultBg", p("palette-grey-100")),
                  H(n.Avatar, "defaultBg", p("palette-grey-400")),
                  H(n.Button, "inheritContainedBg", p("palette-grey-300")),
                  H(
                    n.Button,
                    "inheritContainedHoverBg",
                    p("palette-grey-A100")
                  ),
                  H(n.Chip, "defaultBorder", p("palette-grey-400")),
                  H(n.Chip, "defaultAvatarColor", p("palette-grey-700")),
                  H(n.Chip, "defaultIconColor", p("palette-grey-700")),
                  H(n.FilledInput, "bg", "rgba(0, 0, 0, 0.06)"),
                  H(n.FilledInput, "hoverBg", "rgba(0, 0, 0, 0.09)"),
                  H(n.FilledInput, "disabledBg", "rgba(0, 0, 0, 0.12)"),
                  H(
                    n.LinearProgress,
                    "primaryBg",
                    (0, t.j4)(n.primary.main, 0.62)
                  ),
                  H(
                    n.LinearProgress,
                    "secondaryBg",
                    (0, t.j4)(n.secondary.main, 0.62)
                  ),
                  H(n.LinearProgress, "errorBg", (0, t.j4)(n.error.main, 0.62)),
                  H(n.LinearProgress, "infoBg", (0, t.j4)(n.info.main, 0.62)),
                  H(
                    n.LinearProgress,
                    "successBg",
                    (0, t.j4)(n.success.main, 0.62)
                  ),
                  H(
                    n.LinearProgress,
                    "warningBg",
                    (0, t.j4)(n.warning.main, 0.62)
                  ),
                  H(
                    n.Skeleton,
                    "bg",
                    "rgba(".concat(p("palette-text-primaryChannel"), " / 0.11)")
                  ),
                  H(n.Slider, "primaryTrack", (0, t.j4)(n.primary.main, 0.62)),
                  H(
                    n.Slider,
                    "secondaryTrack",
                    (0, t.j4)(n.secondary.main, 0.62)
                  ),
                  H(n.Slider, "errorTrack", (0, t.j4)(n.error.main, 0.62)),
                  H(n.Slider, "infoTrack", (0, t.j4)(n.info.main, 0.62)),
                  H(n.Slider, "successTrack", (0, t.j4)(n.success.main, 0.62)),
                  H(n.Slider, "warningTrack", (0, t.j4)(n.warning.main, 0.62));
                let e = (0, t.Y9)(n.background.default, 0.8);
                H(n.SnackbarContent, "bg", e),
                  H(
                    n.SnackbarContent,
                    "color",
                    Z(() => n.getContrastText(e))
                  ),
                  H(
                    n.SpeedDialAction,
                    "fabHoverBg",
                    (0, t.Y9)(n.background.paper, 0.15)
                  ),
                  H(n.StepConnector, "border", p("palette-grey-400")),
                  H(n.StepContent, "border", p("palette-grey-400")),
                  H(n.Switch, "defaultColor", p("palette-common-white")),
                  H(n.Switch, "defaultDisabledColor", p("palette-grey-100")),
                  H(
                    n.Switch,
                    "primaryDisabledColor",
                    (0, t.j4)(n.primary.main, 0.62)
                  ),
                  H(
                    n.Switch,
                    "secondaryDisabledColor",
                    (0, t.j4)(n.secondary.main, 0.62)
                  ),
                  H(
                    n.Switch,
                    "errorDisabledColor",
                    (0, t.j4)(n.error.main, 0.62)
                  ),
                  H(
                    n.Switch,
                    "infoDisabledColor",
                    (0, t.j4)(n.info.main, 0.62)
                  ),
                  H(
                    n.Switch,
                    "successDisabledColor",
                    (0, t.j4)(n.success.main, 0.62)
                  ),
                  H(
                    n.Switch,
                    "warningDisabledColor",
                    (0, t.j4)(n.warning.main, 0.62)
                  ),
                  H(
                    n.TableCell,
                    "border",
                    (0, t.j4)((0, t.Cg)(n.divider, 1), 0.88)
                  ),
                  H(n.Tooltip, "bg", (0, t.Cg)(n.grey[700], 0.92));
              }
              if ("dark" === n.mode) {
                H(n.Alert, "errorColor", (0, t.j4)(n.error.light, 0.6)),
                  H(n.Alert, "infoColor", (0, t.j4)(n.info.light, 0.6)),
                  H(n.Alert, "successColor", (0, t.j4)(n.success.light, 0.6)),
                  H(n.Alert, "warningColor", (0, t.j4)(n.warning.light, 0.6)),
                  H(n.Alert, "errorFilledBg", p("palette-error-dark")),
                  H(n.Alert, "infoFilledBg", p("palette-info-dark")),
                  H(n.Alert, "successFilledBg", p("palette-success-dark")),
                  H(n.Alert, "warningFilledBg", p("palette-warning-dark")),
                  H(
                    n.Alert,
                    "errorFilledColor",
                    Z(() => n.getContrastText(n.error.dark))
                  ),
                  H(
                    n.Alert,
                    "infoFilledColor",
                    Z(() => n.getContrastText(n.info.dark))
                  ),
                  H(
                    n.Alert,
                    "successFilledColor",
                    Z(() => n.getContrastText(n.success.dark))
                  ),
                  H(
                    n.Alert,
                    "warningFilledColor",
                    Z(() => n.getContrastText(n.warning.dark))
                  ),
                  H(n.Alert, "errorStandardBg", (0, t.Nd)(n.error.light, 0.9)),
                  H(n.Alert, "infoStandardBg", (0, t.Nd)(n.info.light, 0.9)),
                  H(
                    n.Alert,
                    "successStandardBg",
                    (0, t.Nd)(n.success.light, 0.9)
                  ),
                  H(
                    n.Alert,
                    "warningStandardBg",
                    (0, t.Nd)(n.warning.light, 0.9)
                  ),
                  H(n.Alert, "errorIconColor", p("palette-error-main")),
                  H(n.Alert, "infoIconColor", p("palette-info-main")),
                  H(n.Alert, "successIconColor", p("palette-success-main")),
                  H(n.Alert, "warningIconColor", p("palette-warning-main")),
                  H(n.AppBar, "defaultBg", p("palette-grey-900")),
                  H(n.AppBar, "darkBg", p("palette-background-paper")),
                  H(n.AppBar, "darkColor", p("palette-text-primary")),
                  H(n.Avatar, "defaultBg", p("palette-grey-600")),
                  H(n.Button, "inheritContainedBg", p("palette-grey-800")),
                  H(n.Button, "inheritContainedHoverBg", p("palette-grey-700")),
                  H(n.Chip, "defaultBorder", p("palette-grey-700")),
                  H(n.Chip, "defaultAvatarColor", p("palette-grey-300")),
                  H(n.Chip, "defaultIconColor", p("palette-grey-300")),
                  H(n.FilledInput, "bg", "rgba(255, 255, 255, 0.09)"),
                  H(n.FilledInput, "hoverBg", "rgba(255, 255, 255, 0.13)"),
                  H(n.FilledInput, "disabledBg", "rgba(255, 255, 255, 0.12)"),
                  H(
                    n.LinearProgress,
                    "primaryBg",
                    (0, t.Nd)(n.primary.main, 0.5)
                  ),
                  H(
                    n.LinearProgress,
                    "secondaryBg",
                    (0, t.Nd)(n.secondary.main, 0.5)
                  ),
                  H(n.LinearProgress, "errorBg", (0, t.Nd)(n.error.main, 0.5)),
                  H(n.LinearProgress, "infoBg", (0, t.Nd)(n.info.main, 0.5)),
                  H(
                    n.LinearProgress,
                    "successBg",
                    (0, t.Nd)(n.success.main, 0.5)
                  ),
                  H(
                    n.LinearProgress,
                    "warningBg",
                    (0, t.Nd)(n.warning.main, 0.5)
                  ),
                  H(
                    n.Skeleton,
                    "bg",
                    "rgba(".concat(p("palette-text-primaryChannel"), " / 0.13)")
                  ),
                  H(n.Slider, "primaryTrack", (0, t.Nd)(n.primary.main, 0.5)),
                  H(
                    n.Slider,
                    "secondaryTrack",
                    (0, t.Nd)(n.secondary.main, 0.5)
                  ),
                  H(n.Slider, "errorTrack", (0, t.Nd)(n.error.main, 0.5)),
                  H(n.Slider, "infoTrack", (0, t.Nd)(n.info.main, 0.5)),
                  H(n.Slider, "successTrack", (0, t.Nd)(n.success.main, 0.5)),
                  H(n.Slider, "warningTrack", (0, t.Nd)(n.warning.main, 0.5));
                let e = (0, t.Y9)(n.background.default, 0.98);
                H(n.SnackbarContent, "bg", e),
                  H(
                    n.SnackbarContent,
                    "color",
                    Z(() => n.getContrastText(e))
                  ),
                  H(
                    n.SpeedDialAction,
                    "fabHoverBg",
                    (0, t.Y9)(n.background.paper, 0.15)
                  ),
                  H(n.StepConnector, "border", p("palette-grey-600")),
                  H(n.StepContent, "border", p("palette-grey-600")),
                  H(n.Switch, "defaultColor", p("palette-grey-300")),
                  H(n.Switch, "defaultDisabledColor", p("palette-grey-600")),
                  H(
                    n.Switch,
                    "primaryDisabledColor",
                    (0, t.Nd)(n.primary.main, 0.55)
                  ),
                  H(
                    n.Switch,
                    "secondaryDisabledColor",
                    (0, t.Nd)(n.secondary.main, 0.55)
                  ),
                  H(
                    n.Switch,
                    "errorDisabledColor",
                    (0, t.Nd)(n.error.main, 0.55)
                  ),
                  H(
                    n.Switch,
                    "infoDisabledColor",
                    (0, t.Nd)(n.info.main, 0.55)
                  ),
                  H(
                    n.Switch,
                    "successDisabledColor",
                    (0, t.Nd)(n.success.main, 0.55)
                  ),
                  H(
                    n.Switch,
                    "warningDisabledColor",
                    (0, t.Nd)(n.warning.main, 0.55)
                  ),
                  H(
                    n.TableCell,
                    "border",
                    (0, t.Nd)((0, t.Cg)(n.divider, 1), 0.68)
                  ),
                  H(n.Tooltip, "bg", (0, t.Cg)(n.grey[700], 0.92));
              }
              U(n.background, "default"),
                U(n.background, "paper"),
                U(n.common, "background"),
                U(n.common, "onBackground"),
                U(n, "divider"),
                Object.keys(n).forEach((e) => {
                  let p = n[e];
                  "tonalOffset" !== e &&
                    p &&
                    "object" == typeof p &&
                    (p.main && H(n[e], "mainChannel", (0, t.Me)($(p.main))),
                    p.light && H(n[e], "lightChannel", (0, t.Me)($(p.light))),
                    p.dark && H(n[e], "darkChannel", (0, t.Me)($(p.dark))),
                    p.contrastText &&
                      H(
                        n[e],
                        "contrastTextChannel",
                        (0, t.Me)($(p.contrastText))
                      ),
                    "text" === e && (U(n[e], "primary"), U(n[e], "secondary")),
                    "action" === e &&
                      (p.active && U(n[e], "active"),
                      p.selected && U(n[e], "selected")));
                });
            });
            let G = {
                prefix: c,
                disableCssColorScheme: l,
                shouldSkipGeneratingVar: b,
                getSelector: W((V = P.reduce((e, n) => (0, a.A)(e, n), V))),
              },
              {
                vars: C,
                generateThemeVars: w,
                generateStyleSheets: x,
              } = y(V, G);
            return (
              (V.vars = C),
              Object.entries(V.colorSchemes[V.defaultColorScheme]).forEach(
                (e) => {
                  let [n, p] = e;
                  V[n] = p;
                }
              ),
              (V.generateThemeVars = w),
              (V.generateStyleSheets = x),
              (V.generateSpacing = function () {
                return (0, h.A)(u.spacing, (0, k.LX)(this));
              }),
              (V.getColorSchemeSelector = function (e) {
                return "media" === f
                  ? `@media (prefers-color-scheme: ${e})`
                  : f
                    ? f.startsWith("data-") && !f.includes("%s")
                      ? `[${f}="${e}"] &`
                      : "class" === f
                        ? `.${e} &`
                        : "data" === f
                          ? `[data-${e}] &`
                          : `${f.replace("%s", e)} &`
                    : "&";
              }),
              (V.spacing = V.generateSpacing()),
              (V.shouldSkipGeneratingVar = b),
              (V.unstable_sxConfig = {
                ...v.A,
                ...(null == u ? void 0 : u.unstable_sxConfig),
              }),
              (V.unstable_sx = function (e) {
                return (0, D.A)({ sx: e, theme: this });
              }),
              (V.toRuntimeSource = E),
              V
            );
          })(
            {
              ...c,
              colorSchemes: m,
              defaultColorScheme: b,
              ...("boolean" != typeof o && o),
            },
            ...p
          )
        );
      }
    },
    9659: () => {},
    11494: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => u });
      var r = p(14232),
        a = p(69241),
        t = p(15113),
        P = p(74615),
        i = p(90809),
        o = p(64289),
        s = p(37876),
        l = p(78217),
        c = p(9058),
        b = p(3637);
      let f = (0, p(47951).A)("MuiBox", ["root"]),
        m = (0, c.A)(),
        u = (function (e = {}) {
          let {
              themeId: n,
              defaultTheme: p,
              defaultClassName: l = "MuiBox-root",
              generateClassName: c,
            } = e,
            b = (0, t.Ay)("div", {
              shouldForwardProp: (e) =>
                "theme" !== e && "sx" !== e && "as" !== e,
            })(P.A);
          return r.forwardRef(function (e, r) {
            let t = (0, o.A)(p),
              { className: P, component: f = "div", ...m } = (0, i.A)(e);
            return (0, s.jsx)(b, {
              as: f,
              ref: r,
              className: (0, a.A)(P, c ? c(l) : l),
              theme: (n && t[n]) || t,
              ...m,
            });
          });
        })({
          themeId: b.A,
          defaultTheme: m,
          defaultClassName: f.root,
          generateClassName: l.A.generate,
        });
    },
    11951: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => B });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(54843),
        i = p(54773),
        o = p(30566),
        s = p(82987),
        l = p(52196),
        c = p(47402),
        b = p(47951),
        f = p(45879);
      function m(e) {
        return (0, f.Ay)("MuiPaper", e);
      }
      (0, b.A)("MuiPaper", [
        "root",
        "rounded",
        "outlined",
        "elevation",
        "elevation0",
        "elevation1",
        "elevation2",
        "elevation3",
        "elevation4",
        "elevation5",
        "elevation6",
        "elevation7",
        "elevation8",
        "elevation9",
        "elevation10",
        "elevation11",
        "elevation12",
        "elevation13",
        "elevation14",
        "elevation15",
        "elevation16",
        "elevation17",
        "elevation18",
        "elevation19",
        "elevation20",
        "elevation21",
        "elevation22",
        "elevation23",
        "elevation24",
      ]);
      var u = p(37876);
      let d = (e) => {
          let { square: n, elevation: p, variant: r, classes: a } = e;
          return (0, t.A)(
            {
              root: [
                "root",
                r,
                !n && "rounded",
                "elevation" === r && "elevation".concat(p),
              ],
            },
            m,
            a
          );
        },
        R = (0, i.Ay)("div", {
          name: "MuiPaper",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              n[p.variant],
              !p.square && n.rounded,
              "elevation" === p.variant && n["elevation".concat(p.elevation)],
            ];
          },
        })(
          (0, s.A)((e) => {
            let { theme: n } = e;
            return {
              backgroundColor: (n.vars || n).palette.background.paper,
              color: (n.vars || n).palette.text.primary,
              transition: n.transitions.create("box-shadow"),
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.square;
                  },
                  style: { borderRadius: n.shape.borderRadius },
                },
                {
                  props: { variant: "outlined" },
                  style: {
                    border: "1px solid ".concat((n.vars || n).palette.divider),
                  },
                },
                {
                  props: { variant: "elevation" },
                  style: {
                    boxShadow: "var(--Paper-shadow)",
                    backgroundImage: "var(--Paper-overlay)",
                  },
                },
              ],
            };
          })
        ),
        B = r.forwardRef(function (e, n) {
          var p;
          let r = (0, l.b)({ props: e, name: "MuiPaper" }),
            t = (0, o.A)(),
            {
              className: i,
              component: s = "div",
              elevation: b = 1,
              square: f = !1,
              variant: m = "elevation",
              ...B
            } = r,
            N = { ...r, component: s, elevation: b, square: f, variant: m },
            h = d(N);
          return (0, u.jsx)(R, {
            as: s,
            ownerState: N,
            className: (0, a.A)(h.root, i),
            ref: n,
            ...B,
            style: {
              ...("elevation" === m && {
                "--Paper-shadow": (t.vars || t).shadows[b],
                ...(t.vars && {
                  "--Paper-overlay":
                    null === (p = t.vars.overlays) || void 0 === p
                      ? void 0
                      : p[b],
                }),
                ...(!t.vars &&
                  "dark" === t.palette.mode && {
                    "--Paper-overlay": "linear-gradient("
                      .concat((0, P.X4)("#fff", (0, c.A)(b)), ", ")
                      .concat((0, P.X4)("#fff", (0, c.A)(b)), ")"),
                  }),
              }),
              ...B.style,
            },
          });
        });
    },
    12535: (e, n, p) => {
      "use strict";
      p.d(n, {
        A: () =>
          function e(n, p, P = { clone: !0 }) {
            let i = P.clone ? { ...n } : n;
            return (
              t(n) &&
                t(p) &&
                Object.keys(p).forEach((o) => {
                  r.isValidElement(p[o]) || (0, a.Hy)(p[o])
                    ? (i[o] = p[o])
                    : t(p[o]) &&
                        Object.prototype.hasOwnProperty.call(n, o) &&
                        t(n[o])
                      ? (i[o] = e(n[o], p[o], P))
                      : P.clone
                        ? (i[o] = t(p[o])
                            ? (function e(n) {
                                if (
                                  r.isValidElement(n) ||
                                  (0, a.Hy)(n) ||
                                  !t(n)
                                )
                                  return n;
                                let p = {};
                                return (
                                  Object.keys(n).forEach((r) => {
                                    p[r] = e(n[r]);
                                  }),
                                  p
                                );
                              })(p[o])
                            : p[o])
                        : (i[o] = p[o]);
                }),
              i
            );
          },
        Q: () => t,
      });
      var r = p(14232),
        a = p(36408);
      function t(e) {
        if ("object" != typeof e || null === e) return !1;
        let n = Object.getPrototypeOf(e);
        return (
          (null === n ||
            n === Object.prototype ||
            null === Object.getPrototypeOf(n)) &&
          !(Symbol.toStringTag in e) &&
          !(Symbol.iterator in e)
        );
      }
    },
    12572: (e, n, p) => {
      "use strict";
      p.d(n, { Ay: () => q });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(79550),
        i = p(54773),
        o = p(82987),
        s = p(52196),
        l = p(73194),
        c = p(66313),
        b = p(99003),
        f = p(47951),
        m = p(45879);
      function u(e) {
        return (0, m.Ay)("MuiListItem", e);
      }
      (0, f.A)("MuiListItem", [
        "root",
        "container",
        "dense",
        "alignItemsFlexStart",
        "divider",
        "gutters",
        "padding",
        "secondaryAction",
      ]);
      var d = p(98554);
      function R(e) {
        return (0, m.Ay)("MuiListItemSecondaryAction", e);
      }
      (0, f.A)("MuiListItemSecondaryAction", ["root", "disableGutters"]);
      var B = p(37876);
      let N = (e) => {
          let { disableGutters: n, classes: p } = e;
          return (0, t.A)({ root: ["root", n && "disableGutters"] }, R, p);
        },
        h = (0, i.Ay)("div", {
          name: "MuiListItemSecondaryAction",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [n.root, p.disableGutters && n.disableGutters];
          },
        })({
          position: "absolute",
          right: 16,
          top: "50%",
          transform: "translateY(-50%)",
          variants: [
            {
              props: (e) => {
                let { ownerState: n } = e;
                return n.disableGutters;
              },
              style: { right: 0 },
            },
          ],
        }),
        k = r.forwardRef(function (e, n) {
          let p = (0, s.b)({ props: e, name: "MuiListItemSecondaryAction" }),
            { className: t, ...P } = p,
            i = r.useContext(b.A),
            o = { ...p, disableGutters: i.disableGutters },
            l = N(o);
          return (0, B.jsx)(h, {
            className: (0, a.A)(l.root, t),
            ownerState: o,
            ref: n,
            ...P,
          });
        });
      k.muiName = "ListItemSecondaryAction";
      let g = (e) => {
          let {
            alignItems: n,
            classes: p,
            dense: r,
            disableGutters: a,
            disablePadding: P,
            divider: i,
            hasSecondaryAction: o,
          } = e;
          return (0, t.A)(
            {
              root: [
                "root",
                r && "dense",
                !a && "gutters",
                !P && "padding",
                i && "divider",
                "flex-start" === n && "alignItemsFlexStart",
                o && "secondaryAction",
              ],
              container: ["container"],
            },
            u,
            p
          );
        },
        K = (0, i.Ay)("div", {
          name: "MuiListItem",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              p.dense && n.dense,
              "flex-start" === p.alignItems && n.alignItemsFlexStart,
              p.divider && n.divider,
              !p.disableGutters && n.gutters,
              !p.disablePadding && n.padding,
              p.hasSecondaryAction && n.secondaryAction,
            ];
          },
        })(
          (0, o.A)((e) => {
            let { theme: n } = e;
            return {
              display: "flex",
              justifyContent: "flex-start",
              alignItems: "center",
              position: "relative",
              textDecoration: "none",
              width: "100%",
              boxSizing: "border-box",
              textAlign: "left",
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disablePadding;
                  },
                  style: { paddingTop: 8, paddingBottom: 8 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disablePadding && n.dense;
                  },
                  style: { paddingTop: 4, paddingBottom: 4 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disablePadding && !n.disableGutters;
                  },
                  style: { paddingLeft: 16, paddingRight: 16 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disablePadding && !!n.secondaryAction;
                  },
                  style: { paddingRight: 48 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !!n.secondaryAction;
                  },
                  style: { ["& > .".concat(d.A.root)]: { paddingRight: 48 } },
                },
                {
                  props: { alignItems: "flex-start" },
                  style: { alignItems: "flex-start" },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.divider;
                  },
                  style: {
                    borderBottom: "1px solid ".concat(
                      (n.vars || n).palette.divider
                    ),
                    backgroundClip: "padding-box",
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.button;
                  },
                  style: {
                    transition: n.transitions.create("background-color", {
                      duration: n.transitions.duration.shortest,
                    }),
                    "&:hover": {
                      textDecoration: "none",
                      backgroundColor: (n.vars || n).palette.action.hover,
                      "@media (hover: none)": {
                        backgroundColor: "transparent",
                      },
                    },
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.hasSecondaryAction;
                  },
                  style: { paddingRight: 48 },
                },
              ],
            };
          })
        ),
        Q = (0, i.Ay)("li", {
          name: "MuiListItem",
          slot: "Container",
          overridesResolver: (e, n) => n.container,
        })({ position: "relative" }),
        q = r.forwardRef(function (e, n) {
          let p = (0, s.b)({ props: e, name: "MuiListItem" }),
            {
              alignItems: t = "center",
              children: i,
              className: o,
              component: f,
              components: m = {},
              componentsProps: u = {},
              ContainerComponent: d = "li",
              ContainerProps: { className: R, ...N } = {},
              dense: h = !1,
              disableGutters: q = !1,
              disablePadding: y = !1,
              divider: v = !1,
              secondaryAction: D,
              slotProps: S = {},
              slots: A = {},
              ...V
            } = p,
            G = r.useContext(b.A),
            C = r.useMemo(
              () => ({
                dense: h || G.dense || !1,
                alignItems: t,
                disableGutters: q,
              }),
              [t, G.dense, h, q]
            ),
            w = r.useRef(null),
            x = r.Children.toArray(i),
            M =
              x.length &&
              (0, l.A)(x[x.length - 1], ["ListItemSecondaryAction"]),
            O = {
              ...p,
              alignItems: t,
              dense: C.dense,
              disableGutters: q,
              disablePadding: y,
              divider: v,
              hasSecondaryAction: M,
            },
            E = g(O),
            I = (0, c.A)(w, n),
            L = A.root || m.Root || K,
            z = S.root || u.root || {},
            T = { className: (0, a.A)(E.root, z.className, o), ...V },
            _ = f || "li";
          return M
            ? ((_ = T.component || f ? _ : "div"),
              "li" === d &&
                ("li" === _
                  ? (_ = "div")
                  : "li" === T.component && (T.component = "div")),
              (0, B.jsx)(b.A.Provider, {
                value: C,
                children: (0, B.jsxs)(Q, {
                  as: d,
                  className: (0, a.A)(E.container, R),
                  ref: I,
                  ownerState: O,
                  ...N,
                  children: [
                    (0, B.jsx)(L, {
                      ...z,
                      ...(!(0, P.A)(L) && {
                        as: _,
                        ownerState: { ...O, ...z.ownerState },
                      }),
                      ...T,
                      children: x,
                    }),
                    x.pop(),
                  ],
                }),
              }))
            : (0, B.jsx)(b.A.Provider, {
                value: C,
                children: (0, B.jsxs)(L, {
                  ...z,
                  as: _,
                  ref: I,
                  ...(!(0, P.A)(L) && {
                    ownerState: { ...O, ...z.ownerState },
                  }),
                  ...T,
                  children: [x, D && (0, B.jsx)(k, { children: D })],
                }),
              });
        });
    },
    12961: (e, n, p) => {
      "use strict";
      p.d(n, {
        LX: () => m,
        MA: () => f,
        _W: () => u,
        Lc: () => R,
        Ms: () => B,
      });
      var r = p(72487),
        a = p(50327),
        t = p(45519);
      let P = { m: "margin", p: "padding" },
        i = {
          t: "Top",
          r: "Right",
          b: "Bottom",
          l: "Left",
          x: ["Left", "Right"],
          y: ["Top", "Bottom"],
        },
        o = { marginX: "mx", marginY: "my", paddingX: "px", paddingY: "py" },
        s = (function (e) {
          let n = {};
          return (p) => (void 0 === n[p] && (n[p] = e(p)), n[p]);
        })((e) => {
          if (e.length > 2) {
            if (!o[e]) return [e];
            e = o[e];
          }
          let [n, p] = e.split(""),
            r = P[n],
            a = i[p] || "";
          return Array.isArray(a) ? a.map((e) => r + e) : [r + a];
        }),
        l = [
          "m",
          "mt",
          "mr",
          "mb",
          "ml",
          "mx",
          "my",
          "margin",
          "marginTop",
          "marginRight",
          "marginBottom",
          "marginLeft",
          "marginX",
          "marginY",
          "marginInline",
          "marginInlineStart",
          "marginInlineEnd",
          "marginBlock",
          "marginBlockStart",
          "marginBlockEnd",
        ],
        c = [
          "p",
          "pt",
          "pr",
          "pb",
          "pl",
          "px",
          "py",
          "padding",
          "paddingTop",
          "paddingRight",
          "paddingBottom",
          "paddingLeft",
          "paddingX",
          "paddingY",
          "paddingInline",
          "paddingInlineStart",
          "paddingInlineEnd",
          "paddingBlock",
          "paddingBlockStart",
          "paddingBlockEnd",
        ],
        b = [...l, ...c];
      function f(e, n, p, r) {
        let t = (0, a.Yn)(e, n, !0) ?? p;
        return "number" == typeof t || "string" == typeof t
          ? (e) =>
              "string" == typeof e
                ? e
                : "string" == typeof t
                  ? `calc(${e} * ${t})`
                  : t * e
          : Array.isArray(t)
            ? (e) => {
                if ("string" == typeof e) return e;
                let n = t[Math.abs(e)];
                return e >= 0 ? n : "number" == typeof n ? -n : `-${n}`;
              }
            : "function" == typeof t
              ? t
              : () => void 0;
      }
      function m(e) {
        return f(e, "spacing", 8, "spacing");
      }
      function u(e, n) {
        return "string" == typeof n || null == n ? n : e(n);
      }
      function d(e, n) {
        let p = m(e.theme);
        return Object.keys(e)
          .map((a) =>
            (function (e, n, p, a) {
              var t;
              if (!n.includes(p)) return null;
              let P =
                  ((t = s(p)),
                  (e) => t.reduce((n, p) => ((n[p] = u(a, e)), n), {})),
                i = e[p];
              return (0, r.NI)(e, i, P);
            })(e, n, a, p)
          )
          .reduce(t.A, {});
      }
      function R(e) {
        return d(e, l);
      }
      function B(e) {
        return d(e, c);
      }
      function N(e) {
        return d(e, b);
      }
      (R.propTypes = {}),
        (R.filterProps = l),
        (B.propTypes = {}),
        (B.filterProps = c),
        (N.propTypes = {}),
        (N.filterProps = b);
    },
    14679: (e, n, p) => {
      "use strict";
      p.d(n, { K: () => i });
      var r = p(19271),
        a = p(67405),
        t = p(47713),
        P = p(92634);
      class i {
        static async create(e) {
          if (!i.isSupported()) throw Error("Stockfish 16 is not supported");
          let n = (0, t.eO)();
          n || console.log("Single thread mode");
          let p = async (n) => {
              await (0, P.Wj)(
                n,
                ["setoption name Use NNUE value ".concat(!!e), "isready"],
                "readyok"
              );
            },
            o = e ? r.Qz.Stockfish16NNUE : r.Qz.Stockfish16;
          return a.Y.create(
            o,
            n
              ? "engines/stockfish-16/stockfish-nnue-16.js"
              : "engines/stockfish-16/stockfish-nnue-16-single.js",
            p
          );
        }
        static isSupported() {
          return (0, t.TH)();
        }
      }
    },
    15027: (e, n, p) => {
      "use strict";
      p.d(n, { IJ: () => v, Ay: () => D });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(79550),
        i = p(54773),
        o = p(52196),
        s = p(23770),
        l = p(90917),
        c = p(40436),
        b = p(24766),
        f = p(40053),
        m = p(11951),
        u = p(47951),
        d = p(45879);
      function R(e) {
        return (0, d.Ay)("MuiPopover", e);
      }
      (0, u.A)("MuiPopover", ["root", "paper"]);
      var B = p(67360),
        N = p(45867),
        h = p(37876);
      function k(e, n) {
        let p = 0;
        return (
          "number" == typeof n
            ? (p = n)
            : "center" === n
              ? (p = e.height / 2)
              : "bottom" === n && (p = e.height),
          p
        );
      }
      function g(e, n) {
        let p = 0;
        return (
          "number" == typeof n
            ? (p = n)
            : "center" === n
              ? (p = e.width / 2)
              : "right" === n && (p = e.width),
          p
        );
      }
      function K(e) {
        return [e.horizontal, e.vertical]
          .map((e) => ("number" == typeof e ? "".concat(e, "px") : e))
          .join(" ");
      }
      function Q(e) {
        return "function" == typeof e ? e() : e;
      }
      let q = (e) => {
          let { classes: n } = e;
          return (0, t.A)({ root: ["root"], paper: ["paper"] }, R, n);
        },
        y = (0, i.Ay)(f.A, {
          name: "MuiPopover",
          slot: "Root",
          overridesResolver: (e, n) => n.root,
        })({}),
        v = (0, i.Ay)(m.A, {
          name: "MuiPopover",
          slot: "Paper",
          overridesResolver: (e, n) => n.paper,
        })({
          position: "absolute",
          overflowY: "auto",
          overflowX: "hidden",
          minWidth: 16,
          minHeight: 16,
          maxWidth: "calc(100% - 32px)",
          maxHeight: "calc(100% - 32px)",
          outline: 0,
        }),
        D = r.forwardRef(function (e, n) {
          let p = (0, o.b)({ props: e, name: "MuiPopover" }),
            {
              action: t,
              anchorEl: i,
              anchorOrigin: f = { vertical: "top", horizontal: "left" },
              anchorPosition: m,
              anchorReference: u = "anchorEl",
              children: d,
              className: R,
              container: D,
              elevation: S = 8,
              marginThreshold: A = 16,
              open: V,
              PaperProps: G = {},
              slots: C = {},
              slotProps: w = {},
              transformOrigin: x = { vertical: "top", horizontal: "left" },
              TransitionComponent: M,
              transitionDuration: O = "auto",
              TransitionProps: E = {},
              disableScrollLock: I = !1,
              ...L
            } = p,
            z = r.useRef(),
            T = {
              ...p,
              anchorOrigin: f,
              anchorReference: u,
              elevation: S,
              marginThreshold: A,
              transformOrigin: x,
              TransitionComponent: M,
              transitionDuration: O,
              TransitionProps: E,
            },
            _ = q(T),
            F = r.useCallback(() => {
              if ("anchorPosition" === u) return m;
              let e = Q(i),
                n = (
                  e && 1 === e.nodeType ? e : (0, l.A)(z.current).body
                ).getBoundingClientRect();
              return {
                top: n.top + k(n, f.vertical),
                left: n.left + g(n, f.horizontal),
              };
            }, [i, f.horizontal, f.vertical, m, u]),
            j = r.useCallback(
              (e) => ({
                vertical: k(e, x.vertical),
                horizontal: g(e, x.horizontal),
              }),
              [x.horizontal, x.vertical]
            ),
            W = r.useCallback(
              (e) => {
                let n = { width: e.offsetWidth, height: e.offsetHeight },
                  p = j(n);
                if ("none" === u)
                  return { top: null, left: null, transformOrigin: K(p) };
                let r = F(),
                  a = r.top - p.vertical,
                  t = r.left - p.horizontal,
                  P = a + n.height,
                  o = t + n.width,
                  s = (0, c.A)(Q(i)),
                  l = s.innerHeight - A,
                  b = s.innerWidth - A;
                if (null !== A && a < A) {
                  let e = a - A;
                  (a -= e), (p.vertical += e);
                } else if (null !== A && P > l) {
                  let e = P - l;
                  (a -= e), (p.vertical += e);
                }
                if (null !== A && t < A) {
                  let e = t - A;
                  (t -= e), (p.horizontal += e);
                } else if (o > b) {
                  let e = o - b;
                  (t -= e), (p.horizontal += e);
                }
                return {
                  top: "".concat(Math.round(a), "px"),
                  left: "".concat(Math.round(t), "px"),
                  transformOrigin: K(p),
                };
              },
              [i, u, F, j, A]
            ),
            [H, $] = r.useState(V),
            U = r.useCallback(() => {
              let e = z.current;
              if (!e) return;
              let n = W(e);
              null !== n.top && e.style.setProperty("top", n.top),
                null !== n.left && (e.style.left = n.left),
                (e.style.transformOrigin = n.transformOrigin),
                $(!0);
            }, [W]);
          r.useEffect(
            () => (
              I && window.addEventListener("scroll", U),
              () => window.removeEventListener("scroll", U)
            ),
            [i, I, U]
          );
          let Z = () => {
              U();
            },
            Y = () => {
              $(!1);
            };
          r.useEffect(() => {
            V && U();
          }),
            r.useImperativeHandle(
              t,
              () =>
                V
                  ? {
                      updatePosition: () => {
                        U();
                      },
                    }
                  : null,
              [V, U]
            ),
            r.useEffect(() => {
              if (!V) return;
              let e = (0, s.A)(() => {
                  U();
                }),
                n = (0, c.A)(Q(i));
              return (
                n.addEventListener("resize", e),
                () => {
                  e.clear(), n.removeEventListener("resize", e);
                }
              );
            }, [i, V, U]);
          let J = O,
            X = {
              slots: { transition: M, ...C },
              slotProps: { transition: E, paper: G, ...w },
            },
            [ee, en] = (0, B.A)("transition", {
              elementType: b.A,
              externalForwardedProps: X,
              ownerState: T,
              getSlotProps: (e) => ({
                ...e,
                onEntering: (n, p) => {
                  var r;
                  null === (r = e.onEntering) ||
                    void 0 === r ||
                    r.call(e, n, p),
                    Z();
                },
                onExited: (n) => {
                  var p;
                  null === (p = e.onExited) || void 0 === p || p.call(e, n),
                    Y();
                },
              }),
              additionalProps: { appear: !0, in: V },
            });
          "auto" !== O || ee.muiSupportAuto || (J = void 0);
          let ep = D || (i ? (0, l.A)(Q(i)).body : void 0),
            [er, { slots: ea, slotProps: et, ...eP }] = (0, B.A)("root", {
              ref: n,
              elementType: y,
              externalForwardedProps: { ...X, ...L },
              shouldForwardComponentProp: !0,
              additionalProps: {
                slots: { backdrop: C.backdrop },
                slotProps: {
                  backdrop: (0, N.A)(
                    "function" == typeof w.backdrop
                      ? w.backdrop(T)
                      : w.backdrop,
                    { invisible: !0 }
                  ),
                },
                container: ep,
                open: V,
              },
              ownerState: T,
              className: (0, a.A)(_.root, R),
            }),
            [ei, eo] = (0, B.A)("paper", {
              ref: z,
              className: _.paper,
              elementType: v,
              externalForwardedProps: X,
              shouldForwardComponentProp: !0,
              additionalProps: {
                elevation: S,
                style: H ? void 0 : { opacity: 0 },
              },
              ownerState: T,
            });
          return (0, h.jsx)(er, {
            ...eP,
            ...(!(0, P.A)(er) && {
              slots: ea,
              slotProps: et,
              disableScrollLock: I,
            }),
            children: (0, h.jsx)(ee, {
              ...en,
              timeout: J,
              children: (0, h.jsx)(ei, { ...eo, children: d }),
            }),
          });
        });
    },
    15113: (e, n, p) => {
      "use strict";
      p.d(n, { Ay: () => R, HX: () => B, tT: () => h });
      var r = p(44501),
        a = p(21398),
        t = p(67955),
        P = p(78455),
        i = p(74849),
        o = p(14232),
        s = p(41945),
        l =
          /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,
        c = (0, s.A)(function (e) {
          return (
            l.test(e) ||
            (111 === e.charCodeAt(0) &&
              110 === e.charCodeAt(1) &&
              91 > e.charCodeAt(2))
          );
        }),
        b = function (e) {
          return "theme" !== e;
        },
        f = function (e) {
          return "string" == typeof e && e.charCodeAt(0) > 96 ? c : b;
        },
        m = function (e, n, p) {
          var r;
          if (n) {
            var a = n.shouldForwardProp;
            r =
              e.__emotion_forwardProp && a
                ? function (n) {
                    return e.__emotion_forwardProp(n) && a(n);
                  }
                : a;
          }
          return (
            "function" != typeof r && p && (r = e.__emotion_forwardProp), r
          );
        },
        u = function (e) {
          var n = e.cache,
            p = e.serialized,
            r = e.isStringTag;
          return (
            (0, i.SF)(n, p, r),
            (0, P.s)(function () {
              return (0, i.sk)(n, p, r);
            }),
            null
          );
        },
        d = function e(n, p) {
          var P,
            s,
            l = n.__emotion_real === n,
            c = (l && n.__emotion_base) || n;
          void 0 !== p && ((P = p.label), (s = p.target));
          var b = m(n, p, l),
            d = b || f(c),
            R = !d("as");
          return function () {
            var B = arguments,
              N =
                l && void 0 !== n.__emotion_styles
                  ? n.__emotion_styles.slice(0)
                  : [];
            if (
              (void 0 !== P && N.push("label:" + P + ";"),
              null == B[0] || void 0 === B[0].raw)
            )
              N.push.apply(N, B);
            else {
              var h = B[0];
              N.push(h[0]);
              for (var k = B.length, g = 1; g < k; g++) N.push(B[g], h[g]);
            }
            var K = (0, a.w)(function (e, n, p) {
              var r = (R && e.as) || c,
                P = "",
                l = [],
                m = e;
              if (null == e.theme) {
                for (var B in ((m = {}), e)) m[B] = e[B];
                m.theme = o.useContext(a.T);
              }
              "string" == typeof e.className
                ? (P = (0, i.Rk)(n.registered, l, e.className))
                : null != e.className && (P = e.className + " ");
              var h = (0, t.J)(N.concat(l), n.registered, m);
              (P += n.key + "-" + h.name), void 0 !== s && (P += " " + s);
              var k = R && void 0 === b ? f(r) : d,
                g = {};
              for (var K in e) (!R || "as" !== K) && k(K) && (g[K] = e[K]);
              return (
                (g.className = P),
                p && (g.ref = p),
                o.createElement(
                  o.Fragment,
                  null,
                  o.createElement(u, {
                    cache: n,
                    serialized: h,
                    isStringTag: "string" == typeof r,
                  }),
                  o.createElement(r, g)
                )
              );
            });
            return (
              (K.displayName =
                void 0 !== P
                  ? P
                  : "Styled(" +
                    ("string" == typeof c
                      ? c
                      : c.displayName || c.name || "Component") +
                    ")"),
              (K.defaultProps = n.defaultProps),
              (K.__emotion_real = K),
              (K.__emotion_base = c),
              (K.__emotion_styles = N),
              (K.__emotion_forwardProp = b),
              Object.defineProperty(K, "toString", {
                value: function () {
                  return "." + s;
                },
              }),
              (K.withComponent = function (n, a) {
                return e(
                  n,
                  (0, r.A)({}, p, a, { shouldForwardProp: m(K, a, !0) })
                ).apply(void 0, N);
              }),
              K
            );
          };
        }.bind(null);
      function R(e, n) {
        return d(e, n);
      }
      function B(e, n) {
        Array.isArray(e.__emotion_styles) &&
          (e.__emotion_styles = n(e.__emotion_styles));
      }
      [
        "a",
        "abbr",
        "address",
        "area",
        "article",
        "aside",
        "audio",
        "b",
        "base",
        "bdi",
        "bdo",
        "big",
        "blockquote",
        "body",
        "br",
        "button",
        "canvas",
        "caption",
        "cite",
        "code",
        "col",
        "colgroup",
        "data",
        "datalist",
        "dd",
        "del",
        "details",
        "dfn",
        "dialog",
        "div",
        "dl",
        "dt",
        "em",
        "embed",
        "fieldset",
        "figcaption",
        "figure",
        "footer",
        "form",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "head",
        "header",
        "hgroup",
        "hr",
        "html",
        "i",
        "iframe",
        "img",
        "input",
        "ins",
        "kbd",
        "keygen",
        "label",
        "legend",
        "li",
        "link",
        "main",
        "map",
        "mark",
        "marquee",
        "menu",
        "menuitem",
        "meta",
        "meter",
        "nav",
        "noscript",
        "object",
        "ol",
        "optgroup",
        "option",
        "output",
        "p",
        "param",
        "picture",
        "pre",
        "progress",
        "q",
        "rp",
        "rt",
        "ruby",
        "s",
        "samp",
        "script",
        "section",
        "select",
        "small",
        "source",
        "span",
        "strong",
        "style",
        "sub",
        "summary",
        "sup",
        "table",
        "tbody",
        "td",
        "textarea",
        "tfoot",
        "th",
        "thead",
        "time",
        "title",
        "tr",
        "track",
        "u",
        "ul",
        "var",
        "video",
        "wbr",
        "circle",
        "clipPath",
        "defs",
        "ellipse",
        "foreignObject",
        "g",
        "image",
        "line",
        "linearGradient",
        "mask",
        "path",
        "pattern",
        "polygon",
        "polyline",
        "radialGradient",
        "rect",
        "stop",
        "svg",
        "text",
        "tspan",
      ].forEach(function (e) {
        d[e] = d(e);
      });
      let N = [];
      function h(e) {
        return (N[0] = e), (0, t.J)(N);
      }
    },
    15783: (e, n, p) => {
      "use strict";
      function r(e = window) {
        let n = e.document.documentElement.clientWidth;
        return e.innerWidth - n;
      }
      p.d(n, { A: () => r });
    },
    16291: (e, n, p) => {
      "use strict";
      p.d(n, { Ay: () => b });
      var r = p(15113),
        a = p(12535),
        t = p(89856),
        P = p(74615),
        i = p(98140);
      let o = (0, t.A)();
      function s(e) {
        return "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e;
      }
      function l(e, n) {
        let p = "function" == typeof n ? n(e) : n;
        if (Array.isArray(p)) return p.flatMap((n) => l(e, n));
        if (Array.isArray(p?.variants)) {
          let n;
          if (p.isProcessed) n = p.style;
          else {
            let { variants: e, ...r } = p;
            n = r;
          }
          return c(e, p.variants, [n]);
        }
        return p?.isProcessed ? p.style : p;
      }
      function c(e, n, p = []) {
        let r;
        e: for (let a = 0; a < n.length; a += 1) {
          let t = n[a];
          if ("function" == typeof t.props) {
            if (
              ((r ??= { ...e, ...e.ownerState, ownerState: e.ownerState }),
              !t.props(r))
            )
              continue;
          } else
            for (let n in t.props)
              if (e[n] !== t.props[n] && e.ownerState?.[n] !== t.props[n])
                continue e;
          "function" == typeof t.style
            ? ((r ??= { ...e, ...e.ownerState, ownerState: e.ownerState }),
              p.push(t.style(r)))
            : p.push(t.style);
        }
        return p;
      }
      function b(e = {}) {
        let {
          themeId: n,
          defaultTheme: p = o,
          rootShouldForwardProp: t = s,
          slotShouldForwardProp: f = s,
        } = e;
        function m(e) {
          e.theme = !(function (e) {
            for (let n in e) return !1;
            return !0;
          })(e.theme)
            ? e.theme[n] || e.theme
            : p;
        }
        return (e, n = {}) => {
          var p, o, b, u, d;
          (0, r.HX)(e, (e) => e.filter((e) => e !== P.A));
          let {
              name: R,
              slot: B,
              skipVariantsResolver: N,
              skipSx: h,
              overridesResolver: k = (p = (o = B)
                ? o.charAt(0).toLowerCase() + o.slice(1)
                : o)
                ? (e, n) => n[p]
                : null,
              ...g
            } = n,
            K = void 0 !== N ? N : (B && "Root" !== B && "root" !== B) || !1,
            Q = h || !1,
            q = s;
          "Root" === B || "root" === B
            ? (q = t)
            : B
              ? (q = f)
              : "string" == typeof (b = e) &&
                b.charCodeAt(0) > 96 &&
                (q = void 0);
          let y = (0, r.Ay)(e, {
              shouldForwardProp: q,
              label: ((u = 0), (d = 0), void 0),
              ...g,
            }),
            v = (e) => {
              if ("function" == typeof e && e.__emotion_real !== e)
                return function (n) {
                  return l(n, e);
                };
              if ((0, a.Q)(e)) {
                let n = (0, i.A)(e);
                return n.variants
                  ? function (e) {
                      return l(e, n);
                    }
                  : n.style;
              }
              return e;
            },
            D = (...n) => {
              let p = [],
                r = n.map(v),
                a = [];
              if (
                (p.push(m),
                R &&
                  k &&
                  a.push(function (e) {
                    let n = e.theme,
                      p = n.components?.[R]?.styleOverrides;
                    if (!p) return null;
                    let r = {};
                    for (let n in p) r[n] = l(e, p[n]);
                    return k(e, r);
                  }),
                R &&
                  !K &&
                  a.push(function (e) {
                    let n = e.theme,
                      p = n?.components?.[R]?.variants;
                    return p ? c(e, p) : null;
                  }),
                Q || a.push(P.A),
                Array.isArray(r[0]))
              ) {
                let e;
                let n = r.shift(),
                  t = Array(p.length).fill(""),
                  P = Array(a.length).fill("");
                ((e = [...t, ...n, ...P]).raw = [...t, ...n.raw, ...P]),
                  p.unshift(e);
              }
              let t = y(...p, ...r, ...a);
              return e.muiName && (t.muiName = e.muiName), t;
            };
          return y.withConfig && (D.withConfig = y.withConfig), D;
        };
      }
    },
    16724: (e, n, p) => {
      "use strict";
      function r(e, n) {
        return (r = Object.setPrototypeOf
          ? Object.setPrototypeOf.bind()
          : function (e, n) {
              return (e.__proto__ = n), e;
            })(e, n);
      }
      function a(e, n) {
        (e.prototype = Object.create(n.prototype)),
          (e.prototype.constructor = e),
          r(e, n);
      }
      p.d(n, { A: () => a });
    },
    18070: (e, n, p) => {
      "use strict";
      p.d(n, { t: () => t });
      var r = p(90089),
        a = p(37149),
        t = new (class extends r.Q {
          #e = !0;
          #n;
          #p;
          constructor() {
            super(),
              (this.#p = (e) => {
                if (!a.S$ && window.addEventListener) {
                  let n = () => e(!0),
                    p = () => e(!1);
                  return (
                    window.addEventListener("online", n, !1),
                    window.addEventListener("offline", p, !1),
                    () => {
                      window.removeEventListener("online", n),
                        window.removeEventListener("offline", p);
                    }
                  );
                }
              });
          }
          onSubscribe() {
            this.#n || this.setEventListener(this.#p);
          }
          onUnsubscribe() {
            this.hasListeners() || (this.#n?.(), (this.#n = void 0));
          }
          setEventListener(e) {
            (this.#p = e),
              this.#n?.(),
              (this.#n = e(this.setOnline.bind(this)));
          }
          setOnline(e) {
            this.#e !== e &&
              ((this.#e = e),
              this.listeners.forEach((n) => {
                n(e);
              }));
          }
          isOnline() {
            return this.#e;
          }
        })();
    },
    19271: (e, n, p) => {
      "use strict";
      p.d(n, { By: () => r, Q1: () => P, Qz: () => a, eK: () => t });
      var r = (function (e) {
          return (
            (e.Pgn = "pgn"),
            (e.ChessCom = "chesscom"),
            (e.Lichess = "lichess"),
            e
          );
        })({}),
        a = (function (e) {
          return (
            (e.Stockfish17 = "stockfish_17"),
            (e.Stockfish17Lite = "stockfish_17_lite"),
            (e.Stockfish16_1 = "stockfish_16_1"),
            (e.Stockfish16_1Lite = "stockfish_16_1_lite"),
            (e.Stockfish16NNUE = "stockfish_16_nnue"),
            (e.Stockfish16 = "stockfish_16"),
            (e.Stockfish11 = "stockfish_11"),
            e
          );
        })({}),
        t = (function (e) {
          return (
            (e.Blunder = "blunder"),
            (e.Mistake = "mistake"),
            (e.Inaccuracy = "inaccuracy"),
            (e.Okay = "okay"),
            (e.Excellent = "excellent"),
            (e.Best = "best"),
            (e.Forced = "forced"),
            (e.Opening = "opening"),
            (e.Perfect = "perfect"),
            (e.Splendid = "splendid"),
            e
          );
        })({}),
        P = (function (e) {
          return (e.White = "w"), (e.Black = "b"), e;
        })({});
    },
    21398: (e, n, p) => {
      "use strict";
      p.d(n, { E: () => u, T: () => l, c: () => f, h: () => c, w: () => s });
      var r = p(14232),
        a = p(3904),
        t = p(74849),
        P = p(67955),
        i = p(78455),
        o = r.createContext(
          "undefined" != typeof HTMLElement ? (0, a.A)({ key: "css" }) : null
        );
      o.Provider;
      var s = function (e) {
          return (0, r.forwardRef)(function (n, p) {
            return e(n, (0, r.useContext)(o), p);
          });
        },
        l = r.createContext({}),
        c = {}.hasOwnProperty,
        b = "__EMOTION_TYPE_PLEASE_DO_NOT_USE__",
        f = function (e, n) {
          var p = {};
          for (var r in n) c.call(n, r) && (p[r] = n[r]);
          return (p[b] = e), p;
        },
        m = function (e) {
          var n = e.cache,
            p = e.serialized,
            r = e.isStringTag;
          return (
            (0, t.SF)(n, p, r),
            (0, i.s)(function () {
              return (0, t.sk)(n, p, r);
            }),
            null
          );
        },
        u = s(function (e, n, p) {
          var a = e.css;
          "string" == typeof a &&
            void 0 !== n.registered[a] &&
            (a = n.registered[a]);
          var i = e[b],
            o = [a],
            s = "";
          "string" == typeof e.className
            ? (s = (0, t.Rk)(n.registered, o, e.className))
            : null != e.className && (s = e.className + " ");
          var f = (0, P.J)(o, void 0, r.useContext(l));
          s += n.key + "-" + f.name;
          var u = {};
          for (var d in e)
            c.call(e, d) && "css" !== d && d !== b && (u[d] = e[d]);
          return (
            (u.className = s),
            p && (u.ref = p),
            r.createElement(
              r.Fragment,
              null,
              r.createElement(m, {
                cache: n,
                serialized: f,
                isStringTag: "string" == typeof i,
              }),
              r.createElement(i, u)
            )
          );
        });
    },
    21998: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => N });
      var r = p(14232),
        a = p(12535),
        t = p(4697),
        P = p(60129),
        i = p(68275),
        o = p(54773),
        s = p(82987),
        l = p(78457),
        c = p(52196),
        b = p(22138),
        f = p(80027),
        m = p(37876);
      let u = (e) => {
          let {
              classes: n,
              disableUnderline: p,
              startAdornment: r,
              endAdornment: a,
              size: P,
              hiddenLabel: i,
              multiline: o,
            } = e,
            s = {
              root: [
                "root",
                !p && "underline",
                r && "adornedStart",
                a && "adornedEnd",
                "small" === P && "size".concat((0, f.A)(P)),
                i && "hiddenLabel",
                o && "multiline",
              ],
              input: ["input"],
            },
            l = (0, t.A)(s, b.N, n);
          return { ...n, ...l };
        },
        d = (0, o.Ay)(P.Sh, {
          shouldForwardProp: (e) => (0, i.A)(e) || "classes" === e,
          name: "MuiFilledInput",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [...(0, P.WC)(e, n), !p.disableUnderline && n.underline];
          },
        })(
          (0, s.A)((e) => {
            let { theme: n } = e,
              p = "light" === n.palette.mode,
              r = p ? "rgba(0, 0, 0, 0.06)" : "rgba(255, 255, 255, 0.09)";
            return {
              position: "relative",
              backgroundColor: n.vars ? n.vars.palette.FilledInput.bg : r,
              borderTopLeftRadius: (n.vars || n).shape.borderRadius,
              borderTopRightRadius: (n.vars || n).shape.borderRadius,
              transition: n.transitions.create("background-color", {
                duration: n.transitions.duration.shorter,
                easing: n.transitions.easing.easeOut,
              }),
              "&:hover": {
                backgroundColor: n.vars
                  ? n.vars.palette.FilledInput.hoverBg
                  : p
                    ? "rgba(0, 0, 0, 0.09)"
                    : "rgba(255, 255, 255, 0.13)",
                "@media (hover: none)": {
                  backgroundColor: n.vars ? n.vars.palette.FilledInput.bg : r,
                },
              },
              ["&.".concat(b.A.focused)]: {
                backgroundColor: n.vars ? n.vars.palette.FilledInput.bg : r,
              },
              ["&.".concat(b.A.disabled)]: {
                backgroundColor: n.vars
                  ? n.vars.palette.FilledInput.disabledBg
                  : p
                    ? "rgba(0, 0, 0, 0.12)"
                    : "rgba(255, 255, 255, 0.12)",
              },
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disableUnderline;
                  },
                  style: {
                    "&::after": {
                      left: 0,
                      bottom: 0,
                      content: '""',
                      position: "absolute",
                      right: 0,
                      transform: "scaleX(0)",
                      transition: n.transitions.create("transform", {
                        duration: n.transitions.duration.shorter,
                        easing: n.transitions.easing.easeOut,
                      }),
                      pointerEvents: "none",
                    },
                    ["&.".concat(b.A.focused, ":after")]: {
                      transform: "scaleX(1) translateX(0)",
                    },
                    ["&.".concat(b.A.error)]: {
                      "&::before, &::after": {
                        borderBottomColor: (n.vars || n).palette.error.main,
                      },
                    },
                    "&::before": {
                      borderBottom: "1px solid ".concat(
                        n.vars
                          ? "rgba("
                              .concat(
                                n.vars.palette.common.onBackgroundChannel,
                                " / "
                              )
                              .concat(n.vars.opacity.inputUnderline, ")")
                          : p
                            ? "rgba(0, 0, 0, 0.42)"
                            : "rgba(255, 255, 255, 0.7)"
                      ),
                      left: 0,
                      bottom: 0,
                      content: '"\\00a0"',
                      position: "absolute",
                      right: 0,
                      transition: n.transitions.create("border-bottom-color", {
                        duration: n.transitions.duration.shorter,
                      }),
                      pointerEvents: "none",
                    },
                    ["&:hover:not(."
                      .concat(b.A.disabled, ", .")
                      .concat(b.A.error, "):before")]: {
                      borderBottom: "1px solid ".concat(
                        (n.vars || n).palette.text.primary
                      ),
                    },
                    ["&.".concat(b.A.disabled, ":before")]: {
                      borderBottomStyle: "dotted",
                    },
                  },
                },
                ...Object.entries(n.palette)
                  .filter((0, l.A)())
                  .map((e) => {
                    var p;
                    let [r] = e;
                    return {
                      props: { disableUnderline: !1, color: r },
                      style: {
                        "&::after": {
                          borderBottom: "2px solid ".concat(
                            null === (p = (n.vars || n).palette[r]) ||
                              void 0 === p
                              ? void 0
                              : p.main
                          ),
                        },
                      },
                    };
                  }),
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.startAdornment;
                  },
                  style: { paddingLeft: 12 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.endAdornment;
                  },
                  style: { paddingRight: 12 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline;
                  },
                  style: { padding: "25px 12px 8px" },
                },
                {
                  props: (e) => {
                    let { ownerState: n, size: p } = e;
                    return n.multiline && "small" === p;
                  },
                  style: { paddingTop: 21, paddingBottom: 4 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline && n.hiddenLabel;
                  },
                  style: { paddingTop: 16, paddingBottom: 17 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline && n.hiddenLabel && "small" === n.size;
                  },
                  style: { paddingTop: 8, paddingBottom: 9 },
                },
              ],
            };
          })
        ),
        R = (0, o.Ay)(P.ck, {
          name: "MuiFilledInput",
          slot: "Input",
          overridesResolver: P.Oj,
        })(
          (0, s.A)((e) => {
            let { theme: n } = e;
            return {
              paddingTop: 25,
              paddingRight: 12,
              paddingBottom: 8,
              paddingLeft: 12,
              ...(!n.vars && {
                "&:-webkit-autofill": {
                  WebkitBoxShadow:
                    "light" === n.palette.mode
                      ? null
                      : "0 0 0 100px #266798 inset",
                  WebkitTextFillColor:
                    "light" === n.palette.mode ? null : "#fff",
                  caretColor: "light" === n.palette.mode ? null : "#fff",
                  borderTopLeftRadius: "inherit",
                  borderTopRightRadius: "inherit",
                },
              }),
              ...(n.vars && {
                "&:-webkit-autofill": {
                  borderTopLeftRadius: "inherit",
                  borderTopRightRadius: "inherit",
                },
                [n.getColorSchemeSelector("dark")]: {
                  "&:-webkit-autofill": {
                    WebkitBoxShadow: "0 0 0 100px #266798 inset",
                    WebkitTextFillColor: "#fff",
                    caretColor: "#fff",
                  },
                },
              }),
              variants: [
                {
                  props: { size: "small" },
                  style: { paddingTop: 21, paddingBottom: 4 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.hiddenLabel;
                  },
                  style: { paddingTop: 16, paddingBottom: 17 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.startAdornment;
                  },
                  style: { paddingLeft: 0 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.endAdornment;
                  },
                  style: { paddingRight: 0 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.hiddenLabel && "small" === n.size;
                  },
                  style: { paddingTop: 8, paddingBottom: 9 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline;
                  },
                  style: {
                    paddingTop: 0,
                    paddingBottom: 0,
                    paddingLeft: 0,
                    paddingRight: 0,
                  },
                },
              ],
            };
          })
        ),
        B = r.forwardRef(function (e, n) {
          var p, r, t, i;
          let o = (0, c.b)({ props: e, name: "MuiFilledInput" }),
            {
              disableUnderline: s = !1,
              components: l = {},
              componentsProps: b,
              fullWidth: f = !1,
              hiddenLabel: B,
              inputComponent: N = "input",
              multiline: h = !1,
              slotProps: k,
              slots: g = {},
              type: K = "text",
              ...Q
            } = o,
            q = {
              ...o,
              disableUnderline: s,
              fullWidth: f,
              inputComponent: N,
              multiline: h,
              type: K,
            },
            y = u(o),
            v = { root: { ownerState: q }, input: { ownerState: q } },
            D = (null != k ? k : b) ? (0, a.A)(v, null != k ? k : b) : v,
            S =
              null !==
                (r = null !== (p = g.root) && void 0 !== p ? p : l.Root) &&
              void 0 !== r
                ? r
                : d,
            A =
              null !==
                (i = null !== (t = g.input) && void 0 !== t ? t : l.Input) &&
              void 0 !== i
                ? i
                : R;
          return (0, m.jsx)(P.Ay, {
            slots: { root: S, input: A },
            slotProps: D,
            fullWidth: f,
            inputComponent: N,
            multiline: h,
            ref: n,
            type: K,
            ...Q,
            classes: y,
          });
        });
      B.muiName = "Input";
      let N = B;
    },
    22138: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, N: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiFilledInput", e);
      }
      let P = {
        ...p(40642).A,
        ...(0, r.A)("MuiFilledInput", [
          "root",
          "underline",
          "input",
          "adornedStart",
          "adornedEnd",
          "sizeSmall",
          "multiline",
          "hiddenLabel",
        ]),
      };
    },
    22277: (e, n, p) => {
      "use strict";
      p.d(n, { OS: () => r, d$: () => v });
      let r = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
      class a {
        color;
        from;
        to;
        piece;
        captured;
        promotion;
        flags;
        san;
        lan;
        before;
        after;
        constructor(e, n) {
          let {
              color: p,
              piece: r,
              from: a,
              to: i,
              flags: o,
              captured: s,
              promotion: l,
            } = n,
            c = k(a),
            b = k(i);
          for (let a in ((this.color = p),
          (this.piece = r),
          (this.from = c),
          (this.to = b),
          (this.san = e._moveToSan(n, e._moves({ legal: !0 }))),
          (this.lan = c + b),
          (this.before = e.fen()),
          e._makeMove(n),
          (this.after = e.fen()),
          e._undoMove(),
          (this.flags = ""),
          P))
            P[a] & o && (this.flags += t[a]);
          s && (this.captured = s),
            l && ((this.promotion = l), (this.lan += l));
        }
        isCapture() {
          return this.flags.indexOf(t.CAPTURE) > -1;
        }
        isPromotion() {
          return this.flags.indexOf(t.PROMOTION) > -1;
        }
        isEnPassant() {
          return this.flags.indexOf(t.EP_CAPTURE) > -1;
        }
        isKingsideCastle() {
          return this.flags.indexOf(t.KSIDE_CASTLE) > -1;
        }
        isQueensideCastle() {
          return this.flags.indexOf(t.QSIDE_CASTLE) > -1;
        }
        isBigPawn() {
          return this.flags.indexOf(t.BIG_PAWN) > -1;
        }
      }
      let t = {
          NORMAL: "n",
          CAPTURE: "c",
          BIG_PAWN: "b",
          EP_CAPTURE: "e",
          PROMOTION: "p",
          KSIDE_CASTLE: "k",
          QSIDE_CASTLE: "q",
        },
        P = {
          NORMAL: 1,
          CAPTURE: 2,
          BIG_PAWN: 4,
          EP_CAPTURE: 8,
          PROMOTION: 16,
          KSIDE_CASTLE: 32,
          QSIDE_CASTLE: 64,
        },
        i = {
          Event: "?",
          Site: "?",
          Date: "????.??.??",
          Round: "?",
          White: "?",
          Black: "?",
          Result: "*",
        },
        o = {
          ...i,
          WhiteTitle: null,
          BlackTitle: null,
          WhiteElo: null,
          BlackElo: null,
          WhiteUSCF: null,
          BlackUSCF: null,
          WhiteNA: null,
          BlackNA: null,
          WhiteType: null,
          BlackType: null,
          EventDate: null,
          EventSponsor: null,
          Section: null,
          Stage: null,
          Board: null,
          Opening: null,
          Variation: null,
          SubVariation: null,
          ECO: null,
          NIC: null,
          Time: null,
          UTCTime: null,
          UTCDate: null,
          TimeControl: null,
          SetUp: null,
          FEN: null,
          Termination: null,
          Annotator: null,
          Mode: null,
          PlyCount: null,
        },
        s = {
          a8: 0,
          b8: 1,
          c8: 2,
          d8: 3,
          e8: 4,
          f8: 5,
          g8: 6,
          h8: 7,
          a7: 16,
          b7: 17,
          c7: 18,
          d7: 19,
          e7: 20,
          f7: 21,
          g7: 22,
          h7: 23,
          a6: 32,
          b6: 33,
          c6: 34,
          d6: 35,
          e6: 36,
          f6: 37,
          g6: 38,
          h6: 39,
          a5: 48,
          b5: 49,
          c5: 50,
          d5: 51,
          e5: 52,
          f5: 53,
          g5: 54,
          h5: 55,
          a4: 64,
          b4: 65,
          c4: 66,
          d4: 67,
          e4: 68,
          f4: 69,
          g4: 70,
          h4: 71,
          a3: 80,
          b3: 81,
          c3: 82,
          d3: 83,
          e3: 84,
          f3: 85,
          g3: 86,
          h3: 87,
          a2: 96,
          b2: 97,
          c2: 98,
          d2: 99,
          e2: 100,
          f2: 101,
          g2: 102,
          h2: 103,
          a1: 112,
          b1: 113,
          c1: 114,
          d1: 115,
          e1: 116,
          f1: 117,
          g1: 118,
          h1: 119,
        },
        l = { b: [16, 32, 17, 15], w: [-16, -32, -17, -15] },
        c = {
          n: [-18, -33, -31, -14, 18, 33, 31, 14],
          b: [-17, -15, 17, 15],
          r: [-16, 1, 16, -1],
          q: [-17, -16, -15, 1, 17, 16, 15, -1],
          k: [-17, -16, -15, 1, 17, 16, 15, -1],
        },
        b = [
          20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0,
          0, 24, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 24, 0, 0, 0, 0,
          20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0,
          0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 24,
          2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0,
          0, 0, 24, 24, 24, 24, 24, 24, 56, 0, 56, 24, 24, 24, 24, 24, 24, 0, 0,
          0, 0, 0, 0, 2, 53, 56, 53, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2,
          24, 2, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 24, 0, 0, 20, 0, 0,
          0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 24, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20,
          0, 0, 0, 0, 24, 0, 0, 0, 0, 20, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 24, 0,
          0, 0, 0, 0, 20, 0, 0, 20, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 20,
        ],
        f = [
          17, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 15, 0, 0, 17, 0, 0, 0, 0,
          0, 16, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 17, 0, 0, 0, 0, 16, 0, 0, 0, 0,
          15, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 16, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0,
          0, 0, 17, 0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 16,
          0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0,
          0, 0, 1, 1, 1, 1, 1, 1, 1, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0,
          0, 0, 0, -15, -16, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0,
          -16, 0, -17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, -16, 0, 0, -17,
          0, 0, 0, 0, 0, 0, 0, 0, -15, 0, 0, 0, -16, 0, 0, 0, -17, 0, 0, 0, 0,
          0, 0, -15, 0, 0, 0, 0, -16, 0, 0, 0, 0, -17, 0, 0, 0, 0, -15, 0, 0, 0,
          0, 0, -16, 0, 0, 0, 0, 0, -17, 0, 0, -15, 0, 0, 0, 0, 0, 0, -16, 0, 0,
          0, 0, 0, 0, -17,
        ],
        m = { p: 1, n: 2, b: 4, r: 8, q: 16, k: 32 },
        u = ["n", "b", "r", "q"],
        d = { k: P.KSIDE_CASTLE, q: P.QSIDE_CASTLE },
        R = {
          w: [
            { square: s.a1, flag: P.QSIDE_CASTLE },
            { square: s.h1, flag: P.KSIDE_CASTLE },
          ],
          b: [
            { square: s.a8, flag: P.QSIDE_CASTLE },
            { square: s.h8, flag: P.KSIDE_CASTLE },
          ],
        },
        B = { b: 1, w: 6 },
        N = ["1-0", "0-1", "1/2-1/2", "*"];
      function h(e) {
        return -1 !== "0123456789".indexOf(e);
      }
      function k(e) {
        let n = 15 & e,
          p = e >> 4;
        return "abcdefgh".substring(n, n + 1) + "87654321".substring(p, p + 1);
      }
      function g(e) {
        return "w" === e ? "b" : "w";
      }
      function K(e, n, p, r, a, t, i = P.NORMAL) {
        let o = r >> 4;
        if ("p" === a && (7 === o || 0 === o))
          for (let o = 0; o < u.length; o++) {
            let s = u[o];
            e.push({
              color: n,
              from: p,
              to: r,
              piece: a,
              captured: t,
              promotion: s,
              flags: i | P.PROMOTION,
            });
          }
        else
          e.push({ color: n, from: p, to: r, piece: a, captured: t, flags: i });
      }
      function Q(e) {
        let n = e.charAt(0);
        if (n >= "a" && n <= "h") {
          if (e.match(/[a-h]\d.*[a-h]\d/)) return;
          return "p";
        }
        return "o" === (n = n.toLowerCase()) ? "k" : n;
      }
      function q(e) {
        return e.replace(/=/, "").replace(/[+#]?[?!]*$/, "");
      }
      function y(e) {
        return e.split(" ").slice(0, 4).join(" ");
      }
      class v {
        _board = Array(128);
        _turn = "w";
        _header = {};
        _kings = { w: -1, b: -1 };
        _epSquare = -1;
        _halfMoves = 0;
        _moveNumber = 0;
        _history = [];
        _comments = {};
        _castling = { w: 0, b: 0 };
        _positionCount = {};
        constructor(e = r, { skipValidation: n = !1 } = {}) {
          this.load(e, { skipValidation: n });
        }
        clear({ preserveHeaders: e = !1 } = {}) {
          (this._board = Array(128)),
            (this._kings = { w: -1, b: -1 }),
            (this._turn = "w"),
            (this._castling = { w: 0, b: 0 }),
            (this._epSquare = -1),
            (this._halfMoves = 0),
            (this._moveNumber = 1),
            (this._history = []),
            (this._comments = {}),
            (this._header = e ? this._header : { ...o }),
            (this._positionCount = {}),
            (this._header.SetUp = null),
            (this._header.FEN = null);
        }
        load(e, { skipValidation: n = !1, preserveHeaders: p = !1 } = {}) {
          let r = e.split(/\s+/);
          if (
            (r.length >= 2 &&
              r.length < 6 &&
              (e = r
                .concat(["-", "-", "0", "1"].slice(-(6 - r.length)))
                .join(" ")),
            (r = e.split(/\s+/)),
            !n)
          ) {
            let { ok: n, error: p } = (function (e) {
              let n = e.split(/\s+/);
              if (6 !== n.length)
                return {
                  ok: !1,
                  error: "Invalid FEN: must contain six space-delimited fields",
                };
              let p = parseInt(n[5], 10);
              if (isNaN(p) || p <= 0)
                return {
                  ok: !1,
                  error: "Invalid FEN: move number must be a positive integer",
                };
              let r = parseInt(n[4], 10);
              if (isNaN(r) || r < 0)
                return {
                  ok: !1,
                  error:
                    "Invalid FEN: half move counter number must be a non-negative integer",
                };
              if (!/^(-|[abcdefgh][36])$/.test(n[3]))
                return {
                  ok: !1,
                  error: "Invalid FEN: en-passant square is invalid",
                };
              if (/[^kKqQ-]/.test(n[2]))
                return {
                  ok: !1,
                  error: "Invalid FEN: castling availability is invalid",
                };
              if (!/^(w|b)$/.test(n[1]))
                return {
                  ok: !1,
                  error: "Invalid FEN: side-to-move is invalid",
                };
              let a = n[0].split("/");
              if (8 !== a.length)
                return {
                  ok: !1,
                  error:
                    "Invalid FEN: piece data does not contain 8 '/'-delimited rows",
                };
              for (let e = 0; e < a.length; e++) {
                let n = 0,
                  p = !1;
                for (let r = 0; r < a[e].length; r++)
                  if (h(a[e][r])) {
                    if (p)
                      return {
                        ok: !1,
                        error:
                          "Invalid FEN: piece data is invalid (consecutive number)",
                      };
                    (n += parseInt(a[e][r], 10)), (p = !0);
                  } else {
                    if (!/^[prnbqkPRNBQK]$/.test(a[e][r]))
                      return {
                        ok: !1,
                        error:
                          "Invalid FEN: piece data is invalid (invalid piece)",
                      };
                    (n += 1), (p = !1);
                  }
                if (8 !== n)
                  return {
                    ok: !1,
                    error:
                      "Invalid FEN: piece data is invalid (too many squares in rank)",
                  };
              }
              if (
                ("3" == n[3][1] && "w" == n[1]) ||
                ("6" == n[3][1] && "b" == n[1])
              )
                return {
                  ok: !1,
                  error: "Invalid FEN: illegal en-passant square",
                };
              for (let { color: e, regex: p } of [
                { color: "white", regex: /K/g },
                { color: "black", regex: /k/g },
              ]) {
                if (!p.test(n[0]))
                  return { ok: !1, error: `Invalid FEN: missing ${e} king` };
                if ((n[0].match(p) || []).length > 1)
                  return { ok: !1, error: `Invalid FEN: too many ${e} kings` };
              }
              return Array.from(a[0] + a[7]).some(
                (e) => "P" === e.toUpperCase()
              )
                ? {
                    ok: !1,
                    error: "Invalid FEN: some pawns are on the edge rows",
                  }
                : { ok: !0 };
            })(e);
            if (!n) throw Error(p);
          }
          let a = r[0],
            t = 0;
          this.clear({ preserveHeaders: p });
          for (let e = 0; e < a.length; e++) {
            let n = a.charAt(e);
            if ("/" === n) t += 8;
            else if (h(n)) t += parseInt(n, 10);
            else {
              let e = n < "a" ? "w" : "b";
              this._put({ type: n.toLowerCase(), color: e }, k(t)), t++;
            }
          }
          (this._turn = r[1]),
            r[2].indexOf("K") > -1 && (this._castling.w |= P.KSIDE_CASTLE),
            r[2].indexOf("Q") > -1 && (this._castling.w |= P.QSIDE_CASTLE),
            r[2].indexOf("k") > -1 && (this._castling.b |= P.KSIDE_CASTLE),
            r[2].indexOf("q") > -1 && (this._castling.b |= P.QSIDE_CASTLE),
            (this._epSquare = "-" === r[3] ? -1 : s[r[3]]),
            (this._halfMoves = parseInt(r[4], 10)),
            (this._moveNumber = parseInt(r[5], 10)),
            this._updateSetup(e),
            this._incPositionCount(e);
        }
        fen() {
          let e = 0,
            n = "";
          for (let p = s.a8; p <= s.h1; p++) {
            if (this._board[p]) {
              e > 0 && ((n += e), (e = 0));
              let { color: r, type: a } = this._board[p];
              n += "w" === r ? a.toUpperCase() : a.toLowerCase();
            } else e++;
            (p + 1) & 136 &&
              (e > 0 && (n += e), p !== s.h1 && (n += "/"), (e = 0), (p += 8));
          }
          let p = "";
          this._castling.w & P.KSIDE_CASTLE && (p += "K"),
            this._castling.w & P.QSIDE_CASTLE && (p += "Q"),
            this._castling.b & P.KSIDE_CASTLE && (p += "k"),
            this._castling.b & P.QSIDE_CASTLE && (p += "q"),
            (p = p || "-");
          let r = "-";
          if (-1 !== this._epSquare) {
            let e = this._epSquare + ("w" === this._turn ? 16 : -16);
            for (let n of [e + 1, e - 1]) {
              if (136 & n) continue;
              let e = this._turn;
              if (this._board[n]?.color === e && this._board[n]?.type === "p") {
                this._makeMove({
                  color: e,
                  from: n,
                  to: this._epSquare,
                  piece: "p",
                  captured: "p",
                  flags: P.EP_CAPTURE,
                });
                let p = !this._isKingAttacked(e);
                if ((this._undoMove(), p)) {
                  r = k(this._epSquare);
                  break;
                }
              }
            }
          }
          return [n, this._turn, p, r, this._halfMoves, this._moveNumber].join(
            " "
          );
        }
        _updateSetup(e) {
          this._history.length > 0 ||
            (e !== r
              ? ((this._header.SetUp = "1"), (this._header.FEN = e))
              : ((this._header.SetUp = null), (this._header.FEN = null)));
        }
        reset() {
          this.load(r);
        }
        get(e) {
          return this._board[s[e]];
        }
        findPiece(e) {
          let n = [];
          for (let p = s.a8; p <= s.h1; p++) {
            if (136 & p) {
              p += 7;
              continue;
            }
            this._board[p] &&
              this._board[p]?.color === e.color &&
              this._board[p].color === e.color &&
              this._board[p].type === e.type &&
              n.push(k(p));
          }
          return n;
        }
        put({ type: e, color: n }, p) {
          return (
            !!this._put({ type: e, color: n }, p) &&
            (this._updateCastlingRights(),
            this._updateEnPassantSquare(),
            this._updateSetup(this.fen()),
            !0)
          );
        }
        _put({ type: e, color: n }, p) {
          if (-1 === "pnbrqkPNBRQK".indexOf(e.toLowerCase()) || !(p in s))
            return !1;
          let r = s[p];
          if ("k" == e && -1 != this._kings[n] && this._kings[n] != r)
            return !1;
          let a = this._board[r];
          return (
            a && "k" === a.type && (this._kings[a.color] = -1),
            (this._board[r] = { type: e, color: n }),
            "k" === e && (this._kings[n] = r),
            !0
          );
        }
        remove(e) {
          let n = this.get(e);
          return (
            delete this._board[s[e]],
            n && "k" === n.type && (this._kings[n.color] = -1),
            this._updateCastlingRights(),
            this._updateEnPassantSquare(),
            this._updateSetup(this.fen()),
            n
          );
        }
        _updateCastlingRights() {
          let e =
              this._board[s.e1]?.type === "k" &&
              this._board[s.e1]?.color === "w",
            n =
              this._board[s.e8]?.type === "k" &&
              this._board[s.e8]?.color === "b";
          (e &&
            this._board[s.a1]?.type === "r" &&
            this._board[s.a1]?.color === "w") ||
            (this._castling.w &= ~P.QSIDE_CASTLE),
            (e &&
              this._board[s.h1]?.type === "r" &&
              this._board[s.h1]?.color === "w") ||
              (this._castling.w &= ~P.KSIDE_CASTLE),
            (n &&
              this._board[s.a8]?.type === "r" &&
              this._board[s.a8]?.color === "b") ||
              (this._castling.b &= ~P.QSIDE_CASTLE),
            (n &&
              this._board[s.h8]?.type === "r" &&
              this._board[s.h8]?.color === "b") ||
              (this._castling.b &= ~P.KSIDE_CASTLE);
        }
        _updateEnPassantSquare() {
          if (-1 === this._epSquare) return;
          let e = this._epSquare + ("w" === this._turn ? -16 : 16),
            n = this._epSquare + ("w" === this._turn ? 16 : -16);
          if (
            null !== this._board[e] ||
            null !== this._board[this._epSquare] ||
            this._board[n]?.color !== g(this._turn) ||
            this._board[n]?.type !== "p"
          ) {
            this._epSquare = -1;
            return;
          }
          [n + 1, n - 1].some(
            (e) =>
              !(136 & e) &&
              this._board[e]?.color === this._turn &&
              this._board[e]?.type === "p"
          ) || (this._epSquare = -1);
        }
        _attacked(e, n, p) {
          let r = [];
          for (let a = s.a8; a <= s.h1; a++) {
            if (136 & a) {
              a += 7;
              continue;
            }
            if (void 0 === this._board[a] || this._board[a].color !== e)
              continue;
            let t = this._board[a],
              P = a - n;
            if (0 === P) continue;
            let i = P + 119;
            if (b[i] & m[t.type]) {
              if ("p" === t.type) {
                if ((P > 0 && "w" === t.color) || (P <= 0 && "b" === t.color)) {
                  if (!p) return !0;
                  r.push(k(a));
                }
                continue;
              }
              if ("n" === t.type || "k" === t.type) {
                if (!p) return !0;
                r.push(k(a));
                continue;
              }
              let e = f[i],
                o = a + e,
                s = !1;
              for (; o !== n; ) {
                if (null != this._board[o]) {
                  s = !0;
                  break;
                }
                o += e;
              }
              if (!s) {
                if (!p) return !0;
                r.push(k(a));
                continue;
              }
            }
          }
          return !!p && r;
        }
        attackers(e, n) {
          return n
            ? this._attacked(n, s[e], !0)
            : this._attacked(this._turn, s[e], !0);
        }
        _isKingAttacked(e) {
          let n = this._kings[e];
          return -1 !== n && this._attacked(g(e), n);
        }
        isAttacked(e, n) {
          return this._attacked(n, s[e]);
        }
        isCheck() {
          return this._isKingAttacked(this._turn);
        }
        inCheck() {
          return this.isCheck();
        }
        isCheckmate() {
          return this.isCheck() && 0 === this._moves().length;
        }
        isStalemate() {
          return !this.isCheck() && 0 === this._moves().length;
        }
        isInsufficientMaterial() {
          let e = { b: 0, n: 0, r: 0, q: 0, k: 0, p: 0 },
            n = [],
            p = 0,
            r = 0;
          for (let a = s.a8; a <= s.h1; a++) {
            if (((r = (r + 1) % 2), 136 & a)) {
              a += 7;
              continue;
            }
            let t = this._board[a];
            t &&
              ((e[t.type] = t.type in e ? e[t.type] + 1 : 1),
              "b" === t.type && n.push(r),
              p++);
          }
          if (2 === p || (3 === p && (1 === e.b || 1 === e.n))) return !0;
          if (p === e.b + 2) {
            let e = 0,
              p = n.length;
            for (let r = 0; r < p; r++) e += n[r];
            if (0 === e || e === p) return !0;
          }
          return !1;
        }
        isThreefoldRepetition() {
          return this._getPositionCount(this.fen()) >= 3;
        }
        isDrawByFiftyMoves() {
          return this._halfMoves >= 100;
        }
        isDraw() {
          return (
            this.isDrawByFiftyMoves() ||
            this.isStalemate() ||
            this.isInsufficientMaterial() ||
            this.isThreefoldRepetition()
          );
        }
        isGameOver() {
          return this.isCheckmate() || this.isStalemate() || this.isDraw();
        }
        moves({ verbose: e = !1, square: n, piece: p } = {}) {
          let r = this._moves({ square: n, piece: p });
          return e
            ? r.map((e) => new a(this, e))
            : r.map((e) => this._moveToSan(e, r));
        }
        _moves({ legal: e = !0, piece: n, square: p } = {}) {
          let r = p ? p.toLowerCase() : void 0,
            a = n?.toLowerCase(),
            t = [],
            i = this._turn,
            o = g(i),
            b = s.a8,
            f = s.h1,
            m = !1;
          if (r) {
            if (!(r in s)) return [];
            (b = f = s[r]), (m = !0);
          }
          for (let e = b; e <= f; e++) {
            let n;
            if (136 & e) {
              e += 7;
              continue;
            }
            if (!this._board[e] || this._board[e].color === o) continue;
            let { type: p } = this._board[e];
            if ("p" === p) {
              if (a && a !== p) continue;
              (n = e + l[i][0]),
                !this._board[n] &&
                  (K(t, i, e, n, "p"),
                  (n = e + l[i][1]),
                  B[i] === e >> 4 &&
                    !this._board[n] &&
                    K(t, i, e, n, "p", void 0, P.BIG_PAWN));
              for (let p = 2; p < 4; p++)
                136 & (n = e + l[i][p]) ||
                  (this._board[n]?.color === o
                    ? K(t, i, e, n, "p", this._board[n].type, P.CAPTURE)
                    : n === this._epSquare &&
                      K(t, i, e, n, "p", "p", P.EP_CAPTURE));
            } else {
              if (a && a !== p) continue;
              for (let r = 0, a = c[p].length; r < a; r++) {
                let a = c[p][r];
                for (n = e; !(136 & (n += a)); ) {
                  if (this._board[n]) {
                    if (this._board[n].color === i) break;
                    K(t, i, e, n, p, this._board[n].type, P.CAPTURE);
                    break;
                  }
                  if ((K(t, i, e, n, p), "n" === p || "k" === p)) break;
                }
              }
            }
          }
          if ((void 0 === a || "k" === a) && (!m || f === this._kings[i])) {
            if (this._castling[i] & P.KSIDE_CASTLE) {
              let e = this._kings[i],
                n = e + 2;
              this._board[e + 1] ||
                this._board[n] ||
                this._attacked(o, this._kings[i]) ||
                this._attacked(o, e + 1) ||
                this._attacked(o, n) ||
                K(t, i, this._kings[i], n, "k", void 0, P.KSIDE_CASTLE);
            }
            if (this._castling[i] & P.QSIDE_CASTLE) {
              let e = this._kings[i],
                n = e - 2;
              this._board[e - 1] ||
                this._board[e - 2] ||
                this._board[e - 3] ||
                this._attacked(o, this._kings[i]) ||
                this._attacked(o, e - 1) ||
                this._attacked(o, n) ||
                K(t, i, this._kings[i], n, "k", void 0, P.QSIDE_CASTLE);
            }
          }
          if (!e || -1 === this._kings[i]) return t;
          let u = [];
          for (let e = 0, n = t.length; e < n; e++)
            this._makeMove(t[e]),
              this._isKingAttacked(i) || u.push(t[e]),
              this._undoMove();
          return u;
        }
        move(e, { strict: n = !1 } = {}) {
          let p = null;
          if ("string" == typeof e) p = this._moveFromSan(e, n);
          else if ("object" == typeof e) {
            let n = this._moves();
            for (let r = 0, a = n.length; r < a; r++)
              if (
                e.from === k(n[r].from) &&
                e.to === k(n[r].to) &&
                (!("promotion" in n[r]) || e.promotion === n[r].promotion)
              ) {
                p = n[r];
                break;
              }
          }
          if (!p) {
            if ("string" == typeof e) throw Error(`Invalid move: ${e}`);
            throw Error(`Invalid move: ${JSON.stringify(e)}`);
          }
          let r = new a(this, p);
          return this._makeMove(p), this._incPositionCount(r.after), r;
        }
        _push(e) {
          this._history.push({
            move: e,
            kings: { b: this._kings.b, w: this._kings.w },
            turn: this._turn,
            castling: { b: this._castling.b, w: this._castling.w },
            epSquare: this._epSquare,
            halfMoves: this._halfMoves,
            moveNumber: this._moveNumber,
          });
        }
        _makeMove(e) {
          let n = this._turn,
            p = g(n);
          if (
            (this._push(e),
            (this._board[e.to] = this._board[e.from]),
            delete this._board[e.from],
            e.flags & P.EP_CAPTURE &&
              ("b" === this._turn
                ? delete this._board[e.to - 16]
                : delete this._board[e.to + 16]),
            e.promotion &&
              (this._board[e.to] = { type: e.promotion, color: n }),
            "k" === this._board[e.to].type)
          ) {
            if (((this._kings[n] = e.to), e.flags & P.KSIDE_CASTLE)) {
              let n = e.to - 1,
                p = e.to + 1;
              (this._board[n] = this._board[p]), delete this._board[p];
            } else if (e.flags & P.QSIDE_CASTLE) {
              let n = e.to + 1,
                p = e.to - 2;
              (this._board[n] = this._board[p]), delete this._board[p];
            }
            this._castling[n] = 0;
          }
          if (this._castling[n]) {
            for (let p = 0, r = R[n].length; p < r; p++)
              if (
                e.from === R[n][p].square &&
                this._castling[n] & R[n][p].flag
              ) {
                this._castling[n] ^= R[n][p].flag;
                break;
              }
          }
          if (this._castling[p]) {
            for (let n = 0, r = R[p].length; n < r; n++)
              if (e.to === R[p][n].square && this._castling[p] & R[p][n].flag) {
                this._castling[p] ^= R[p][n].flag;
                break;
              }
          }
          e.flags & P.BIG_PAWN
            ? "b" === n
              ? (this._epSquare = e.to - 16)
              : (this._epSquare = e.to + 16)
            : (this._epSquare = -1),
            "p" === e.piece
              ? (this._halfMoves = 0)
              : e.flags & (P.CAPTURE | P.EP_CAPTURE)
                ? (this._halfMoves = 0)
                : this._halfMoves++,
            "b" === n && this._moveNumber++,
            (this._turn = p);
        }
        undo() {
          let e = this._undoMove();
          if (e) {
            let n = new a(this, e);
            return this._decPositionCount(n.after), n;
          }
          return null;
        }
        _undoMove() {
          let e = this._history.pop();
          if (void 0 === e) return null;
          let n = e.move;
          (this._kings = e.kings),
            (this._turn = e.turn),
            (this._castling = e.castling),
            (this._epSquare = e.epSquare),
            (this._halfMoves = e.halfMoves),
            (this._moveNumber = e.moveNumber);
          let p = this._turn,
            r = g(p);
          if (
            ((this._board[n.from] = this._board[n.to]),
            (this._board[n.from].type = n.piece),
            delete this._board[n.to],
            n.captured)
          ) {
            if (n.flags & P.EP_CAPTURE) {
              let e;
              (e = "b" === p ? n.to - 16 : n.to + 16),
                (this._board[e] = { type: "p", color: r });
            } else this._board[n.to] = { type: n.captured, color: r };
          }
          if (n.flags & (P.KSIDE_CASTLE | P.QSIDE_CASTLE)) {
            let e, p;
            n.flags & P.KSIDE_CASTLE
              ? ((e = n.to + 1), (p = n.to - 1))
              : ((e = n.to - 2), (p = n.to + 1)),
              (this._board[e] = this._board[p]),
              delete this._board[p];
          }
          return n;
        }
        pgn({ newline: e = "\n", maxWidth: n = 0 } = {}) {
          let p = [],
            r = !1;
          for (let n in this._header)
            this._header[n] && p.push(`[${n} "${this._header[n]}"]` + e),
              (r = !0);
          r && this._history.length && p.push(e);
          let a = (e) => {
              let n = this._comments[this.fen()];
              if (void 0 !== n) {
                let p = e.length > 0 ? " " : "";
                e = `${e}${p}{${n}}`;
              }
              return e;
            },
            t = [];
          for (; this._history.length > 0; ) t.push(this._undoMove());
          let P = [],
            i = "";
          for (0 === t.length && P.push(a("")); t.length > 0; ) {
            i = a(i);
            let e = t.pop();
            if (!e) break;
            if (this._history.length || "b" !== e.color)
              "w" === e.color &&
                (i.length && P.push(i), (i = this._moveNumber + "."));
            else {
              let e = `${this._moveNumber}. ...`;
              i = i ? `${i} ${e}` : e;
            }
            (i = i + " " + this._moveToSan(e, this._moves({ legal: !0 }))),
              this._makeMove(e);
          }
          if (
            (i.length && P.push(a(i)),
            P.push(this._header.Result || "*"),
            0 === n)
          )
            return p.join("") + P.join(" ");
          let o = function () {
              return p.length > 0 && " " === p[p.length - 1] && (p.pop(), !0);
            },
            s = 0;
          for (let r = 0; r < P.length; r++) {
            if (s + P[r].length > n && P[r].includes("{")) {
              s = (function (r, a) {
                for (let t of a.split(" "))
                  if (t) {
                    if (r + t.length > n) {
                      for (; o(); ) r--;
                      p.push(e), (r = 0);
                    }
                    p.push(t), (r += t.length), p.push(" "), r++;
                  }
                return o() && r--, r;
              })(s, P[r]);
              continue;
            }
            s + P[r].length > n && 0 !== r
              ? (" " === p[p.length - 1] && p.pop(), p.push(e), (s = 0))
              : 0 !== r && (p.push(" "), s++),
              p.push(P[r]),
              (s += P[r].length);
          }
          return p.join("");
        }
        header(...e) {
          for (let n = 0; n < e.length; n += 2)
            "string" == typeof e[n] &&
              "string" == typeof e[n + 1] &&
              (this._header[e[n]] = e[n + 1]);
          return this._header;
        }
        setHeader(e, n) {
          return (this._header[e] = n ?? i[e] ?? null), this.getHeaders();
        }
        removeHeader(e) {
          return e in this._header && ((this._header[e] = i[e] || null), !0);
        }
        getHeaders() {
          let e = {};
          for (let [n, p] of Object.entries(this._header))
            null !== p && (e[n] = p);
          return e;
        }
        loadPgn(e, { strict: n = !1, newlineChar: p = "\r?\n" } = {}) {
          function r(e) {
            return e.replace(/\\/g, "\\");
          }
          e = e.trim();
          let a = RegExp(
              "^(\\[((?:" +
                r(p) +
                ")|.)*\\])((?:\\s*" +
                r(p) +
                "){2}|(?:\\s*" +
                r(p) +
                ")*$)"
            ).exec(e),
            t = a && a.length >= 2 ? a[1] : "";
          this.reset();
          let P = (function (e) {
              let n = {},
                a = e.split(new RegExp(r(p))),
                t = "",
                P = "";
              for (let e = 0; e < a.length; e++) {
                let p = /^\s*\[\s*([A-Za-z]+)\s*"(.*)"\s*\]\s*$/;
                (t = a[e].replace(p, "$1")),
                  (P = a[e].replace(p, "$2")),
                  t.trim().length > 0 && (n[t] = P);
              }
              return n;
            })(t),
            i = "";
          for (let e in P)
            "fen" === e.toLowerCase() && (i = P[e]), this.header(e, P[e]);
          if (n) {
            if ("1" === P.SetUp) {
              if (!("FEN" in P))
                throw Error(
                  "Invalid PGN: FEN tag must be supplied with SetUp tag"
                );
              this.load(P.FEN, { preserveHeaders: !0 });
            }
          } else i && this.load(i, { preserveHeaders: !0 });
          let o = function (e) {
              return (
                (e = e.replace(RegExp(r(p), "g"), " ")),
                `{${Array.from(e.slice(1, e.length - 1))
                  .map(function (e) {
                    return 128 > e.charCodeAt(0)
                      ? e.charCodeAt(0).toString(16)
                      : encodeURIComponent(e).replace(/%/g, "").toLowerCase();
                  })
                  .join("")}}`
              );
            },
            s = e
              .replace(t, "")
              .replace(
                RegExp(`({[^}]*})+?|;([^${r(p)}]*)`, "g"),
                function (e, n, p) {
                  return void 0 !== n ? o(n) : " " + o(`{${p.slice(1)}}`);
                }
              )
              .replace(RegExp(r(p), "g"), " "),
            l = /(\([^()]+\))+?/g;
          for (; l.test(s); ) s = s.replace(l, "");
          let c = (s = (s = (s = s.replace(/\d+\.(\.\.)?/g, "")).replace(
            /\.\.\./g,
            ""
          )).replace(/\$\d+/g, ""))
            .trim()
            .split(new RegExp(/\s+/));
          c = c.filter((e) => "" !== e);
          let b = "";
          for (let e = 0; e < c.length; e++) {
            let p = (function (e) {
              if (e.startsWith("{") && e.endsWith("}")) {
                var n;
                return 0 == (n = e.slice(1, e.length - 1)).length
                  ? ""
                  : decodeURIComponent(
                      "%" + (n.match(/.{1,2}/g) || []).join("%")
                    );
              }
            })(c[e]);
            if (void 0 !== p) {
              this._comments[this.fen()] = p;
              continue;
            }
            let r = this._moveFromSan(c[e], n);
            if (null == r) {
              if (N.indexOf(c[e]) > -1) b = c[e];
              else throw Error(`Invalid move in PGN: ${c[e]}`);
            } else
              (b = ""), this._makeMove(r), this._incPositionCount(this.fen());
          }
          b &&
            Object.keys(this._header).length &&
            this._header.Result !== b &&
            this.setHeader("Result", b);
        }
        _moveToSan(e, n) {
          let p = "";
          if (e.flags & P.KSIDE_CASTLE) p = "O-O";
          else if (e.flags & P.QSIDE_CASTLE) p = "O-O-O";
          else {
            if ("p" !== e.piece) {
              let r = (function (e, n) {
                let p = e.from,
                  r = e.to,
                  a = e.piece,
                  t = 0,
                  P = 0,
                  i = 0;
                for (let e = 0, o = n.length; e < o; e++) {
                  let o = n[e].from,
                    s = n[e].to;
                  a === n[e].piece &&
                    p !== o &&
                    r === s &&
                    (t++, p >> 4 == o >> 4 && P++, (15 & p) == (15 & o) && i++);
                }
                return t > 0
                  ? P > 0 && i > 0
                    ? k(p)
                    : i > 0
                      ? k(p).charAt(1)
                      : k(p).charAt(0)
                  : "";
              })(e, n);
              p += e.piece.toUpperCase() + r;
            }
            e.flags & (P.CAPTURE | P.EP_CAPTURE) &&
              ("p" === e.piece && (p += k(e.from)[0]), (p += "x")),
              (p += k(e.to)),
              e.promotion && (p += "=" + e.promotion.toUpperCase());
          }
          return (
            this._makeMove(e),
            this.isCheck() && (this.isCheckmate() ? (p += "#") : (p += "+")),
            this._undoMove(),
            p
          );
        }
        _moveFromSan(e, n = !1) {
          let p, r, a, t, P;
          let i = q(e),
            o = Q(i),
            l = this._moves({ legal: !0, piece: o });
          for (let e = 0, n = l.length; e < n; e++)
            if (i === q(this._moveToSan(l[e], l))) return l[e];
          if (n) return null;
          let c = !1;
          if (
            ((r = i.match(
              /([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/
            ))
              ? ((p = r[1]),
                (a = r[2]),
                (t = r[3]),
                (P = r[4]),
                1 == a.length && (c = !0))
              : (r = i.match(
                  /([pnbrqkPNBRQK])?([a-h]?[1-8]?)x?-?([a-h][1-8])([qrbnQRBN])?/
                )) &&
                ((p = r[1]),
                (a = r[2]),
                (t = r[3]),
                (P = r[4]),
                1 == a.length && (c = !0)),
            (o = Q(i)),
            (l = this._moves({ legal: !0, piece: p || o })),
            !t)
          )
            return null;
          for (let e = 0, n = l.length; e < n; e++)
            if (a) {
              if (
                (!p || p.toLowerCase() == l[e].piece) &&
                s[a] == l[e].from &&
                s[t] == l[e].to &&
                (!P || P.toLowerCase() == l[e].promotion)
              )
                return l[e];
              if (c) {
                let n = k(l[e].from);
                if (
                  (!p || p.toLowerCase() == l[e].piece) &&
                  s[t] == l[e].to &&
                  (a == n[0] || a == n[1]) &&
                  (!P || P.toLowerCase() == l[e].promotion)
                )
                  return l[e];
              }
            } else if (i === q(this._moveToSan(l[e], l)).replace("x", ""))
              return l[e];
          return null;
        }
        ascii() {
          let e = "   +------------------------+\n";
          for (let n = s.a8; n <= s.h1; n++) {
            if (
              (0 == (15 & n) && (e += " " + "87654321"[n >> 4] + " |"),
              this._board[n])
            ) {
              let p = this._board[n].type;
              e +=
                " " +
                ("w" === this._board[n].color
                  ? p.toUpperCase()
                  : p.toLowerCase()) +
                " ";
            } else e += " . ";
            (n + 1) & 136 && ((e += "|\n"), (n += 8));
          }
          return (
            e + "   +------------------------+\n     a  b  c  d  e  f  g  h"
          );
        }
        perft(e) {
          let n = this._moves({ legal: !1 }),
            p = 0,
            r = this._turn;
          for (let a = 0, t = n.length; a < t; a++)
            this._makeMove(n[a]),
              !this._isKingAttacked(r) &&
                (e - 1 > 0 ? (p += this.perft(e - 1)) : p++),
              this._undoMove();
          return p;
        }
        turn() {
          return this._turn;
        }
        board() {
          let e = [],
            n = [];
          for (let p = s.a8; p <= s.h1; p++)
            null == this._board[p]
              ? n.push(null)
              : n.push({
                  square: k(p),
                  type: this._board[p].type,
                  color: this._board[p].color,
                }),
              (p + 1) & 136 && (e.push(n), (n = []), (p += 8));
          return e;
        }
        squareColor(e) {
          if (e in s) {
            let n = s[e];
            return ((n >> 4) + (15 & n)) % 2 == 0 ? "light" : "dark";
          }
          return null;
        }
        history({ verbose: e = !1 } = {}) {
          let n = [],
            p = [];
          for (; this._history.length > 0; ) n.push(this._undoMove());
          for (;;) {
            let r = n.pop();
            if (!r) break;
            e
              ? p.push(new a(this, r))
              : p.push(this._moveToSan(r, this._moves())),
              this._makeMove(r);
          }
          return p;
        }
        _getPositionCount(e) {
          let n = y(e);
          return this._positionCount[n] || 0;
        }
        _incPositionCount(e) {
          let n = y(e);
          void 0 === this._positionCount[n] && (this._positionCount[n] = 0),
            (this._positionCount[n] += 1);
        }
        _decPositionCount(e) {
          let n = y(e);
          1 === this._positionCount[n]
            ? delete this._positionCount[n]
            : (this._positionCount[n] -= 1);
        }
        _pruneComments() {
          let e = [],
            n = {},
            p = (e) => {
              e in this._comments && (n[e] = this._comments[e]);
            };
          for (; this._history.length > 0; ) e.push(this._undoMove());
          for (p(this.fen()); ; ) {
            let n = e.pop();
            if (!n) break;
            this._makeMove(n), p(this.fen());
          }
          this._comments = n;
        }
        getComment() {
          return this._comments[this.fen()];
        }
        setComment(e) {
          this._comments[this.fen()] = e.replace("{", "[").replace("}", "]");
        }
        deleteComment() {
          return this.removeComment();
        }
        removeComment() {
          let e = this._comments[this.fen()];
          return delete this._comments[this.fen()], e;
        }
        getComments() {
          return (
            this._pruneComments(),
            Object.keys(this._comments).map((e) => ({
              fen: e,
              comment: this._comments[e],
            }))
          );
        }
        deleteComments() {
          return this.removeComments();
        }
        removeComments() {
          return (
            this._pruneComments(),
            Object.keys(this._comments).map((e) => {
              let n = this._comments[e];
              return delete this._comments[e], { fen: e, comment: n };
            })
          );
        }
        setCastlingRights(e, n) {
          for (let p of ["k", "q"])
            void 0 !== n[p] &&
              (n[p]
                ? (this._castling[e] |= d[p])
                : (this._castling[e] &= ~d[p]));
          this._updateCastlingRights();
          let p = this.getCastlingRights(e);
          return (
            (void 0 === n.k || n.k === p.k) && (void 0 === n.q || n.q === p.q)
          );
        }
        getCastlingRights(e) {
          return {
            k: (this._castling[e] & d.k) != 0,
            q: (this._castling[e] & d.q) != 0,
          };
        }
        moveNumber() {
          return this._moveNumber;
        }
      }
    },
    22775: (e, n, p) => {
      "use strict";
      function r(e, n) {
        "function" == typeof e ? e(n) : e && (e.current = n);
      }
      p.d(n, { A: () => r });
    },
    23015: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = function (
        e,
        n = Number.MIN_SAFE_INTEGER,
        p = Number.MAX_SAFE_INTEGER
      ) {
        return Math.max(n, Math.min(e, p));
      };
    },
    23368: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, f: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiListItemIcon", e);
      }
      let P = (0, r.A)("MuiListItemIcon", ["root", "alignItemsFlexStart"]);
    },
    23520: (e, n, p) => {
      "use strict";
      var r = p(68128),
        a = {
          childContextTypes: !0,
          contextType: !0,
          contextTypes: !0,
          defaultProps: !0,
          displayName: !0,
          getDefaultProps: !0,
          getDerivedStateFromError: !0,
          getDerivedStateFromProps: !0,
          mixins: !0,
          propTypes: !0,
          type: !0,
        },
        t = {
          name: !0,
          length: !0,
          prototype: !0,
          caller: !0,
          callee: !0,
          arguments: !0,
          arity: !0,
        },
        P = {
          $$typeof: !0,
          compare: !0,
          defaultProps: !0,
          displayName: !0,
          propTypes: !0,
          type: !0,
        },
        i = {};
      function o(e) {
        return r.isMemo(e) ? P : i[e.$$typeof] || a;
      }
      (i[r.ForwardRef] = {
        $$typeof: !0,
        render: !0,
        defaultProps: !0,
        displayName: !0,
        propTypes: !0,
      }),
        (i[r.Memo] = P);
      var s = Object.defineProperty,
        l = Object.getOwnPropertyNames,
        c = Object.getOwnPropertySymbols,
        b = Object.getOwnPropertyDescriptor,
        f = Object.getPrototypeOf,
        m = Object.prototype;
      e.exports = function e(n, p, r) {
        if ("string" != typeof p) {
          if (m) {
            var a = f(p);
            a && a !== m && e(n, a, r);
          }
          var P = l(p);
          c && (P = P.concat(c(p)));
          for (var i = o(n), u = o(p), d = 0; d < P.length; ++d) {
            var R = P[d];
            if (!t[R] && !(r && r[R]) && !(u && u[R]) && !(i && i[R])) {
              var B = b(p, R);
              try {
                s(n, R, B);
              } catch (e) {}
            }
          }
        }
        return n;
      };
    },
    23770: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(24751).A;
    },
    24026: (e, n, p) => {
      "use strict";
      p.d(n, { T: () => t });
      var r = p(19271),
        a = p(67405);
      class t {
        static async create() {
          return a.Y.create(r.Qz.Stockfish11, "engines/stockfish-11.js");
        }
        static isSupported() {
          return !0;
        }
      }
    },
    24307: (e, n, p) => {
      "use strict";
      p.d(n, {
        AC: () => c,
        FA: () => s,
        Kz: () => h,
        LR: () => B,
        QN: () => d,
        RS: () => f,
        T: () => K,
        _0: () => R,
        kf: () => P,
        l3: () => g,
        mi: () => o,
        nY: () => b,
        nt: () => l,
        sI: () => m,
        vc: () => u,
        w0: () => i,
      });
      var r = p(22277),
        a = p(73004),
        t = p(19271);
      let P = (e) => {
          let n = e.history({ verbose: !0 }),
            p = n.map((e) => e.before);
          return (
            p.push(n[n.length - 1].after),
            {
              fens: p,
              uciMoves: n.map((e) => e.from + e.to + (e.promotion || "")),
            }
          );
        },
        i = (e) => {
          let n = new r.d$();
          return n.loadPgn(e), n;
        },
        o = (e) => {
          var n;
          let p = e.getHeaders();
          return {
            pgn: e.pgn(),
            event: p.Event,
            site: p.Site,
            date: p.Date,
            round: null !== (n = p.Round) && void 0 !== n ? n : "?",
            white: {
              name: p.White || "White",
              rating: p.WhiteElo ? Number(p.WhiteElo) : void 0,
            },
            black: {
              name: p.Black || "Black",
              rating: p.BlackElo ? Number(p.BlackElo) : void 0,
            },
            result: p.Result,
            termination: p.Termination,
            timeControl: p.TimeControl,
          };
        },
        s = (e, n) => (e.history().length ? e : l(n)),
        l = function (e) {
          let n =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          e.setHeader("Event", "Chesskit Game"),
            e.setHeader("Site", "Chesskit.org"),
            e.setHeader(
              "Date",
              new Date().toISOString().split("T")[0].replace(/-/g, ".")
            );
          let { white: p, black: r, resigned: a } = n,
            t = e.getHeaders().White,
            P = e.getHeaders().Black,
            i = (null == p ? void 0 : p.name) || ("?" !== t ? t : "White"),
            o = (null == r ? void 0 : r.name) || ("?" !== P ? P : "Black");
          return (
            e.setHeader("White", i),
            e.setHeader("Black", o),
            (null == p ? void 0 : p.rating) &&
              e.setHeader("WhiteElo", "".concat(p.rating)),
            (null == r ? void 0 : r.rating) &&
              e.setHeader("BlackElo", "".concat(r.rating)),
            a &&
              (e.setHeader("Result", "w" === a ? "0-1" : "1-0"),
              e.setHeader(
                "Termination",
                "".concat("w" === a ? o : i, " won by resignation")
              )),
            e.isGameOver() &&
              (e.isCheckmate() &&
                (e.setHeader("Result", "w" === e.turn() ? "0-1" : "1-0"),
                e.setHeader(
                  "Termination",
                  "".concat("w" === e.turn() ? o : i, " won by checkmate")
                )),
              e.isInsufficientMaterial() &&
                (e.setHeader("Result", "1/2-1/2"),
                e.setHeader("Termination", "Draw by insufficient material")),
              e.isStalemate() &&
                (e.setHeader("Result", "1/2-1/2"),
                e.setHeader("Termination", "Draw by stalemate")),
              e.isThreefoldRepetition() &&
                (e.setHeader("Result", "1/2-1/2"),
                e.setHeader("Termination", "Draw by threefold repetition"))),
            e
          );
        },
        c = (e) => {
          let n = new r.d$(e);
          return (e) => {
            try {
              return n.move(u(e)).san;
            } catch (n) {
              return e;
            }
          };
        },
        b = (e) => {
          let n = (0, a.g)(e),
            p = e.lines[0];
          if (p.mate)
            return {
              label: "M".concat(Math.abs(p.mate)),
              whiteBarPercentage: n,
            };
          let r = p.cp;
          if (!r) return { whiteBarPercentage: n, label: "0.0" };
          let t = Math.abs(r) / 100,
            P = t.toFixed(1);
          return (
            P.toString().length > 3 && (P = t.toFixed(0)),
            { whiteBarPercentage: n, label: P }
          );
        },
        f = (e) => new r.d$(e).isStalemate(),
        m = (e) => {
          let n = new r.d$(e);
          return n.isCheckmate() ? n.turn() : null;
        },
        u = (e) => ({
          from: e.slice(0, 2),
          to: e.slice(2, 4),
          promotion: e.slice(4, 5) || void 0,
        }),
        d = (e, n) => {
          let p = new r.d$(e),
            a = n.map((e) => u(e));
          return a[0].to === a[1].to && !!p.get(a[0].to);
        },
        R = (e, n, p) => {
          if (!p.length) return !1;
          let a = new r.d$(e),
            t = "w" === a.turn(),
            P = B(e),
            i = [n, ...p];
          i.length % 2 == 1 && (i = i.slice(0, -1));
          let o = 1,
            s = { w: [], b: [] };
          for (let e of i)
            try {
              let n = a.move(u(e));
              if (n.captured) s[n.color].push(n.captured), (o = 1);
              else if (--o < 0) break;
            } catch (e) {
              return console.error(e), !1;
            }
          for (let e of s.w.slice(0))
            s.b.includes(e) &&
              (s.b.splice(s.b.indexOf(e), 1), s.w.splice(s.w.indexOf(e), 1));
          if (
            1 >= Math.abs(s.w.length - s.b.length) &&
            s.w.concat(s.b).every((e) => "p" === e)
          )
            return !1;
          let l = B(a.fen()) - P;
          return (t ? l : -l) < 0;
        },
        B = (e) =>
          new r.d$(e)
            .board()
            .flat()
            .reduce((e, n) => {
              if (!n) return e;
              let p = n.type;
              return "w" === n.color ? e + N(p) : e - N(p);
            }, 0),
        N = (e) => {
          switch (e) {
            case "p":
              return 1;
            case "n":
            case "b":
              return 3;
            case "r":
              return 5;
            case "q":
              return 9;
            default:
              return 0;
          }
        },
        h = (e, n) => {
          let p =
              n === t.Q1.White
                ? [
                    { piece: "p", count: 8 },
                    { piece: "b", count: 2 },
                    { piece: "n", count: 2 },
                    { piece: "r", count: 2 },
                    { piece: "q", count: 1 },
                  ]
                : [
                    { piece: "P", count: 8 },
                    { piece: "B", count: 2 },
                    { piece: "N", count: 2 },
                    { piece: "R", count: 2 },
                    { piece: "Q", count: 1 },
                  ],
            r = e.split(" ")[0];
          return p.map((e) => {
            var n, p;
            let { piece: a, count: t } = e,
              P =
                null === (n = r.match(RegExp(a, "g"))) || void 0 === n
                  ? void 0
                  : n.length;
            return {
              piece: null !== (p = k[a]) && void 0 !== p ? p : a,
              count: Math.max(0, t - (null != P ? P : 0)),
            };
          });
        },
        k = {
          p: "bP",
          b: "bB",
          n: "bN",
          r: "bR",
          q: "bQ",
          k: "bK",
          P: "wP",
          B: "wB",
          N: "wN",
          R: "wR",
          Q: "wQ",
          K: "wK",
        },
        g = (e) =>
          void 0 !== e.cp
            ? "".concat(e.cp > 0 ? "+" : "").concat((e.cp / 100).toFixed(2))
            : e.mate
              ? "".concat(e.mate > 0 ? "+" : "-", "M").concat(Math.abs(e.mate))
              : "?",
        K = (e, n) => {
          let p = e.split(" ")[2],
            r = p.includes("K"),
            a = p.includes("Q"),
            t = p.includes("k"),
            P = p.includes("q");
          return n.map((e) =>
            "e1h1" === e && r
              ? ((r = !1), "e1g1")
              : "e1a1" === e && a
                ? ((a = !1), "e1c1")
                : "e8h8" === e && t
                  ? ((t = !1), "e8g8")
                  : "e8a8" === e && P
                    ? ((P = !1), "e8c8")
                    : e
          );
        };
    },
    24705: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => V });
      var r = p(14232),
        a = p(69241),
        t = p(581),
        P = p(4697),
        i = p(54843),
        o = p(27449),
        s = p(68275),
        l = p(54773),
        c = p(82987),
        b = p(52196),
        f = p(68197),
        m = p(7957),
        u = p(80027),
        d = p(78457),
        R = p(47951),
        B = p(45879);
      function N(e) {
        return (0, B.Ay)("MuiButton", e);
      }
      let h = (0, R.A)("MuiButton", [
        "root",
        "text",
        "textInherit",
        "textPrimary",
        "textSecondary",
        "textSuccess",
        "textError",
        "textInfo",
        "textWarning",
        "outlined",
        "outlinedInherit",
        "outlinedPrimary",
        "outlinedSecondary",
        "outlinedSuccess",
        "outlinedError",
        "outlinedInfo",
        "outlinedWarning",
        "contained",
        "containedInherit",
        "containedPrimary",
        "containedSecondary",
        "containedSuccess",
        "containedError",
        "containedInfo",
        "containedWarning",
        "disableElevation",
        "focusVisible",
        "disabled",
        "colorInherit",
        "colorPrimary",
        "colorSecondary",
        "colorSuccess",
        "colorError",
        "colorInfo",
        "colorWarning",
        "textSizeSmall",
        "textSizeMedium",
        "textSizeLarge",
        "outlinedSizeSmall",
        "outlinedSizeMedium",
        "outlinedSizeLarge",
        "containedSizeSmall",
        "containedSizeMedium",
        "containedSizeLarge",
        "sizeMedium",
        "sizeSmall",
        "sizeLarge",
        "fullWidth",
        "startIcon",
        "endIcon",
        "icon",
        "iconSizeSmall",
        "iconSizeMedium",
        "iconSizeLarge",
        "loading",
        "loadingWrapper",
        "loadingIconPlaceholder",
        "loadingIndicator",
        "loadingPositionCenter",
        "loadingPositionStart",
        "loadingPositionEnd",
      ]);
      var k = p(7045);
      let g = r.createContext(void 0);
      var K = p(37876);
      let Q = (e) => {
          let {
              color: n,
              disableElevation: p,
              fullWidth: r,
              size: a,
              variant: t,
              loading: i,
              loadingPosition: o,
              classes: s,
            } = e,
            l = {
              root: [
                "root",
                i && "loading",
                t,
                "".concat(t).concat((0, u.A)(n)),
                "size".concat((0, u.A)(a)),
                "".concat(t, "Size").concat((0, u.A)(a)),
                "color".concat((0, u.A)(n)),
                p && "disableElevation",
                r && "fullWidth",
                i && "loadingPosition".concat((0, u.A)(o)),
              ],
              startIcon: ["icon", "startIcon", "iconSize".concat((0, u.A)(a))],
              endIcon: ["icon", "endIcon", "iconSize".concat((0, u.A)(a))],
              loadingIndicator: ["loadingIndicator"],
              loadingWrapper: ["loadingWrapper"],
            },
            c = (0, P.A)(l, N, s);
          return { ...s, ...c };
        },
        q = [
          {
            props: { size: "small" },
            style: { "& > *:nth-of-type(1)": { fontSize: 18 } },
          },
          {
            props: { size: "medium" },
            style: { "& > *:nth-of-type(1)": { fontSize: 20 } },
          },
          {
            props: { size: "large" },
            style: { "& > *:nth-of-type(1)": { fontSize: 22 } },
          },
        ],
        y = (0, l.Ay)(f.A, {
          shouldForwardProp: (e) => (0, s.A)(e) || "classes" === e,
          name: "MuiButton",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              n[p.variant],
              n["".concat(p.variant).concat((0, u.A)(p.color))],
              n["size".concat((0, u.A)(p.size))],
              n["".concat(p.variant, "Size").concat((0, u.A)(p.size))],
              "inherit" === p.color && n.colorInherit,
              p.disableElevation && n.disableElevation,
              p.fullWidth && n.fullWidth,
              p.loading && n.loading,
            ];
          },
        })(
          (0, c.A)((e) => {
            let { theme: n } = e,
              p =
                "light" === n.palette.mode
                  ? n.palette.grey[300]
                  : n.palette.grey[800],
              r =
                "light" === n.palette.mode
                  ? n.palette.grey.A100
                  : n.palette.grey[700];
            return {
              ...n.typography.button,
              minWidth: 64,
              padding: "6px 16px",
              border: 0,
              borderRadius: (n.vars || n).shape.borderRadius,
              transition: n.transitions.create(
                ["background-color", "box-shadow", "border-color", "color"],
                { duration: n.transitions.duration.short }
              ),
              "&:hover": { textDecoration: "none" },
              ["&.".concat(h.disabled)]: {
                color: (n.vars || n).palette.action.disabled,
              },
              variants: [
                {
                  props: { variant: "contained" },
                  style: {
                    color: "var(--variant-containedColor)",
                    backgroundColor: "var(--variant-containedBg)",
                    boxShadow: (n.vars || n).shadows[2],
                    "&:hover": {
                      boxShadow: (n.vars || n).shadows[4],
                      "@media (hover: none)": {
                        boxShadow: (n.vars || n).shadows[2],
                      },
                    },
                    "&:active": { boxShadow: (n.vars || n).shadows[8] },
                    ["&.".concat(h.focusVisible)]: {
                      boxShadow: (n.vars || n).shadows[6],
                    },
                    ["&.".concat(h.disabled)]: {
                      color: (n.vars || n).palette.action.disabled,
                      boxShadow: (n.vars || n).shadows[0],
                      backgroundColor: (n.vars || n).palette.action
                        .disabledBackground,
                    },
                  },
                },
                {
                  props: { variant: "outlined" },
                  style: {
                    padding: "5px 15px",
                    border: "1px solid currentColor",
                    borderColor: "var(--variant-outlinedBorder, currentColor)",
                    backgroundColor: "var(--variant-outlinedBg)",
                    color: "var(--variant-outlinedColor)",
                    ["&.".concat(h.disabled)]: {
                      border: "1px solid ".concat(
                        (n.vars || n).palette.action.disabledBackground
                      ),
                    },
                  },
                },
                {
                  props: { variant: "text" },
                  style: {
                    padding: "6px 8px",
                    color: "var(--variant-textColor)",
                    backgroundColor: "var(--variant-textBg)",
                  },
                },
                ...Object.entries(n.palette)
                  .filter((0, d.A)())
                  .map((e) => {
                    let [p] = e;
                    return {
                      props: { color: p },
                      style: {
                        "--variant-textColor": (n.vars || n).palette[p].main,
                        "--variant-outlinedColor": (n.vars || n).palette[p]
                          .main,
                        "--variant-outlinedBorder": n.vars
                          ? "rgba(".concat(
                              n.vars.palette[p].mainChannel,
                              " / 0.5)"
                            )
                          : (0, i.X4)(n.palette[p].main, 0.5),
                        "--variant-containedColor": (n.vars || n).palette[p]
                          .contrastText,
                        "--variant-containedBg": (n.vars || n).palette[p].main,
                        "@media (hover: hover)": {
                          "&:hover": {
                            "--variant-containedBg": (n.vars || n).palette[p]
                              .dark,
                            "--variant-textBg": n.vars
                              ? "rgba("
                                  .concat(n.vars.palette[p].mainChannel, " / ")
                                  .concat(
                                    n.vars.palette.action.hoverOpacity,
                                    ")"
                                  )
                              : (0, i.X4)(
                                  n.palette[p].main,
                                  n.palette.action.hoverOpacity
                                ),
                            "--variant-outlinedBorder": (n.vars || n).palette[p]
                              .main,
                            "--variant-outlinedBg": n.vars
                              ? "rgba("
                                  .concat(n.vars.palette[p].mainChannel, " / ")
                                  .concat(
                                    n.vars.palette.action.hoverOpacity,
                                    ")"
                                  )
                              : (0, i.X4)(
                                  n.palette[p].main,
                                  n.palette.action.hoverOpacity
                                ),
                          },
                        },
                      },
                    };
                  }),
                {
                  props: { color: "inherit" },
                  style: {
                    color: "inherit",
                    borderColor: "currentColor",
                    "--variant-containedBg": n.vars
                      ? n.vars.palette.Button.inheritContainedBg
                      : p,
                    "@media (hover: hover)": {
                      "&:hover": {
                        "--variant-containedBg": n.vars
                          ? n.vars.palette.Button.inheritContainedHoverBg
                          : r,
                        "--variant-textBg": n.vars
                          ? "rgba("
                              .concat(n.vars.palette.text.primaryChannel, " / ")
                              .concat(n.vars.palette.action.hoverOpacity, ")")
                          : (0, i.X4)(
                              n.palette.text.primary,
                              n.palette.action.hoverOpacity
                            ),
                        "--variant-outlinedBg": n.vars
                          ? "rgba("
                              .concat(n.vars.palette.text.primaryChannel, " / ")
                              .concat(n.vars.palette.action.hoverOpacity, ")")
                          : (0, i.X4)(
                              n.palette.text.primary,
                              n.palette.action.hoverOpacity
                            ),
                      },
                    },
                  },
                },
                {
                  props: { size: "small", variant: "text" },
                  style: {
                    padding: "4px 5px",
                    fontSize: n.typography.pxToRem(13),
                  },
                },
                {
                  props: { size: "large", variant: "text" },
                  style: {
                    padding: "8px 11px",
                    fontSize: n.typography.pxToRem(15),
                  },
                },
                {
                  props: { size: "small", variant: "outlined" },
                  style: {
                    padding: "3px 9px",
                    fontSize: n.typography.pxToRem(13),
                  },
                },
                {
                  props: { size: "large", variant: "outlined" },
                  style: {
                    padding: "7px 21px",
                    fontSize: n.typography.pxToRem(15),
                  },
                },
                {
                  props: { size: "small", variant: "contained" },
                  style: {
                    padding: "4px 10px",
                    fontSize: n.typography.pxToRem(13),
                  },
                },
                {
                  props: { size: "large", variant: "contained" },
                  style: {
                    padding: "8px 22px",
                    fontSize: n.typography.pxToRem(15),
                  },
                },
                {
                  props: { disableElevation: !0 },
                  style: {
                    boxShadow: "none",
                    "&:hover": { boxShadow: "none" },
                    ["&.".concat(h.focusVisible)]: { boxShadow: "none" },
                    "&:active": { boxShadow: "none" },
                    ["&.".concat(h.disabled)]: { boxShadow: "none" },
                  },
                },
                { props: { fullWidth: !0 }, style: { width: "100%" } },
                {
                  props: { loadingPosition: "center" },
                  style: {
                    transition: n.transitions.create(
                      ["background-color", "box-shadow", "border-color"],
                      { duration: n.transitions.duration.short }
                    ),
                    ["&.".concat(h.loading)]: { color: "transparent" },
                  },
                },
              ],
            };
          })
        ),
        v = (0, l.Ay)("span", {
          name: "MuiButton",
          slot: "StartIcon",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.startIcon,
              p.loading && n.startIconLoadingStart,
              n["iconSize".concat((0, u.A)(p.size))],
            ];
          },
        })((e) => {
          let { theme: n } = e;
          return {
            display: "inherit",
            marginRight: 8,
            marginLeft: -4,
            variants: [
              { props: { size: "small" }, style: { marginLeft: -2 } },
              {
                props: { loadingPosition: "start", loading: !0 },
                style: {
                  transition: n.transitions.create(["opacity"], {
                    duration: n.transitions.duration.short,
                  }),
                  opacity: 0,
                },
              },
              {
                props: { loadingPosition: "start", loading: !0, fullWidth: !0 },
                style: { marginRight: -8 },
              },
              ...q,
            ],
          };
        }),
        D = (0, l.Ay)("span", {
          name: "MuiButton",
          slot: "EndIcon",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.endIcon,
              p.loading && n.endIconLoadingEnd,
              n["iconSize".concat((0, u.A)(p.size))],
            ];
          },
        })((e) => {
          let { theme: n } = e;
          return {
            display: "inherit",
            marginRight: -4,
            marginLeft: 8,
            variants: [
              { props: { size: "small" }, style: { marginRight: -2 } },
              {
                props: { loadingPosition: "end", loading: !0 },
                style: {
                  transition: n.transitions.create(["opacity"], {
                    duration: n.transitions.duration.short,
                  }),
                  opacity: 0,
                },
              },
              {
                props: { loadingPosition: "end", loading: !0, fullWidth: !0 },
                style: { marginLeft: -8 },
              },
              ...q,
            ],
          };
        }),
        S = (0, l.Ay)("span", {
          name: "MuiButton",
          slot: "LoadingIndicator",
          overridesResolver: (e, n) => n.loadingIndicator,
        })((e) => {
          let { theme: n } = e;
          return {
            display: "none",
            position: "absolute",
            visibility: "visible",
            variants: [
              { props: { loading: !0 }, style: { display: "flex" } },
              { props: { loadingPosition: "start" }, style: { left: 14 } },
              {
                props: { loadingPosition: "start", size: "small" },
                style: { left: 10 },
              },
              {
                props: { variant: "text", loadingPosition: "start" },
                style: { left: 6 },
              },
              {
                props: { loadingPosition: "center" },
                style: {
                  left: "50%",
                  transform: "translate(-50%)",
                  color: (n.vars || n).palette.action.disabled,
                },
              },
              { props: { loadingPosition: "end" }, style: { right: 14 } },
              {
                props: { loadingPosition: "end", size: "small" },
                style: { right: 10 },
              },
              {
                props: { variant: "text", loadingPosition: "end" },
                style: { right: 6 },
              },
              {
                props: { loadingPosition: "start", fullWidth: !0 },
                style: { position: "relative", left: -10 },
              },
              {
                props: { loadingPosition: "end", fullWidth: !0 },
                style: { position: "relative", right: -10 },
              },
            ],
          };
        }),
        A = (0, l.Ay)("span", {
          name: "MuiButton",
          slot: "LoadingIconPlaceholder",
          overridesResolver: (e, n) => n.loadingIconPlaceholder,
        })({ display: "inline-block", width: "1em", height: "1em" }),
        V = r.forwardRef(function (e, n) {
          let p = r.useContext(k.A),
            P = r.useContext(g),
            i = (0, t.A)(p, e),
            s = (0, b.b)({ props: i, name: "MuiButton" }),
            {
              children: l,
              color: c = "primary",
              component: f = "button",
              className: u,
              disabled: d = !1,
              disableElevation: R = !1,
              disableFocusRipple: B = !1,
              endIcon: N,
              focusVisibleClassName: h,
              fullWidth: q = !1,
              id: V,
              loading: G = null,
              loadingIndicator: C,
              loadingPosition: w = "center",
              size: x = "medium",
              startIcon: M,
              type: O,
              variant: E = "text",
              ...I
            } = s,
            L = (0, o.A)(V),
            z =
              null != C
                ? C
                : (0, K.jsx)(m.A, {
                    "aria-labelledby": L,
                    color: "inherit",
                    size: 16,
                  }),
            T = {
              ...s,
              color: c,
              component: f,
              disabled: d,
              disableElevation: R,
              disableFocusRipple: B,
              fullWidth: q,
              loading: G,
              loadingIndicator: z,
              loadingPosition: w,
              size: x,
              type: O,
              variant: E,
            },
            _ = Q(T),
            F =
              (M || (G && "start" === w)) &&
              (0, K.jsx)(v, {
                className: _.startIcon,
                ownerState: T,
                children:
                  M ||
                  (0, K.jsx)(A, {
                    className: _.loadingIconPlaceholder,
                    ownerState: T,
                  }),
              }),
            j =
              (N || (G && "end" === w)) &&
              (0, K.jsx)(D, {
                className: _.endIcon,
                ownerState: T,
                children:
                  N ||
                  (0, K.jsx)(A, {
                    className: _.loadingIconPlaceholder,
                    ownerState: T,
                  }),
              }),
            W =
              "boolean" == typeof G
                ? (0, K.jsx)("span", {
                    className: _.loadingWrapper,
                    style: { display: "contents" },
                    children:
                      G &&
                      (0, K.jsx)(S, {
                        className: _.loadingIndicator,
                        ownerState: T,
                        children: z,
                      }),
                  })
                : null;
          return (0, K.jsxs)(y, {
            ownerState: T,
            className: (0, a.A)(p.className, _.root, u, P || ""),
            component: f,
            disabled: d || G,
            focusRipple: !B,
            focusVisibleClassName: (0, a.A)(_.focusVisible, h),
            ref: n,
            type: O,
            id: G ? L : V,
            ...I,
            classes: _,
            children: [F, "end" !== w && W, l, "end" === w && W, j],
          });
        });
    },
    24751: (e, n, p) => {
      "use strict";
      function r(e, n = 166) {
        let p;
        function a(...r) {
          clearTimeout(p),
            (p = setTimeout(() => {
              e.apply(this, r);
            }, n));
        }
        return (
          (a.clear = () => {
            clearTimeout(p);
          }),
          a
        );
      }
      p.d(n, { A: () => r });
    },
    24766: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => u });
      var r = p(14232),
        a = p(67629),
        t = p(43165),
        P = p(74253),
        i = p(30566),
        o = p(6299),
        s = p(66313),
        l = p(37876);
      function c(e) {
        return "scale(".concat(e, ", ").concat(e ** 2, ")");
      }
      let b = {
          entering: { opacity: 1, transform: c(1) },
          entered: { opacity: 1, transform: "none" },
        },
        f =
          "undefined" != typeof navigator &&
          /^((?!chrome|android).)*(safari|mobile)/i.test(navigator.userAgent) &&
          /(os |version\/)15(.|_)4/i.test(navigator.userAgent),
        m = r.forwardRef(function (e, n) {
          let {
              addEndListener: p,
              appear: m = !0,
              children: u,
              easing: d,
              in: R,
              onEnter: B,
              onEntered: N,
              onEntering: h,
              onExit: k,
              onExited: g,
              onExiting: K,
              style: Q,
              timeout: q = "auto",
              TransitionComponent: y = P.Ay,
              ...v
            } = e,
            D = (0, a.A)(),
            S = r.useRef(),
            A = (0, i.A)(),
            V = r.useRef(null),
            G = (0, s.A)(V, (0, t.A)(u), n),
            C = (e) => (n) => {
              if (e) {
                let p = V.current;
                void 0 === n ? e(p) : e(p, n);
              }
            },
            w = C(h),
            x = C((e, n) => {
              let p;
              (0, o.q)(e);
              let {
                duration: r,
                delay: a,
                easing: t,
              } = (0, o.c)(
                { style: Q, timeout: q, easing: d },
                { mode: "enter" }
              );
              "auto" === q
                ? (S.current = p =
                    A.transitions.getAutoHeightDuration(e.clientHeight))
                : (p = r),
                (e.style.transition = [
                  A.transitions.create("opacity", { duration: p, delay: a }),
                  A.transitions.create("transform", {
                    duration: f ? p : 0.666 * p,
                    delay: a,
                    easing: t,
                  }),
                ].join(",")),
                B && B(e, n);
            }),
            M = C(N),
            O = C(K),
            E = C((e) => {
              let n;
              let {
                duration: p,
                delay: r,
                easing: a,
              } = (0, o.c)(
                { style: Q, timeout: q, easing: d },
                { mode: "exit" }
              );
              "auto" === q
                ? (S.current = n =
                    A.transitions.getAutoHeightDuration(e.clientHeight))
                : (n = p),
                (e.style.transition = [
                  A.transitions.create("opacity", { duration: n, delay: r }),
                  A.transitions.create("transform", {
                    duration: f ? n : 0.666 * n,
                    delay: f ? r : r || 0.333 * n,
                    easing: a,
                  }),
                ].join(",")),
                (e.style.opacity = 0),
                (e.style.transform = c(0.75)),
                k && k(e);
            }),
            I = C(g);
          return (0, l.jsx)(y, {
            appear: m,
            in: R,
            nodeRef: V,
            onEnter: x,
            onEntered: M,
            onEntering: w,
            onExit: E,
            onExited: I,
            onExiting: O,
            addEndListener: (e) => {
              "auto" === q && D.start(S.current || 0, e), p && p(V.current, e);
            },
            timeout: "auto" === q ? null : q,
            ...v,
            children: (e, n) => {
              let { ownerState: p, ...a } = n;
              return r.cloneElement(u, {
                style: {
                  opacity: 0,
                  transform: c(0.75),
                  visibility: "exited" !== e || R ? void 0 : "hidden",
                  ...b[e],
                  ...Q,
                  ...u.props.style,
                },
                ref: G,
                ...a,
              });
            },
          });
        });
      m && (m.muiSupportAuto = !0);
      let u = m;
    },
    26008: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = function (e, n, p) {
        return void 0 === e || "string" == typeof e
          ? n
          : { ...n, ownerState: { ...n.ownerState, ...p } };
      };
    },
    26611: (e, n, p) => {
      "use strict";
      p.d(n, { Go: () => r, d4: () => a, f8: () => P, lW: () => t });
      let r = (e, n, p) => (e > p ? p : e < n ? n : e),
        a = (e) => {
          let n = e.reduce((e, n) => e + 1 / n, 0);
          return e.length / n;
        },
        t = (e) => {
          let n = e.length,
            p = e.reduce((e, n) => e + n) / n;
          return Math.sqrt(
            e.map((e) => Math.pow(e - p, 2)).reduce((e, n) => e + n) / n
          );
        },
        P = (e, n) => {
          if (e.length > n.length) throw Error("Weights array is too short");
          return (
            e.reduce((e, p, r) => e + p * n[r], 0) /
            n.slice(0, e.length).reduce((e, n) => e + n, 0)
          );
        };
    },
    27367: (e, n, p) => {
      "use strict";
      function r(e) {
        let { props: n, states: p, muiFormControl: r } = e;
        return p.reduce(
          (e, p) => ((e[p] = n[p]), r && void 0 === n[p] && (e[p] = r[p]), e),
          {}
        );
      }
      p.d(n, { A: () => r });
    },
    27449: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(53855).A;
    },
    28888: (e, n, p) => {
      "use strict";
      function r(e, n) {
        return (
          n || (n = e.slice(0)),
          Object.freeze(
            Object.defineProperties(e, { raw: { value: Object.freeze(n) } })
          )
        );
      }
      p.d(n, { _: () => r });
    },
    29044: (e, n) => {
      "use strict";
      var p = "function" == typeof Symbol && Symbol.for,
        r = p ? Symbol.for("react.element") : 60103,
        a = p ? Symbol.for("react.portal") : 60106,
        t = p ? Symbol.for("react.fragment") : 60107,
        P = p ? Symbol.for("react.strict_mode") : 60108,
        i = p ? Symbol.for("react.profiler") : 60114,
        o = p ? Symbol.for("react.provider") : 60109,
        s = p ? Symbol.for("react.context") : 60110,
        l = p ? Symbol.for("react.async_mode") : 60111,
        c = p ? Symbol.for("react.concurrent_mode") : 60111,
        b = p ? Symbol.for("react.forward_ref") : 60112,
        f = p ? Symbol.for("react.suspense") : 60113,
        m = p ? Symbol.for("react.suspense_list") : 60120,
        u = p ? Symbol.for("react.memo") : 60115,
        d = p ? Symbol.for("react.lazy") : 60116,
        R = p ? Symbol.for("react.block") : 60121,
        B = p ? Symbol.for("react.fundamental") : 60117,
        N = p ? Symbol.for("react.responder") : 60118,
        h = p ? Symbol.for("react.scope") : 60119;
      function k(e) {
        if ("object" == typeof e && null !== e) {
          var n = e.$$typeof;
          switch (n) {
            case r:
              switch ((e = e.type)) {
                case l:
                case c:
                case t:
                case i:
                case P:
                case f:
                  return e;
                default:
                  switch ((e = e && e.$$typeof)) {
                    case s:
                    case b:
                    case d:
                    case u:
                    case o:
                      return e;
                    default:
                      return n;
                  }
              }
            case a:
              return n;
          }
        }
      }
      function g(e) {
        return k(e) === c;
      }
      (n.AsyncMode = l),
        (n.ConcurrentMode = c),
        (n.ContextConsumer = s),
        (n.ContextProvider = o),
        (n.Element = r),
        (n.ForwardRef = b),
        (n.Fragment = t),
        (n.Lazy = d),
        (n.Memo = u),
        (n.Portal = a),
        (n.Profiler = i),
        (n.StrictMode = P),
        (n.Suspense = f),
        (n.isAsyncMode = function (e) {
          return g(e) || k(e) === l;
        }),
        (n.isConcurrentMode = g),
        (n.isContextConsumer = function (e) {
          return k(e) === s;
        }),
        (n.isContextProvider = function (e) {
          return k(e) === o;
        }),
        (n.isElement = function (e) {
          return "object" == typeof e && null !== e && e.$$typeof === r;
        }),
        (n.isForwardRef = function (e) {
          return k(e) === b;
        }),
        (n.isFragment = function (e) {
          return k(e) === t;
        }),
        (n.isLazy = function (e) {
          return k(e) === d;
        }),
        (n.isMemo = function (e) {
          return k(e) === u;
        }),
        (n.isPortal = function (e) {
          return k(e) === a;
        }),
        (n.isProfiler = function (e) {
          return k(e) === i;
        }),
        (n.isStrictMode = function (e) {
          return k(e) === P;
        }),
        (n.isSuspense = function (e) {
          return k(e) === f;
        }),
        (n.isValidElementType = function (e) {
          return (
            "string" == typeof e ||
            "function" == typeof e ||
            e === t ||
            e === c ||
            e === i ||
            e === P ||
            e === f ||
            e === m ||
            ("object" == typeof e &&
              null !== e &&
              (e.$$typeof === d ||
                e.$$typeof === u ||
                e.$$typeof === o ||
                e.$$typeof === s ||
                e.$$typeof === b ||
                e.$$typeof === B ||
                e.$$typeof === N ||
                e.$$typeof === h ||
                e.$$typeof === R))
          );
        }),
        (n.typeOf = k);
    },
    29791: (e, n, p) => {
      "use strict";
      p.d(n, { R: () => i });
      var r = p(73004),
        a = p(19271),
        t = p(44371),
        P = p(24307);
      let i = (e, n, p) => {
          let P;
          let i = e.map(r.g);
          return e.map((l, b) => {
            var f;
            if (0 === b) return l;
            let m = p[b].split(" ")[0],
              u = t.m.find((e) => e.fen === m);
            if (u)
              return (
                (P = u.name),
                { ...l, opening: u.name, moveClassification: a.eK.Opening }
              );
            let d = e[b - 1];
            if (1 === d.lines.length)
              return { ...l, opening: P, moveClassification: a.eK.Forced };
            let R = n[b - 1],
              B =
                null === (f = d.lines.filter((e) => e.pv[0] !== R)) ||
                void 0 === f
                  ? void 0
                  : f[0],
              N = B ? (0, r.h)(B) : void 0,
              h = l.lines[0].pv,
              k = i[b - 1],
              g = i[b],
              K = b % 2 == 1;
            if (s(k, g, K, R, h, p[b - 1], N))
              return { ...l, opening: P, moveClassification: a.eK.Splendid };
            if (
              c(
                k,
                g,
                K,
                N,
                b > 1 ? p[b - 2] : null,
                b > 1 ? [n[b - 2], n[b - 1]] : null
              )
            )
              return { ...l, opening: P, moveClassification: a.eK.Perfect };
            if (R === d.bestMove)
              return { ...l, opening: P, moveClassification: a.eK.Best };
            let Q = o(k, g, K);
            return { ...l, opening: P, moveClassification: Q };
          });
        },
        o = (e, n, p) => {
          let r = (n - e) * (p ? 1 : -1);
          return r < -20
            ? a.eK.Blunder
            : r < -10
              ? a.eK.Mistake
              : r < -5
                ? a.eK.Inaccuracy
                : r < -2
                  ? a.eK.Okay
                  : a.eK.Excellent;
        },
        s = (e, n, p, r, a, t, i) =>
          !(
            !i ||
            (n - e) * (p ? 1 : -1) < -2 ||
            !(0, P._0)(t, r, a) ||
            l(n, i, p)
          ),
        l = (e, n, p) => (p ? e < 50 : e > 50) || (p ? n > 97 : n < 3),
        c = (e, n, p, r, a, t) => {
          if (
            !r ||
            (n - e) * (p ? 1 : -1) < -2 ||
            (a && t && (0, P.QN)(a, t)) ||
            l(n, r, p)
          )
            return !1;
          let i = b(e, n, p),
            o = f(n, r, p);
          return i || o;
        },
        b = (e, n, p) =>
          (n - e) * (p ? 1 : -1) > 10 &&
          ((e < 50 && n > 50) || (e > 50 && n < 50)),
        f = (e, n, p) => (e - n) * (p ? 1 : -1) > 10;
    },
    30035: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t }), p(14232);
      var r = p(31057),
        a = p(37876);
      let t = (0, r.A)(
        (0, a.jsx)("path", { d: "M7 10l5 5 5-5z" }),
        "ArrowDropDown"
      );
    },
    30566: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P }), p(14232);
      var r = p(64289),
        a = p(56892),
        t = p(3637);
      function P() {
        let e = (0, r.A)(a.A);
        return e[t.A] || e;
      }
    },
    30929: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => d });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(54773),
        i = p(52196),
        o = p(67360),
        s = p(36540),
        l = p(47951),
        c = p(45879);
      function b(e) {
        return (0, c.Ay)("MuiBackdrop", e);
      }
      (0, l.A)("MuiBackdrop", ["root", "invisible"]);
      var f = p(37876);
      let m = (e) => {
          let { classes: n, invisible: p } = e;
          return (0, t.A)({ root: ["root", p && "invisible"] }, b, n);
        },
        u = (0, P.Ay)("div", {
          name: "MuiBackdrop",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [n.root, p.invisible && n.invisible];
          },
        })({
          position: "fixed",
          display: "flex",
          alignItems: "center",
          justifyContent: "center",
          right: 0,
          bottom: 0,
          top: 0,
          left: 0,
          backgroundColor: "rgba(0, 0, 0, 0.5)",
          WebkitTapHighlightColor: "transparent",
          variants: [
            {
              props: { invisible: !0 },
              style: { backgroundColor: "transparent" },
            },
          ],
        }),
        d = r.forwardRef(function (e, n) {
          let p = (0, i.b)({ props: e, name: "MuiBackdrop" }),
            {
              children: r,
              className: t,
              component: P = "div",
              invisible: l = !1,
              open: c,
              components: b = {},
              componentsProps: d = {},
              slotProps: R = {},
              slots: B = {},
              TransitionComponent: N,
              transitionDuration: h,
              ...k
            } = p,
            g = { ...p, component: P, invisible: l },
            K = m(g),
            Q = {
              slots: { transition: N, root: b.Root, ...B },
              slotProps: { ...d, ...R },
            },
            [q, y] = (0, o.A)("root", {
              elementType: u,
              externalForwardedProps: Q,
              className: (0, a.A)(K.root, t),
              ownerState: g,
            }),
            [v, D] = (0, o.A)("transition", {
              elementType: s.A,
              externalForwardedProps: Q,
              ownerState: g,
            });
          return (0, f.jsx)(v, {
            in: c,
            timeout: h,
            ...k,
            ...D,
            children: (0, f.jsx)(q, {
              "aria-hidden": !0,
              ...y,
              classes: K,
              ref: n,
              children: r,
            }),
          });
        });
    },
    31026: (e, n, p) => {
      "use strict";
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "useMergedRef", {
          enumerable: !0,
          get: function () {
            return a;
          },
        });
      let r = p(14232);
      function a(e, n) {
        let p = (0, r.useRef)(null),
          a = (0, r.useRef)(null);
        return (0, r.useCallback)(
          (r) => {
            if (null === r) {
              let e = p.current;
              e && ((p.current = null), e());
              let n = a.current;
              n && ((a.current = null), n());
            } else e && (p.current = t(e, r)), n && (a.current = t(n, r));
          },
          [e, n]
        );
      }
      function t(e, n) {
        if ("function" != typeof e)
          return (
            (e.current = n),
            () => {
              e.current = null;
            }
          );
        {
          let p = e(n);
          return "function" == typeof p ? p : () => e(null);
        }
      }
      ("function" == typeof n.default ||
        ("object" == typeof n.default && null !== n.default)) &&
        void 0 === n.default.__esModule &&
        (Object.defineProperty(n.default, "__esModule", { value: !0 }),
        Object.assign(n.default, n),
        (e.exports = n.default));
    },
    31057: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => R });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(80027),
        i = p(54773),
        o = p(82987),
        s = p(52196),
        l = p(47951),
        c = p(45879);
      function b(e) {
        return (0, c.Ay)("MuiSvgIcon", e);
      }
      (0, l.A)("MuiSvgIcon", [
        "root",
        "colorPrimary",
        "colorSecondary",
        "colorAction",
        "colorError",
        "colorDisabled",
        "fontSizeInherit",
        "fontSizeSmall",
        "fontSizeMedium",
        "fontSizeLarge",
      ]);
      var f = p(37876);
      let m = (e) => {
          let { color: n, fontSize: p, classes: r } = e,
            a = {
              root: [
                "root",
                "inherit" !== n && "color".concat((0, P.A)(n)),
                "fontSize".concat((0, P.A)(p)),
              ],
            };
          return (0, t.A)(a, b, r);
        },
        u = (0, i.Ay)("svg", {
          name: "MuiSvgIcon",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              "inherit" !== p.color && n["color".concat((0, P.A)(p.color))],
              n["fontSize".concat((0, P.A)(p.fontSize))],
            ];
          },
        })(
          (0, o.A)((e) => {
            var n, p, r, a, t, P, i, o, s, l, c, b, f, m, u, d, R, B;
            let { theme: N } = e;
            return {
              userSelect: "none",
              width: "1em",
              height: "1em",
              display: "inline-block",
              flexShrink: 0,
              transition:
                null === (a = N.transitions) || void 0 === a
                  ? void 0
                  : null === (r = a.create) || void 0 === r
                    ? void 0
                    : r.call(a, "fill", {
                        duration:
                          null ===
                            (p = (null !== (u = N.vars) && void 0 !== u ? u : N)
                              .transitions) || void 0 === p
                            ? void 0
                            : null === (n = p.duration) || void 0 === n
                              ? void 0
                              : n.shorter,
                      }),
              variants: [
                {
                  props: (e) => !e.hasSvgAsChild,
                  style: { fill: "currentColor" },
                },
                {
                  props: { fontSize: "inherit" },
                  style: { fontSize: "inherit" },
                },
                {
                  props: { fontSize: "small" },
                  style: {
                    fontSize:
                      (null === (P = N.typography) || void 0 === P
                        ? void 0
                        : null === (t = P.pxToRem) || void 0 === t
                          ? void 0
                          : t.call(P, 20)) || "1.25rem",
                  },
                },
                {
                  props: { fontSize: "medium" },
                  style: {
                    fontSize:
                      (null === (o = N.typography) || void 0 === o
                        ? void 0
                        : null === (i = o.pxToRem) || void 0 === i
                          ? void 0
                          : i.call(o, 24)) || "1.5rem",
                  },
                },
                {
                  props: { fontSize: "large" },
                  style: {
                    fontSize:
                      (null === (l = N.typography) || void 0 === l
                        ? void 0
                        : null === (s = l.pxToRem) || void 0 === s
                          ? void 0
                          : s.call(l, 35)) || "2.1875rem",
                  },
                },
                ...Object.entries(
                  (null !== (d = N.vars) && void 0 !== d ? d : N).palette
                )
                  .filter((e) => {
                    let [, n] = e;
                    return n && n.main;
                  })
                  .map((e) => {
                    var n, p, r;
                    let [a] = e;
                    return {
                      props: { color: a },
                      style: {
                        color:
                          null ===
                            (p = (null !== (r = N.vars) && void 0 !== r ? r : N)
                              .palette) || void 0 === p
                            ? void 0
                            : null === (n = p[a]) || void 0 === n
                              ? void 0
                              : n.main,
                      },
                    };
                  }),
                {
                  props: { color: "action" },
                  style: {
                    color:
                      null ===
                        (b = (null !== (R = N.vars) && void 0 !== R ? R : N)
                          .palette) || void 0 === b
                        ? void 0
                        : null === (c = b.action) || void 0 === c
                          ? void 0
                          : c.active,
                  },
                },
                {
                  props: { color: "disabled" },
                  style: {
                    color:
                      null ===
                        (m = (null !== (B = N.vars) && void 0 !== B ? B : N)
                          .palette) || void 0 === m
                        ? void 0
                        : null === (f = m.action) || void 0 === f
                          ? void 0
                          : f.disabled,
                  },
                },
                { props: { color: "inherit" }, style: { color: void 0 } },
              ],
            };
          })
        ),
        d = r.forwardRef(function (e, n) {
          let p = (0, s.b)({ props: e, name: "MuiSvgIcon" }),
            {
              children: t,
              className: P,
              color: i = "inherit",
              component: o = "svg",
              fontSize: l = "medium",
              htmlColor: c,
              inheritViewBox: b = !1,
              titleAccess: d,
              viewBox: R = "0 0 24 24",
              ...B
            } = p,
            N = r.isValidElement(t) && "svg" === t.type,
            h = {
              ...p,
              color: i,
              component: o,
              fontSize: l,
              instanceFontSize: e.fontSize,
              inheritViewBox: b,
              viewBox: R,
              hasSvgAsChild: N,
            },
            k = {};
          b || (k.viewBox = R);
          let g = m(h);
          return (0, f.jsxs)(u, {
            as: o,
            className: (0, a.A)(g.root, P),
            focusable: "false",
            color: c,
            "aria-hidden": !d || void 0,
            role: d ? "img" : void 0,
            ref: n,
            ...k,
            ...B,
            ...(N && t.props),
            ownerState: h,
            children: [
              N ? t.props.children : t,
              d ? (0, f.jsx)("title", { children: d }) : null,
            ],
          });
        });
      function R(e, n) {
        function p(p, r) {
          return (0, f.jsx)(d, {
            "data-testid": "".concat(n, "Icon"),
            ref: r,
            ...p,
            children: e,
          });
        }
        return (p.muiName = d.muiName), r.memo(r.forwardRef(p));
      }
      d.muiName = "SvgIcon";
    },
    31061: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => T });
      var r = p(12961),
        a = p(50327),
        t = p(45519);
      let P = function (...e) {
        let n = e.reduce(
            (e, n) => (
              n.filterProps.forEach((p) => {
                e[p] = n;
              }),
              e
            ),
            {}
          ),
          p = (e) =>
            Object.keys(e).reduce(
              (p, r) => (n[r] ? (0, t.A)(p, n[r](e)) : p),
              {}
            );
        return (
          (p.propTypes = {}),
          (p.filterProps = e.reduce((e, n) => e.concat(n.filterProps), [])),
          p
        );
      };
      var i = p(72487);
      function o(e) {
        return "number" != typeof e ? e : `${e}px solid`;
      }
      function s(e, n) {
        return (0, a.Ay)({ prop: e, themeKey: "borders", transform: n });
      }
      let l = s("border", o),
        c = s("borderTop", o),
        b = s("borderRight", o),
        f = s("borderBottom", o),
        m = s("borderLeft", o),
        u = s("borderColor"),
        d = s("borderTopColor"),
        R = s("borderRightColor"),
        B = s("borderBottomColor"),
        N = s("borderLeftColor"),
        h = s("outline", o),
        k = s("outlineColor"),
        g = (e) => {
          if (void 0 !== e.borderRadius && null !== e.borderRadius) {
            let n = (0, r.MA)(e.theme, "shape.borderRadius", 4, "borderRadius");
            return (0, i.NI)(e, e.borderRadius, (e) => ({
              borderRadius: (0, r._W)(n, e),
            }));
          }
          return null;
        };
      (g.propTypes = {}),
        (g.filterProps = ["borderRadius"]),
        P(l, c, b, f, m, u, d, R, B, N, g, h, k);
      let K = (e) => {
        if (void 0 !== e.gap && null !== e.gap) {
          let n = (0, r.MA)(e.theme, "spacing", 8, "gap");
          return (0, i.NI)(e, e.gap, (e) => ({ gap: (0, r._W)(n, e) }));
        }
        return null;
      };
      (K.propTypes = {}), (K.filterProps = ["gap"]);
      let Q = (e) => {
        if (void 0 !== e.columnGap && null !== e.columnGap) {
          let n = (0, r.MA)(e.theme, "spacing", 8, "columnGap");
          return (0, i.NI)(e, e.columnGap, (e) => ({
            columnGap: (0, r._W)(n, e),
          }));
        }
        return null;
      };
      (Q.propTypes = {}), (Q.filterProps = ["columnGap"]);
      let q = (e) => {
        if (void 0 !== e.rowGap && null !== e.rowGap) {
          let n = (0, r.MA)(e.theme, "spacing", 8, "rowGap");
          return (0, i.NI)(e, e.rowGap, (e) => ({ rowGap: (0, r._W)(n, e) }));
        }
        return null;
      };
      (q.propTypes = {}), (q.filterProps = ["rowGap"]);
      let y = (0, a.Ay)({ prop: "gridColumn" }),
        v = (0, a.Ay)({ prop: "gridRow" }),
        D = (0, a.Ay)({ prop: "gridAutoFlow" }),
        S = (0, a.Ay)({ prop: "gridAutoColumns" }),
        A = (0, a.Ay)({ prop: "gridAutoRows" }),
        V = (0, a.Ay)({ prop: "gridTemplateColumns" }),
        G = (0, a.Ay)({ prop: "gridTemplateRows" });
      function C(e, n) {
        return "grey" === n ? n : e;
      }
      P(
        K,
        Q,
        q,
        y,
        v,
        D,
        S,
        A,
        V,
        G,
        (0, a.Ay)({ prop: "gridTemplateAreas" }),
        (0, a.Ay)({ prop: "gridArea" })
      );
      let w = (0, a.Ay)({ prop: "color", themeKey: "palette", transform: C });
      function x(e) {
        return e <= 1 && 0 !== e ? `${100 * e}%` : e;
      }
      P(
        w,
        (0, a.Ay)({
          prop: "bgcolor",
          cssProperty: "backgroundColor",
          themeKey: "palette",
          transform: C,
        }),
        (0, a.Ay)({
          prop: "backgroundColor",
          themeKey: "palette",
          transform: C,
        })
      );
      let M = (0, a.Ay)({ prop: "width", transform: x }),
        O = (e) =>
          void 0 !== e.maxWidth && null !== e.maxWidth
            ? (0, i.NI)(e, e.maxWidth, (n) => {
                let p = e.theme?.breakpoints?.values?.[n] || i.zu[n];
                return p
                  ? e.theme?.breakpoints?.unit !== "px"
                    ? { maxWidth: `${p}${e.theme.breakpoints.unit}` }
                    : { maxWidth: p }
                  : { maxWidth: x(n) };
              })
            : null;
      O.filterProps = ["maxWidth"];
      let E = (0, a.Ay)({ prop: "minWidth", transform: x }),
        I = (0, a.Ay)({ prop: "height", transform: x }),
        L = (0, a.Ay)({ prop: "maxHeight", transform: x }),
        z = (0, a.Ay)({ prop: "minHeight", transform: x });
      (0, a.Ay)({ prop: "size", cssProperty: "width", transform: x }),
        (0, a.Ay)({ prop: "size", cssProperty: "height", transform: x }),
        P(M, O, E, I, L, z, (0, a.Ay)({ prop: "boxSizing" }));
      let T = {
        border: { themeKey: "borders", transform: o },
        borderTop: { themeKey: "borders", transform: o },
        borderRight: { themeKey: "borders", transform: o },
        borderBottom: { themeKey: "borders", transform: o },
        borderLeft: { themeKey: "borders", transform: o },
        borderColor: { themeKey: "palette" },
        borderTopColor: { themeKey: "palette" },
        borderRightColor: { themeKey: "palette" },
        borderBottomColor: { themeKey: "palette" },
        borderLeftColor: { themeKey: "palette" },
        outline: { themeKey: "borders", transform: o },
        outlineColor: { themeKey: "palette" },
        borderRadius: { themeKey: "shape.borderRadius", style: g },
        color: { themeKey: "palette", transform: C },
        bgcolor: {
          themeKey: "palette",
          cssProperty: "backgroundColor",
          transform: C,
        },
        backgroundColor: { themeKey: "palette", transform: C },
        p: { style: r.Ms },
        pt: { style: r.Ms },
        pr: { style: r.Ms },
        pb: { style: r.Ms },
        pl: { style: r.Ms },
        px: { style: r.Ms },
        py: { style: r.Ms },
        padding: { style: r.Ms },
        paddingTop: { style: r.Ms },
        paddingRight: { style: r.Ms },
        paddingBottom: { style: r.Ms },
        paddingLeft: { style: r.Ms },
        paddingX: { style: r.Ms },
        paddingY: { style: r.Ms },
        paddingInline: { style: r.Ms },
        paddingInlineStart: { style: r.Ms },
        paddingInlineEnd: { style: r.Ms },
        paddingBlock: { style: r.Ms },
        paddingBlockStart: { style: r.Ms },
        paddingBlockEnd: { style: r.Ms },
        m: { style: r.Lc },
        mt: { style: r.Lc },
        mr: { style: r.Lc },
        mb: { style: r.Lc },
        ml: { style: r.Lc },
        mx: { style: r.Lc },
        my: { style: r.Lc },
        margin: { style: r.Lc },
        marginTop: { style: r.Lc },
        marginRight: { style: r.Lc },
        marginBottom: { style: r.Lc },
        marginLeft: { style: r.Lc },
        marginX: { style: r.Lc },
        marginY: { style: r.Lc },
        marginInline: { style: r.Lc },
        marginInlineStart: { style: r.Lc },
        marginInlineEnd: { style: r.Lc },
        marginBlock: { style: r.Lc },
        marginBlockStart: { style: r.Lc },
        marginBlockEnd: { style: r.Lc },
        displayPrint: {
          cssProperty: !1,
          transform: (e) => ({ "@media print": { display: e } }),
        },
        display: {},
        overflow: {},
        textOverflow: {},
        visibility: {},
        whiteSpace: {},
        flexBasis: {},
        flexDirection: {},
        flexWrap: {},
        justifyContent: {},
        alignItems: {},
        alignContent: {},
        order: {},
        flex: {},
        flexGrow: {},
        flexShrink: {},
        alignSelf: {},
        justifyItems: {},
        justifySelf: {},
        gap: { style: K },
        rowGap: { style: q },
        columnGap: { style: Q },
        gridColumn: {},
        gridRow: {},
        gridAutoFlow: {},
        gridAutoColumns: {},
        gridAutoRows: {},
        gridTemplateColumns: {},
        gridTemplateRows: {},
        gridTemplateAreas: {},
        gridArea: {},
        position: {},
        zIndex: { themeKey: "zIndex" },
        top: {},
        right: {},
        bottom: {},
        left: {},
        boxShadow: { themeKey: "shadows" },
        width: { transform: x },
        maxWidth: { style: O },
        minWidth: { transform: x },
        height: { transform: x },
        maxHeight: { transform: x },
        minHeight: { transform: x },
        boxSizing: {},
        font: { themeKey: "font" },
        fontFamily: { themeKey: "typography" },
        fontSize: { themeKey: "typography" },
        fontStyle: { themeKey: "typography" },
        fontWeight: { themeKey: "typography" },
        letterSpacing: {},
        textTransform: {},
        lineHeight: {},
        textAlign: {},
        typography: { cssProperty: !1, themeKey: "typography" },
      };
    },
    32439: (e, n, p) => {
      "use strict";
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "Image", {
          enumerable: !0,
          get: function () {
            return h;
          },
        });
      let r = p(64252),
        a = p(88365),
        t = p(37876),
        P = a._(p(14232)),
        i = r._(p(98477)),
        o = r._(p(89836)),
        s = p(84915),
        l = p(26904),
        c = p(90072);
      p(60546);
      let b = p(98265),
        f = r._(p(83829)),
        m = p(31026),
        u = {
          deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
          imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
          path: "/_next/image",
          loader: "default",
          dangerouslyAllowSVG: !1,
          unoptimized: !0,
        };
      function d(e, n, p, r, a, t, P) {
        let i = null == e ? void 0 : e.src;
        e &&
          e["data-loaded-src"] !== i &&
          ((e["data-loaded-src"] = i),
          ("decode" in e ? e.decode() : Promise.resolve())
            .catch(() => {})
            .then(() => {
              if (e.parentElement && e.isConnected) {
                if (("empty" !== n && a(!0), null == p ? void 0 : p.current)) {
                  let n = new Event("load");
                  Object.defineProperty(n, "target", {
                    writable: !1,
                    value: e,
                  });
                  let r = !1,
                    a = !1;
                  p.current({
                    ...n,
                    nativeEvent: n,
                    currentTarget: e,
                    target: e,
                    isDefaultPrevented: () => r,
                    isPropagationStopped: () => a,
                    persist: () => {},
                    preventDefault: () => {
                      (r = !0), n.preventDefault();
                    },
                    stopPropagation: () => {
                      (a = !0), n.stopPropagation();
                    },
                  });
                }
                (null == r ? void 0 : r.current) && r.current(e);
              }
            }));
      }
      function R(e) {
        return P.use ? { fetchPriority: e } : { fetchpriority: e };
      }
      let B = (0, P.forwardRef)((e, n) => {
        let {
            src: p,
            srcSet: r,
            sizes: a,
            height: i,
            width: o,
            decoding: s,
            className: l,
            style: c,
            fetchPriority: b,
            placeholder: f,
            loading: u,
            unoptimized: B,
            fill: N,
            onLoadRef: h,
            onLoadingCompleteRef: k,
            setBlurComplete: g,
            setShowAltText: K,
            sizesInput: Q,
            onLoad: q,
            onError: y,
            ...v
          } = e,
          D = (0, P.useCallback)(
            (e) => {
              e && (y && (e.src = e.src), e.complete && d(e, f, h, k, g, B, Q));
            },
            [p, f, h, k, g, y, B, Q]
          ),
          S = (0, m.useMergedRef)(n, D);
        return (0, t.jsx)("img", {
          ...v,
          ...R(b),
          loading: u,
          width: o,
          height: i,
          decoding: s,
          "data-nimg": N ? "fill" : "1",
          className: l,
          style: c,
          sizes: a,
          srcSet: r,
          src: p,
          ref: S,
          onLoad: (e) => {
            d(e.currentTarget, f, h, k, g, B, Q);
          },
          onError: (e) => {
            K(!0), "empty" !== f && g(!0), y && y(e);
          },
        });
      });
      function N(e) {
        let { isAppRouter: n, imgAttributes: p } = e,
          r = {
            as: "image",
            imageSrcSet: p.srcSet,
            imageSizes: p.sizes,
            crossOrigin: p.crossOrigin,
            referrerPolicy: p.referrerPolicy,
            ...R(p.fetchPriority),
          };
        return n && i.default.preload
          ? (i.default.preload(p.src, r), null)
          : (0, t.jsx)(o.default, {
              children: (0, t.jsx)(
                "link",
                { rel: "preload", href: p.srcSet ? void 0 : p.src, ...r },
                "__nimg-" + p.src + p.srcSet + p.sizes
              ),
            });
      }
      let h = (0, P.forwardRef)((e, n) => {
        let p = (0, P.useContext)(b.RouterContext),
          r = (0, P.useContext)(c.ImageConfigContext),
          a = (0, P.useMemo)(() => {
            var e;
            let n = u || r || l.imageConfigDefault,
              p = [...n.deviceSizes, ...n.imageSizes].sort((e, n) => e - n),
              a = n.deviceSizes.sort((e, n) => e - n),
              t = null == (e = n.qualities) ? void 0 : e.sort((e, n) => e - n);
            return { ...n, allSizes: p, deviceSizes: a, qualities: t };
          }, [r]),
          { onLoad: i, onLoadingComplete: o } = e,
          m = (0, P.useRef)(i);
        (0, P.useEffect)(() => {
          m.current = i;
        }, [i]);
        let d = (0, P.useRef)(o);
        (0, P.useEffect)(() => {
          d.current = o;
        }, [o]);
        let [R, h] = (0, P.useState)(!1),
          [k, g] = (0, P.useState)(!1),
          { props: K, meta: Q } = (0, s.getImgProps)(e, {
            defaultLoader: f.default,
            imgConf: a,
            blurComplete: R,
            showAltText: k,
          });
        return (0, t.jsxs)(t.Fragment, {
          children: [
            (0, t.jsx)(B, {
              ...K,
              unoptimized: Q.unoptimized,
              placeholder: Q.placeholder,
              fill: Q.fill,
              onLoadRef: m,
              onLoadingCompleteRef: d,
              setBlurComplete: h,
              setShowAltText: g,
              sizesInput: e.sizes,
              ref: n,
            }),
            Q.priority
              ? (0, t.jsx)(N, { isAppRouter: !p, imgAttributes: K })
              : null,
          ],
        });
      });
      ("function" == typeof n.default ||
        ("object" == typeof n.default && null !== n.default)) &&
        void 0 === n.default.__esModule &&
        (Object.defineProperty(n.default, "__esModule", { value: !0 }),
        Object.assign(n.default, n),
        (e.exports = n.default));
    },
    33052: () => {},
    34479: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => u });
      var r = p(14232),
        a = p(90917),
        t = p(63009);
      let P = p(15783).A;
      var i = p(66313),
        o = p(91411),
        s = p(40436),
        l = p(37876);
      function c(e, n, p) {
        return e === n
          ? e.firstChild
          : n && n.nextElementSibling
            ? n.nextElementSibling
            : p
              ? null
              : e.firstChild;
      }
      function b(e, n, p) {
        return e === n
          ? p
            ? e.firstChild
            : e.lastChild
          : n && n.previousElementSibling
            ? n.previousElementSibling
            : p
              ? null
              : e.lastChild;
      }
      function f(e, n) {
        if (void 0 === n) return !0;
        let p = e.innerText;
        return (
          void 0 === p && (p = e.textContent),
          0 !== (p = p.trim().toLowerCase()).length &&
            (n.repeating ? p[0] === n.keys[0] : p.startsWith(n.keys.join("")))
        );
      }
      function m(e, n, p, r, a, t) {
        let P = !1,
          i = a(e, n, !!n && p);
        for (; i; ) {
          if (i === e.firstChild) {
            if (P) return !1;
            P = !0;
          }
          let n =
            !r && (i.disabled || "true" === i.getAttribute("aria-disabled"));
          if (i.hasAttribute("tabindex") && f(i, t) && !n) return i.focus(), !0;
          i = a(e, i, p);
        }
        return !1;
      }
      let u = r.forwardRef(function (e, n) {
        let {
            actions: p,
            autoFocus: u = !1,
            autoFocusItem: d = !1,
            children: R,
            className: B,
            disabledItemsFocusable: N = !1,
            disableListWrap: h = !1,
            onKeyDown: k,
            variant: g = "selectedMenu",
            ...K
          } = e,
          Q = r.useRef(null),
          q = r.useRef({
            keys: [],
            repeating: !0,
            previousKeyMatched: !0,
            lastTime: null,
          });
        (0, o.A)(() => {
          u && Q.current.focus();
        }, [u]),
          r.useImperativeHandle(
            p,
            () => ({
              adjustStyleForScrollbar: (e, n) => {
                let { direction: p } = n,
                  r = !Q.current.style.width;
                if (e.clientHeight < Q.current.clientHeight && r) {
                  let n = "".concat(P((0, s.A)(e)), "px");
                  (Q.current.style[
                    "rtl" === p ? "paddingLeft" : "paddingRight"
                  ] = n),
                    (Q.current.style.width = "calc(100% + ".concat(n, ")"));
                }
                return Q.current;
              },
            }),
            []
          );
        let y = (0, i.A)(Q, n),
          v = -1;
        r.Children.forEach(R, (e, n) => {
          if (!r.isValidElement(e)) {
            v === n && (v += 1) >= R.length && (v = -1);
            return;
          }
          e.props.disabled ||
            ("selectedMenu" === g && e.props.selected
              ? (v = n)
              : -1 !== v || (v = n)),
            v === n &&
              (e.props.disabled ||
                e.props.muiSkipListHighlight ||
                e.type.muiSkipListHighlight) &&
              (v += 1) >= R.length &&
              (v = -1);
        });
        let D = r.Children.map(R, (e, n) => {
          if (n === v) {
            let n = {};
            return (
              d && (n.autoFocus = !0),
              void 0 === e.props.tabIndex &&
                "selectedMenu" === g &&
                (n.tabIndex = 0),
              r.cloneElement(e, n)
            );
          }
          return e;
        });
        return (0, l.jsx)(t.A, {
          role: "menu",
          ref: y,
          className: B,
          onKeyDown: (e) => {
            let n = Q.current,
              p = e.key;
            if (e.ctrlKey || e.metaKey || e.altKey) {
              k && k(e);
              return;
            }
            let r = (0, a.A)(n).activeElement;
            if ("ArrowDown" === p) e.preventDefault(), m(n, r, h, N, c);
            else if ("ArrowUp" === p) e.preventDefault(), m(n, r, h, N, b);
            else if ("Home" === p) e.preventDefault(), m(n, null, h, N, c);
            else if ("End" === p) e.preventDefault(), m(n, null, h, N, b);
            else if (1 === p.length) {
              let a = q.current,
                t = p.toLowerCase(),
                P = performance.now();
              a.keys.length > 0 &&
                (P - a.lastTime > 500
                  ? ((a.keys = []),
                    (a.repeating = !0),
                    (a.previousKeyMatched = !0))
                  : a.repeating && t !== a.keys[0] && (a.repeating = !1)),
                (a.lastTime = P),
                a.keys.push(t);
              let i = r && !a.repeating && f(r, a);
              a.previousKeyMatched && (i || m(n, r, !1, N, c, a))
                ? e.preventDefault()
                : (a.previousKeyMatched = !1);
            }
            k && k(e);
          },
          tabIndex: u ? 0 : -1,
          ...K,
          children: D,
        });
      });
    },
    35779: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => el });
      var r,
        a = p(14232),
        t = p(69241),
        P = p(12535),
        i = p(4697),
        o = p(43165),
        s = p(69135),
        l = p(53855),
        c = p(90917),
        b = p(80027),
        f = p(62844),
        m = p(86863),
        u = p(34479),
        d = p(15027),
        R = p(68275),
        B = p(54773),
        N = p(52196),
        h = p(47951),
        k = p(45879);
      function g(e) {
        return (0, k.Ay)("MuiMenu", e);
      }
      (0, h.A)("MuiMenu", ["root", "paper", "list"]);
      var K = p(67360),
        Q = p(37876);
      let q = { vertical: "top", horizontal: "right" },
        y = { vertical: "top", horizontal: "left" },
        v = (e) => {
          let { classes: n } = e;
          return (0, i.A)(
            { root: ["root"], paper: ["paper"], list: ["list"] },
            g,
            n
          );
        },
        D = (0, B.Ay)(d.Ay, {
          shouldForwardProp: (e) => (0, R.A)(e) || "classes" === e,
          name: "MuiMenu",
          slot: "Root",
          overridesResolver: (e, n) => n.root,
        })({}),
        S = (0, B.Ay)(d.IJ, {
          name: "MuiMenu",
          slot: "Paper",
          overridesResolver: (e, n) => n.paper,
        })({
          maxHeight: "calc(100% - 96px)",
          WebkitOverflowScrolling: "touch",
        }),
        A = (0, B.Ay)(u.A, {
          name: "MuiMenu",
          slot: "List",
          overridesResolver: (e, n) => n.list,
        })({ outline: 0 }),
        V = a.forwardRef(function (e, n) {
          let p = (0, N.b)({ props: e, name: "MuiMenu" }),
            {
              autoFocus: r = !0,
              children: P,
              className: i,
              disableAutoFocusItem: o = !1,
              MenuListProps: s = {},
              onClose: l,
              open: c,
              PaperProps: b = {},
              PopoverClasses: u,
              transitionDuration: d = "auto",
              TransitionProps: { onEntering: R, ...B } = {},
              variant: h = "selectedMenu",
              slots: k = {},
              slotProps: g = {},
              ...V
            } = p,
            G = (0, f.I)(),
            C = {
              ...p,
              autoFocus: r,
              disableAutoFocusItem: o,
              MenuListProps: s,
              onEntering: R,
              PaperProps: b,
              transitionDuration: d,
              TransitionProps: B,
              variant: h,
            },
            w = v(C),
            x = r && !o && c,
            M = a.useRef(null),
            O = (e, n) => {
              M.current &&
                M.current.adjustStyleForScrollbar(e, {
                  direction: G ? "rtl" : "ltr",
                }),
                R && R(e, n);
            },
            E = (e) => {
              "Tab" === e.key && (e.preventDefault(), l && l(e, "tabKeyDown"));
            },
            I = -1;
          a.Children.map(P, (e, n) => {
            a.isValidElement(e) &&
              (e.props.disabled ||
                ("selectedMenu" === h && e.props.selected
                  ? (I = n)
                  : -1 !== I || (I = n)));
          });
          let L = {
              slots: k,
              slotProps: { list: s, transition: B, paper: b, ...g },
            },
            z = (0, m.A)({
              elementType: k.root,
              externalSlotProps: g.root,
              ownerState: C,
              className: [w.root, i],
            }),
            [T, _] = (0, K.A)("paper", {
              className: w.paper,
              elementType: S,
              externalForwardedProps: L,
              shouldForwardComponentProp: !0,
              ownerState: C,
            }),
            [F, j] = (0, K.A)("list", {
              className: (0, t.A)(w.list, s.className),
              elementType: A,
              shouldForwardComponentProp: !0,
              externalForwardedProps: L,
              getSlotProps: (e) => ({
                ...e,
                onKeyDown: (n) => {
                  var p;
                  E(n),
                    null === (p = e.onKeyDown) || void 0 === p || p.call(e, n);
                },
              }),
              ownerState: C,
            }),
            W =
              "function" == typeof L.slotProps.transition
                ? L.slotProps.transition(C)
                : L.slotProps.transition;
          return (0, Q.jsx)(D, {
            onClose: l,
            anchorOrigin: {
              vertical: "bottom",
              horizontal: G ? "right" : "left",
            },
            transformOrigin: G ? q : y,
            slots: {
              root: k.root,
              paper: T,
              backdrop: k.backdrop,
              ...(k.transition && { transition: k.transition }),
            },
            slotProps: {
              root: z,
              paper: _,
              backdrop:
                "function" == typeof g.backdrop ? g.backdrop(C) : g.backdrop,
              transition: {
                ...W,
                onEntering: function () {
                  for (
                    var e, n = arguments.length, p = Array(n), r = 0;
                    r < n;
                    r++
                  )
                    p[r] = arguments[r];
                  O(...p),
                    null == W ||
                      null === (e = W.onEntering) ||
                      void 0 === e ||
                      e.call(W, ...p);
                },
              },
            },
            open: c,
            ref: n,
            transitionDuration: d,
            ownerState: C,
            ...V,
            classes: u,
            children: (0, Q.jsx)(F, {
              actions: M,
              autoFocus: r && (-1 === I || o),
              autoFocusItem: x,
              variant: h,
              ...j,
              children: P,
            }),
          });
        });
      function G(e) {
        return (0, k.Ay)("MuiNativeSelect", e);
      }
      let C = (0, h.A)("MuiNativeSelect", [
          "root",
          "select",
          "multiple",
          "filled",
          "outlined",
          "standard",
          "disabled",
          "icon",
          "iconOpen",
          "iconFilled",
          "iconOutlined",
          "iconStandard",
          "nativeInput",
          "error",
        ]),
        w = (e) => {
          let {
              classes: n,
              variant: p,
              disabled: r,
              multiple: a,
              open: t,
              error: P,
            } = e,
            o = {
              select: [
                "select",
                p,
                r && "disabled",
                a && "multiple",
                P && "error",
              ],
              icon: [
                "icon",
                "icon".concat((0, b.A)(p)),
                t && "iconOpen",
                r && "disabled",
              ],
            };
          return (0, i.A)(o, G, n);
        },
        x = (0, B.Ay)("select")((e) => {
          let { theme: n } = e;
          return {
            MozAppearance: "none",
            WebkitAppearance: "none",
            userSelect: "none",
            borderRadius: 0,
            cursor: "pointer",
            "&:focus": { borderRadius: 0 },
            ["&.".concat(C.disabled)]: { cursor: "default" },
            "&[multiple]": { height: "auto" },
            "&:not([multiple]) option, &:not([multiple]) optgroup": {
              backgroundColor: (n.vars || n).palette.background.paper,
            },
            variants: [
              {
                props: (e) => {
                  let { ownerState: n } = e;
                  return "filled" !== n.variant && "outlined" !== n.variant;
                },
                style: { "&&&": { paddingRight: 24, minWidth: 16 } },
              },
              {
                props: { variant: "filled" },
                style: { "&&&": { paddingRight: 32 } },
              },
              {
                props: { variant: "outlined" },
                style: {
                  borderRadius: (n.vars || n).shape.borderRadius,
                  "&:focus": { borderRadius: (n.vars || n).shape.borderRadius },
                  "&&&": { paddingRight: 32 },
                },
              },
            ],
          };
        }),
        M = (0, B.Ay)(x, {
          name: "MuiNativeSelect",
          slot: "Select",
          shouldForwardProp: R.A,
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.select,
              n[p.variant],
              p.error && n.error,
              { ["&.".concat(C.multiple)]: n.multiple },
            ];
          },
        })({}),
        O = (0, B.Ay)("svg")((e) => {
          let { theme: n } = e;
          return {
            position: "absolute",
            right: 0,
            top: "calc(50% - .5em)",
            pointerEvents: "none",
            color: (n.vars || n).palette.action.active,
            ["&.".concat(C.disabled)]: {
              color: (n.vars || n).palette.action.disabled,
            },
            variants: [
              {
                props: (e) => {
                  let { ownerState: n } = e;
                  return n.open;
                },
                style: { transform: "rotate(180deg)" },
              },
              { props: { variant: "filled" }, style: { right: 7 } },
              { props: { variant: "outlined" }, style: { right: 7 } },
            ],
          };
        }),
        E = (0, B.Ay)(O, {
          name: "MuiNativeSelect",
          slot: "Icon",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.icon,
              p.variant && n["icon".concat((0, b.A)(p.variant))],
              p.open && n.iconOpen,
            ];
          },
        })({}),
        I = a.forwardRef(function (e, n) {
          let {
              className: p,
              disabled: r,
              error: P,
              IconComponent: i,
              inputRef: o,
              variant: s = "standard",
              ...l
            } = e,
            c = { ...e, disabled: r, variant: s, error: P },
            b = w(c);
          return (0, Q.jsxs)(a.Fragment, {
            children: [
              (0, Q.jsx)(M, {
                ownerState: c,
                className: (0, t.A)(b.select, p),
                disabled: r,
                ref: o || n,
                ...l,
              }),
              e.multiple
                ? null
                : (0, Q.jsx)(E, { as: i, ownerState: c, className: b.icon }),
            ],
          });
        });
      var L = p(49790),
        z = p(46871),
        T = p(66313),
        _ = p(1154);
      function F(e) {
        return (0, k.Ay)("MuiSelect", e);
      }
      let j = (0, h.A)("MuiSelect", [
          "root",
          "select",
          "multiple",
          "filled",
          "outlined",
          "standard",
          "disabled",
          "focused",
          "icon",
          "iconOpen",
          "iconFilled",
          "iconOutlined",
          "iconStandard",
          "nativeInput",
          "error",
        ]),
        W = (0, B.Ay)(x, {
          name: "MuiSelect",
          slot: "Select",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              { ["&.".concat(j.select)]: n.select },
              { ["&.".concat(j.select)]: n[p.variant] },
              { ["&.".concat(j.error)]: n.error },
              { ["&.".concat(j.multiple)]: n.multiple },
            ];
          },
        })({
          ["&.".concat(j.select)]: {
            height: "auto",
            minHeight: "1.4375em",
            textOverflow: "ellipsis",
            whiteSpace: "nowrap",
            overflow: "hidden",
          },
        }),
        H = (0, B.Ay)(O, {
          name: "MuiSelect",
          slot: "Icon",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.icon,
              p.variant && n["icon".concat((0, b.A)(p.variant))],
              p.open && n.iconOpen,
            ];
          },
        })({}),
        $ = (0, B.Ay)("input", {
          shouldForwardProp: (e) => (0, z.A)(e) && "classes" !== e,
          name: "MuiSelect",
          slot: "NativeInput",
          overridesResolver: (e, n) => n.nativeInput,
        })({
          bottom: 0,
          left: 0,
          position: "absolute",
          opacity: 0,
          pointerEvents: "none",
          width: "100%",
          boxSizing: "border-box",
        });
      function U(e, n) {
        return "object" == typeof n && null !== n
          ? e === n
          : String(e) === String(n);
      }
      let Z = (e) => {
          let {
              classes: n,
              variant: p,
              disabled: r,
              multiple: a,
              open: t,
              error: P,
            } = e,
            o = {
              select: [
                "select",
                p,
                r && "disabled",
                a && "multiple",
                P && "error",
              ],
              icon: [
                "icon",
                "icon".concat((0, b.A)(p)),
                t && "iconOpen",
                r && "disabled",
              ],
              nativeInput: ["nativeInput"],
            };
          return (0, i.A)(o, F, n);
        },
        Y = a.forwardRef(function (e, n) {
          var p, P;
          let i, o;
          let {
              "aria-describedby": b,
              "aria-label": f,
              autoFocus: m,
              autoWidth: u,
              children: d,
              className: R,
              defaultOpen: B,
              defaultValue: N,
              disabled: h,
              displayEmpty: k,
              error: g = !1,
              IconComponent: K,
              inputRef: q,
              labelId: y,
              MenuProps: v = {},
              multiple: D,
              name: S,
              onBlur: A,
              onChange: G,
              onClose: C,
              onFocus: w,
              onOpen: x,
              open: M,
              readOnly: O,
              renderValue: E,
              required: I,
              SelectDisplayProps: z = {},
              tabIndex: F,
              type: j,
              value: Y,
              variant: J = "standard",
              ...X
            } = e,
            [ee, en] = (0, _.A)({ controlled: Y, default: N, name: "Select" }),
            [ep, er] = (0, _.A)({ controlled: M, default: B, name: "Select" }),
            ea = a.useRef(null),
            et = a.useRef(null),
            [eP, ei] = a.useState(null),
            { current: eo } = a.useRef(null != M),
            [es, el] = a.useState(),
            ec = (0, T.A)(n, q),
            eb = a.useCallback((e) => {
              (et.current = e), e && ei(e);
            }, []),
            ef = null == eP ? void 0 : eP.parentNode;
          a.useImperativeHandle(
            ec,
            () => ({
              focus: () => {
                et.current.focus();
              },
              node: ea.current,
              value: ee,
            }),
            [ee]
          ),
            a.useEffect(() => {
              B &&
                ep &&
                eP &&
                !eo &&
                (el(u ? null : ef.clientWidth), et.current.focus());
            }, [eP, u]),
            a.useEffect(() => {
              m && et.current.focus();
            }, [m]),
            a.useEffect(() => {
              if (!y) return;
              let e = (0, c.A)(et.current).getElementById(y);
              if (e) {
                let n = () => {
                  getSelection().isCollapsed && et.current.focus();
                };
                return (
                  e.addEventListener("click", n),
                  () => {
                    e.removeEventListener("click", n);
                  }
                );
              }
            }, [y]);
          let em = (e, n) => {
              e ? x && x(n) : C && C(n),
                eo || (el(u ? null : ef.clientWidth), er(e));
            },
            eu = a.Children.toArray(d),
            ed = (e) => (n) => {
              let p;
              if (n.currentTarget.hasAttribute("tabindex")) {
                if (D) {
                  p = Array.isArray(ee) ? ee.slice() : [];
                  let n = ee.indexOf(e.props.value);
                  -1 === n ? p.push(e.props.value) : p.splice(n, 1);
                } else p = e.props.value;
                if (
                  (e.props.onClick && e.props.onClick(n),
                  ee !== p && (en(p), G))
                ) {
                  let r = n.nativeEvent || n,
                    a = new r.constructor(r.type, r);
                  Object.defineProperty(a, "target", {
                    writable: !0,
                    value: { value: p, name: S },
                  }),
                    G(a, e);
                }
                D || em(!1, n);
              }
            },
            eR = null !== eP && ep;
          delete X["aria-invalid"];
          let eB = [],
            eN = !1;
          ((0, L.lq)({ value: ee }) || k) && (E ? (i = E(ee)) : (eN = !0));
          let eh = eu.map((e) => {
            let n;
            if (!a.isValidElement(e)) return null;
            if (D) {
              if (!Array.isArray(ee)) throw Error((0, s.A)(2));
              (n = ee.some((n) => U(n, e.props.value))) &&
                eN &&
                eB.push(e.props.children);
            } else (n = U(ee, e.props.value)) && eN && (o = e.props.children);
            return a.cloneElement(e, {
              "aria-selected": n ? "true" : "false",
              onClick: ed(e),
              onKeyUp: (n) => {
                " " === n.key && n.preventDefault(),
                  e.props.onKeyUp && e.props.onKeyUp(n);
              },
              role: "option",
              selected: n,
              value: void 0,
              "data-value": e.props.value,
            });
          });
          eN &&
            (i = D
              ? 0 === eB.length
                ? null
                : eB.reduce(
                    (e, n, p) => (
                      e.push(n), p < eB.length - 1 && e.push(", "), e
                    ),
                    []
                  )
              : o);
          let ek = es;
          !u && eo && eP && (ek = ef.clientWidth);
          let eg = z.id || (S ? "mui-component-select-".concat(S) : void 0),
            eK = { ...e, variant: J, value: ee, open: eR, error: g },
            eQ = Z(eK),
            eq = {
              ...v.PaperProps,
              ...(null === (p = v.slotProps) || void 0 === p
                ? void 0
                : p.paper),
            },
            ey = (0, l.A)();
          return (0, Q.jsxs)(a.Fragment, {
            children: [
              (0, Q.jsx)(W, {
                as: "div",
                ref: eb,
                tabIndex: void 0 !== F ? F : h ? null : 0,
                role: "combobox",
                "aria-controls": eR ? ey : void 0,
                "aria-disabled": h ? "true" : void 0,
                "aria-expanded": eR ? "true" : "false",
                "aria-haspopup": "listbox",
                "aria-label": f,
                "aria-labelledby": [y, eg].filter(Boolean).join(" ") || void 0,
                "aria-describedby": b,
                "aria-required": I ? "true" : void 0,
                "aria-invalid": g ? "true" : void 0,
                onKeyDown: (e) => {
                  !O &&
                    [" ", "ArrowUp", "ArrowDown", "Enter"].includes(e.key) &&
                    (e.preventDefault(), em(!0, e));
                },
                onMouseDown:
                  h || O
                    ? null
                    : (e) => {
                        0 === e.button &&
                          (e.preventDefault(), et.current.focus(), em(!0, e));
                      },
                onBlur: (e) => {
                  !eR &&
                    A &&
                    (Object.defineProperty(e, "target", {
                      writable: !0,
                      value: { value: ee, name: S },
                    }),
                    A(e));
                },
                onFocus: w,
                ...z,
                ownerState: eK,
                className: (0, t.A)(z.className, eQ.select, R),
                id: eg,
                children:
                  null != (P = i) && ("string" != typeof P || P.trim())
                    ? i
                    : r ||
                      (r = (0, Q.jsx)("span", {
                        className: "notranslate",
                        "aria-hidden": !0,
                        children: "​",
                      })),
              }),
              (0, Q.jsx)($, {
                "aria-invalid": g,
                value: Array.isArray(ee) ? ee.join(",") : ee,
                name: S,
                ref: ea,
                "aria-hidden": !0,
                onChange: (e) => {
                  let n = eu.find((n) => n.props.value === e.target.value);
                  void 0 !== n && (en(n.props.value), G && G(e, n));
                },
                tabIndex: -1,
                disabled: h,
                className: eQ.nativeInput,
                autoFocus: m,
                required: I,
                ...X,
                ownerState: eK,
              }),
              (0, Q.jsx)(H, { as: K, className: eQ.icon, ownerState: eK }),
              (0, Q.jsx)(V, {
                id: "menu-".concat(S || ""),
                anchorEl: ef,
                open: eR,
                onClose: (e) => {
                  em(!1, e);
                },
                anchorOrigin: { vertical: "bottom", horizontal: "center" },
                transformOrigin: { vertical: "top", horizontal: "center" },
                ...v,
                slotProps: {
                  ...v.slotProps,
                  list: {
                    "aria-labelledby": y,
                    role: "listbox",
                    "aria-multiselectable": D ? "true" : void 0,
                    disableListWrap: !0,
                    id: ey,
                    ...v.MenuListProps,
                  },
                  paper: {
                    ...eq,
                    style: { minWidth: ek, ...(null != eq ? eq.style : null) },
                  },
                },
                children: eh,
              }),
            ],
          });
        });
      var J = p(27367),
        X = p(74073),
        ee = p(30035),
        en = p(36850),
        ep = p(21998),
        er = p(83290);
      let ea = (e) => {
          let { classes: n } = e,
            p = (0, i.A)({ root: ["root"] }, F, n);
          return { ...n, ...p };
        },
        et = {
          name: "MuiSelect",
          overridesResolver: (e, n) => n.root,
          shouldForwardProp: (e) => (0, R.A)(e) && "variant" !== e,
          slot: "Root",
        },
        eP = (0, B.Ay)(en.A, et)(""),
        ei = (0, B.Ay)(er.A, et)(""),
        eo = (0, B.Ay)(ep.A, et)(""),
        es = a.forwardRef(function (e, n) {
          let p = (0, N.b)({ name: "MuiSelect", props: e }),
            {
              autoWidth: r = !1,
              children: i,
              classes: s = {},
              className: l,
              defaultOpen: c = !1,
              displayEmpty: b = !1,
              IconComponent: f = ee.A,
              id: m,
              input: u,
              inputProps: d,
              label: R,
              labelId: B,
              MenuProps: h,
              multiple: k = !1,
              native: g = !1,
              onClose: K,
              onOpen: q,
              open: y,
              renderValue: v,
              SelectDisplayProps: D,
              variant: S = "outlined",
              ...A
            } = p,
            V = (0, X.A)(),
            G = (0, J.A)({
              props: p,
              muiFormControl: V,
              states: ["variant", "error"],
            }),
            C = G.variant || S,
            w = { ...p, variant: C, classes: s },
            x = ea(w),
            { root: M, ...O } = x,
            E =
              u ||
              {
                standard: (0, Q.jsx)(eP, { ownerState: w }),
                outlined: (0, Q.jsx)(ei, { label: R, ownerState: w }),
                filled: (0, Q.jsx)(eo, { ownerState: w }),
              }[C],
            L = (0, T.A)(n, (0, o.A)(E));
          return (0, Q.jsx)(a.Fragment, {
            children: a.cloneElement(E, {
              inputComponent: g ? I : Y,
              inputProps: {
                children: i,
                error: G.error,
                IconComponent: f,
                variant: C,
                type: void 0,
                multiple: k,
                ...(g
                  ? { id: m }
                  : {
                      autoWidth: r,
                      defaultOpen: c,
                      displayEmpty: b,
                      labelId: B,
                      MenuProps: h,
                      onClose: K,
                      onOpen: q,
                      open: y,
                      renderValue: v,
                      SelectDisplayProps: { id: m, ...D },
                    }),
                ...d,
                classes: d ? (0, P.A)(O, d.classes) : O,
                ...(u ? u.props.inputProps : {}),
              },
              ...(((k && g) || b) && "outlined" === C ? { notched: !0 } : {}),
              ref: L,
              className: (0, t.A)(E.props.className, l, x.root),
              ...(!u && { variant: C }),
              ...A,
            }),
          });
        });
      es.muiName = "Select";
      let el = es;
    },
    36408: (e, n) => {
      "use strict";
      var p = Symbol.for("react.transitional.element"),
        r = Symbol.for("react.portal"),
        a = Symbol.for("react.fragment"),
        t = Symbol.for("react.strict_mode"),
        P = Symbol.for("react.profiler");
      Symbol.for("react.provider");
      var i = Symbol.for("react.consumer"),
        o = Symbol.for("react.context"),
        s = Symbol.for("react.forward_ref"),
        l = Symbol.for("react.suspense"),
        c = Symbol.for("react.suspense_list"),
        b = Symbol.for("react.memo"),
        f = Symbol.for("react.lazy"),
        m = Symbol.for("react.offscreen"),
        u = Symbol.for("react.client.reference");
      n.Hy = function (e) {
        return (
          "string" == typeof e ||
          "function" == typeof e ||
          e === a ||
          e === P ||
          e === t ||
          e === l ||
          e === c ||
          e === m ||
          ("object" == typeof e &&
            null !== e &&
            (e.$$typeof === f ||
              e.$$typeof === b ||
              e.$$typeof === o ||
              e.$$typeof === i ||
              e.$$typeof === s ||
              e.$$typeof === u ||
              void 0 !== e.getModuleId)) ||
          !1
        );
      };
    },
    36540: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => c });
      var r = p(14232),
        a = p(74253),
        t = p(43165),
        P = p(30566),
        i = p(6299),
        o = p(66313),
        s = p(37876);
      let l = { entering: { opacity: 1 }, entered: { opacity: 1 } },
        c = r.forwardRef(function (e, n) {
          let p = (0, P.A)(),
            c = {
              enter: p.transitions.duration.enteringScreen,
              exit: p.transitions.duration.leavingScreen,
            },
            {
              addEndListener: b,
              appear: f = !0,
              children: m,
              easing: u,
              in: d,
              onEnter: R,
              onEntered: B,
              onEntering: N,
              onExit: h,
              onExited: k,
              onExiting: g,
              style: K,
              timeout: Q = c,
              TransitionComponent: q = a.Ay,
              ...y
            } = e,
            v = r.useRef(null),
            D = (0, o.A)(v, (0, t.A)(m), n),
            S = (e) => (n) => {
              if (e) {
                let p = v.current;
                void 0 === n ? e(p) : e(p, n);
              }
            },
            A = S(N),
            V = S((e, n) => {
              (0, i.q)(e);
              let r = (0, i.c)(
                { style: K, timeout: Q, easing: u },
                { mode: "enter" }
              );
              (e.style.webkitTransition = p.transitions.create("opacity", r)),
                (e.style.transition = p.transitions.create("opacity", r)),
                R && R(e, n);
            }),
            G = S(B),
            C = S(g),
            w = S((e) => {
              let n = (0, i.c)(
                { style: K, timeout: Q, easing: u },
                { mode: "exit" }
              );
              (e.style.webkitTransition = p.transitions.create("opacity", n)),
                (e.style.transition = p.transitions.create("opacity", n)),
                h && h(e);
            }),
            x = S(k);
          return (0, s.jsx)(q, {
            appear: f,
            in: d,
            nodeRef: v,
            onEnter: V,
            onEntered: G,
            onEntering: A,
            onExit: w,
            onExited: x,
            onExiting: C,
            addEndListener: (e) => {
              b && b(v.current, e);
            },
            timeout: Q,
            ...y,
            children: (e, n) => {
              let { ownerState: p, ...a } = n;
              return r.cloneElement(m, {
                style: {
                  opacity: 0,
                  visibility: "exited" !== e || d ? void 0 : "hidden",
                  ...l[e],
                  ...K,
                  ...m.props.style,
                },
                ref: D,
                ...a,
              });
            },
          });
        });
    },
    36850: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => B });
      var r = p(14232),
        a = p(4697),
        t = p(12535),
        P = p(60129),
        i = p(68275),
        o = p(54773),
        s = p(82987),
        l = p(78457),
        c = p(52196),
        b = p(98630),
        f = p(37876);
      let m = (e) => {
          let { classes: n, disableUnderline: p } = e,
            r = (0, a.A)(
              { root: ["root", !p && "underline"], input: ["input"] },
              b.B,
              n
            );
          return { ...n, ...r };
        },
        u = (0, o.Ay)(P.Sh, {
          shouldForwardProp: (e) => (0, i.A)(e) || "classes" === e,
          name: "MuiInput",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [...(0, P.WC)(e, n), !p.disableUnderline && n.underline];
          },
        })(
          (0, s.A)((e) => {
            let { theme: n } = e,
              p =
                "light" === n.palette.mode
                  ? "rgba(0, 0, 0, 0.42)"
                  : "rgba(255, 255, 255, 0.7)";
            return (
              n.vars &&
                (p = "rgba("
                  .concat(n.vars.palette.common.onBackgroundChannel, " / ")
                  .concat(n.vars.opacity.inputUnderline, ")")),
              {
                position: "relative",
                variants: [
                  {
                    props: (e) => {
                      let { ownerState: n } = e;
                      return n.formControl;
                    },
                    style: { "label + &": { marginTop: 16 } },
                  },
                  {
                    props: (e) => {
                      let { ownerState: n } = e;
                      return !n.disableUnderline;
                    },
                    style: {
                      "&::after": {
                        left: 0,
                        bottom: 0,
                        content: '""',
                        position: "absolute",
                        right: 0,
                        transform: "scaleX(0)",
                        transition: n.transitions.create("transform", {
                          duration: n.transitions.duration.shorter,
                          easing: n.transitions.easing.easeOut,
                        }),
                        pointerEvents: "none",
                      },
                      ["&.".concat(b.A.focused, ":after")]: {
                        transform: "scaleX(1) translateX(0)",
                      },
                      ["&.".concat(b.A.error)]: {
                        "&::before, &::after": {
                          borderBottomColor: (n.vars || n).palette.error.main,
                        },
                      },
                      "&::before": {
                        borderBottom: "1px solid ".concat(p),
                        left: 0,
                        bottom: 0,
                        content: '"\\00a0"',
                        position: "absolute",
                        right: 0,
                        transition: n.transitions.create(
                          "border-bottom-color",
                          { duration: n.transitions.duration.shorter }
                        ),
                        pointerEvents: "none",
                      },
                      ["&:hover:not(."
                        .concat(b.A.disabled, ", .")
                        .concat(b.A.error, "):before")]: {
                        borderBottom: "2px solid ".concat(
                          (n.vars || n).palette.text.primary
                        ),
                        "@media (hover: none)": {
                          borderBottom: "1px solid ".concat(p),
                        },
                      },
                      ["&.".concat(b.A.disabled, ":before")]: {
                        borderBottomStyle: "dotted",
                      },
                    },
                  },
                  ...Object.entries(n.palette)
                    .filter((0, l.A)())
                    .map((e) => {
                      let [p] = e;
                      return {
                        props: { color: p, disableUnderline: !1 },
                        style: {
                          "&::after": {
                            borderBottom: "2px solid ".concat(
                              (n.vars || n).palette[p].main
                            ),
                          },
                        },
                      };
                    }),
                ],
              }
            );
          })
        ),
        d = (0, o.Ay)(P.ck, {
          name: "MuiInput",
          slot: "Input",
          overridesResolver: P.Oj,
        })({}),
        R = r.forwardRef(function (e, n) {
          var p, r, a, i;
          let o = (0, c.b)({ props: e, name: "MuiInput" }),
            {
              disableUnderline: s = !1,
              components: l = {},
              componentsProps: b,
              fullWidth: R = !1,
              inputComponent: B = "input",
              multiline: N = !1,
              slotProps: h,
              slots: k = {},
              type: g = "text",
              ...K
            } = o,
            Q = m(o),
            q = { root: { ownerState: { disableUnderline: s } } },
            y = (null != h ? h : b) ? (0, t.A)(null != h ? h : b, q) : q,
            v =
              null !==
                (r = null !== (p = k.root) && void 0 !== p ? p : l.Root) &&
              void 0 !== r
                ? r
                : u,
            D =
              null !==
                (i = null !== (a = k.input) && void 0 !== a ? a : l.Input) &&
              void 0 !== i
                ? i
                : d;
          return (0, f.jsx)(P.Ay, {
            slots: { root: v, input: D },
            slotProps: y,
            fullWidth: R,
            inputComponent: B,
            multiline: N,
            ref: n,
            type: g,
            ...K,
            classes: Q,
          });
        });
      R.muiName = "Input";
      let B = R;
    },
    37094: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t }), p(14232);
      var r = p(38993),
        a = p(37876);
      function t(e) {
        let { styles: n, defaultTheme: p = {} } = e,
          t =
            "function" == typeof n
              ? (e) => n(null == e || 0 === Object.keys(e).length ? p : e)
              : n;
        return (0, a.jsx)(r.mL, { styles: t });
      }
    },
    37149: (e, n, p) => {
      "use strict";
      p.d(n, {
        Cp: () => m,
        EN: () => f,
        Eh: () => s,
        F$: () => b,
        MK: () => l,
        S$: () => r,
        ZM: () => Q,
        ZZ: () => g,
        Zw: () => t,
        d2: () => o,
        f8: () => u,
        gn: () => P,
        hT: () => K,
        j3: () => i,
        lQ: () => a,
        nJ: () => c,
        pl: () => h,
        y9: () => k,
        yy: () => N,
      });
      var r = "undefined" == typeof window || "Deno" in globalThis;
      function a() {}
      function t(e, n) {
        return "function" == typeof e ? e(n) : e;
      }
      function P(e) {
        return "number" == typeof e && e >= 0 && e !== 1 / 0;
      }
      function i(e, n) {
        return Math.max(e + (n || 0) - Date.now(), 0);
      }
      function o(e, n) {
        return "function" == typeof e ? e(n) : e;
      }
      function s(e, n) {
        return "function" == typeof e ? e(n) : e;
      }
      function l(e, n) {
        let {
          type: p = "all",
          exact: r,
          fetchStatus: a,
          predicate: t,
          queryKey: P,
          stale: i,
        } = e;
        if (P) {
          if (r) {
            if (n.queryHash !== b(P, n.options)) return !1;
          } else if (!m(n.queryKey, P)) return !1;
        }
        if ("all" !== p) {
          let e = n.isActive();
          if (("active" === p && !e) || ("inactive" === p && e)) return !1;
        }
        return (
          ("boolean" != typeof i || n.isStale() === i) &&
          (!a || a === n.state.fetchStatus) &&
          (!t || !!t(n))
        );
      }
      function c(e, n) {
        let { exact: p, status: r, predicate: a, mutationKey: t } = e;
        if (t) {
          if (!n.options.mutationKey) return !1;
          if (p) {
            if (f(n.options.mutationKey) !== f(t)) return !1;
          } else if (!m(n.options.mutationKey, t)) return !1;
        }
        return (!r || n.state.status === r) && (!a || !!a(n));
      }
      function b(e, n) {
        return (n?.queryKeyHashFn || f)(e);
      }
      function f(e) {
        return JSON.stringify(e, (e, n) =>
          R(n)
            ? Object.keys(n)
                .sort()
                .reduce((e, p) => ((e[p] = n[p]), e), {})
            : n
        );
      }
      function m(e, n) {
        return (
          e === n ||
          (typeof e == typeof n &&
            !!e &&
            !!n &&
            "object" == typeof e &&
            "object" == typeof n &&
            Object.keys(n).every((p) => m(e[p], n[p])))
        );
      }
      function u(e, n) {
        if (!n || Object.keys(e).length !== Object.keys(n).length) return !1;
        for (let p in e) if (e[p] !== n[p]) return !1;
        return !0;
      }
      function d(e) {
        return Array.isArray(e) && e.length === Object.keys(e).length;
      }
      function R(e) {
        if (!B(e)) return !1;
        let n = e.constructor;
        if (void 0 === n) return !0;
        let p = n.prototype;
        return (
          !!(B(p) && p.hasOwnProperty("isPrototypeOf")) &&
          Object.getPrototypeOf(e) === Object.prototype
        );
      }
      function B(e) {
        return "[object Object]" === Object.prototype.toString.call(e);
      }
      function N(e) {
        return new Promise((n) => {
          setTimeout(n, e);
        });
      }
      function h(e, n, p) {
        return "function" == typeof p.structuralSharing
          ? p.structuralSharing(e, n)
          : !1 !== p.structuralSharing
            ? (function e(n, p) {
                if (n === p) return n;
                let r = d(n) && d(p);
                if (r || (R(n) && R(p))) {
                  let a = r ? n : Object.keys(n),
                    t = a.length,
                    P = r ? p : Object.keys(p),
                    i = P.length,
                    o = r ? [] : {},
                    s = 0;
                  for (let t = 0; t < i; t++) {
                    let i = r ? t : P[t];
                    ((!r && a.includes(i)) || r) &&
                    void 0 === n[i] &&
                    void 0 === p[i]
                      ? ((o[i] = void 0), s++)
                      : ((o[i] = e(n[i], p[i])),
                        o[i] === n[i] && void 0 !== n[i] && s++);
                  }
                  return t === i && s === t ? n : o;
                }
                return p;
              })(e, n)
            : n;
      }
      function k(e, n, p = 0) {
        let r = [...e, n];
        return p && r.length > p ? r.slice(1) : r;
      }
      function g(e, n, p = 0) {
        let r = [n, ...e];
        return p && r.length > p ? r.slice(0, -1) : r;
      }
      var K = Symbol();
      function Q(e, n) {
        return !e.queryFn && n?.initialPromise
          ? () => n.initialPromise
          : e.queryFn && e.queryFn !== K
            ? e.queryFn
            : () => Promise.reject(Error(`Missing queryFn: '${e.queryHash}'`));
      }
    },
    37551: (e, n, p) => {
      "use strict";
      p.d(n, { Dp: () => c, Dg: () => b }), p(14232);
      var r = p(90809),
        a = p(37094),
        t = p(64289),
        P = p(37876);
      let i = function ({ styles: e, themeId: n, defaultTheme: p = {} }) {
        let r = (0, t.A)(p),
          i = "function" == typeof e ? e((n && r[n]) || r) : e;
        return (0, P.jsx)(a.A, { styles: i });
      };
      var o = p(56892),
        s = p(3637);
      let l = function (e) {
        return (0, P.jsx)(i, { ...e, defaultTheme: o.A, themeId: s.A });
      };
      function c(e) {
        return function (n) {
          return (0, P.jsx)(l, {
            styles: "function" == typeof e ? (p) => e({ theme: p, ...n }) : e,
          });
        };
      }
      function b() {
        return r.A;
      }
    },
    38993: (e, n, p) => {
      "use strict";
      p.d(n, { AH: () => l, i7: () => c, mL: () => s });
      var r = p(21398),
        a = p(14232),
        t = p(74849),
        P = p(78455),
        i = p(67955);
      p(3904), p(23520);
      var o = function (e, n) {
        var p = arguments;
        if (null == n || !r.h.call(n, "css"))
          return a.createElement.apply(void 0, p);
        var t = p.length,
          P = Array(t);
        (P[0] = r.E), (P[1] = (0, r.c)(e, n));
        for (var i = 2; i < t; i++) P[i] = p[i];
        return a.createElement.apply(null, P);
      };
      !(function (e) {
        var n;
        n || (n = e.JSX || (e.JSX = {}));
      })(o || (o = {}));
      var s = (0, r.w)(function (e, n) {
        var p = e.styles,
          o = (0, i.J)([p], void 0, a.useContext(r.T)),
          s = a.useRef();
        return (
          (0, P.i)(
            function () {
              var e = n.key + "-global",
                p = new n.sheet.constructor({
                  key: e,
                  nonce: n.sheet.nonce,
                  container: n.sheet.container,
                  speedy: n.sheet.isSpeedy,
                }),
                r = !1,
                a = document.querySelector(
                  'style[data-emotion="' + e + " " + o.name + '"]'
                );
              return (
                n.sheet.tags.length && (p.before = n.sheet.tags[0]),
                null !== a &&
                  ((r = !0), a.setAttribute("data-emotion", e), p.hydrate([a])),
                (s.current = [p, r]),
                function () {
                  p.flush();
                }
              );
            },
            [n]
          ),
          (0, P.i)(
            function () {
              var e = s.current,
                p = e[0];
              if (e[1]) {
                e[1] = !1;
                return;
              }
              if (
                (void 0 !== o.next && (0, t.sk)(n, o.next, !0), p.tags.length)
              ) {
                var r = p.tags[p.tags.length - 1].nextElementSibling;
                (p.before = r), p.flush();
              }
              n.insert("", o, p, !1);
            },
            [n, o.name]
          ),
          null
        );
      });
      function l() {
        for (var e = arguments.length, n = Array(e), p = 0; p < e; p++)
          n[p] = arguments[p];
        return (0, i.J)(n);
      }
      function c() {
        var e = l.apply(void 0, arguments),
          n = "animation-" + e.name;
        return {
          name: n,
          styles: "@keyframes " + n + "{" + e.styles + "}",
          anim: 1,
          toString: function () {
            return "_EMO_" + this.name + "_" + this.styles + "_EMO_";
          },
        };
      }
    },
    39228: (e, n, p) => {
      "use strict";
      p.d(n, { f: () => P });
      var r = p(19271),
        a = p(67405),
        t = p(47713);
      class P {
        static async create(e) {
          if (!P.isSupported()) throw Error("Stockfish 17 is not supported");
          let n = (0, t.eO)();
          n || console.log("Single thread mode");
          let p = "engines/stockfish-17/stockfish-17"
              .concat(e ? "-lite" : "")
              .concat(n ? "" : "-single", ".js"),
            i = e ? r.Qz.Stockfish17Lite : r.Qz.Stockfish17;
          return a.Y.create(i, p);
        }
        static isSupported() {
          return (0, t.TH)();
        }
      }
    },
    40053: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => x });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(51529),
        i = p(72484),
        o = p(54773),
        s = p(82987),
        l = p(52196),
        c = p(30929),
        b = p(61637),
        f = p(44471),
        m = p(7061);
      function u(...e) {
        return e.reduce(
          (e, n) =>
            null == n
              ? e
              : function (...p) {
                  e.apply(this, p), n.apply(this, p);
                },
          () => {}
        );
      }
      var d = p(92233),
        R = p(43583),
        B = p(15783);
      function N(e, n) {
        n
          ? e.setAttribute("aria-hidden", "true")
          : e.removeAttribute("aria-hidden");
      }
      function h(e) {
        return parseInt((0, R.A)(e).getComputedStyle(e).paddingRight, 10) || 0;
      }
      function k(e, n, p, r, a) {
        let t = [n, p, ...r];
        [].forEach.call(e.children, (e) => {
          let n = !t.includes(e),
            p = !(function (e) {
              let n = [
                  "TEMPLATE",
                  "SCRIPT",
                  "STYLE",
                  "LINK",
                  "MAP",
                  "META",
                  "NOSCRIPT",
                  "PICTURE",
                  "COL",
                  "COLGROUP",
                  "PARAM",
                  "SLOT",
                  "SOURCE",
                  "TRACK",
                ].includes(e.tagName),
                p =
                  "INPUT" === e.tagName && "hidden" === e.getAttribute("type");
              return n || p;
            })(e);
          n && p && N(e, a);
        });
      }
      function g(e, n) {
        let p = -1;
        return e.some((e, r) => !!n(e) && ((p = r), !0)), p;
      }
      class K {
        add(e, n) {
          let p = this.modals.indexOf(e);
          if (-1 !== p) return p;
          (p = this.modals.length),
            this.modals.push(e),
            e.modalRef && N(e.modalRef, !1);
          let r = (function (e) {
            let n = [];
            return (
              [].forEach.call(e.children, (e) => {
                "true" === e.getAttribute("aria-hidden") && n.push(e);
              }),
              n
            );
          })(n);
          k(n, e.mount, e.modalRef, r, !0);
          let a = g(this.containers, (e) => e.container === n);
          return (
            -1 !== a
              ? this.containers[a].modals.push(e)
              : this.containers.push({
                  modals: [e],
                  container: n,
                  restore: null,
                  hiddenSiblings: r,
                }),
            p
          );
        }
        mount(e, n) {
          let p = g(this.containers, (n) => n.modals.includes(e)),
            r = this.containers[p];
          r.restore ||
            (r.restore = (function (e, n) {
              let p = [],
                r = e.container;
              if (!n.disableScrollLock) {
                let e;
                if (
                  (function (e) {
                    let n = (0, f.A)(e);
                    return n.body === e
                      ? (0, R.A)(e).innerWidth > n.documentElement.clientWidth
                      : e.scrollHeight > e.clientHeight;
                  })(r)
                ) {
                  let e = (0, B.A)((0, R.A)(r));
                  p.push({
                    value: r.style.paddingRight,
                    property: "padding-right",
                    el: r,
                  }),
                    (r.style.paddingRight = "".concat(h(r) + e, "px"));
                  let n = (0, f.A)(r).querySelectorAll(".mui-fixed");
                  [].forEach.call(n, (n) => {
                    p.push({
                      value: n.style.paddingRight,
                      property: "padding-right",
                      el: n,
                    }),
                      (n.style.paddingRight = "".concat(h(n) + e, "px"));
                  });
                }
                if (r.parentNode instanceof DocumentFragment)
                  e = (0, f.A)(r).body;
                else {
                  let n = r.parentElement,
                    p = (0, R.A)(r);
                  e =
                    (null == n ? void 0 : n.nodeName) === "HTML" &&
                    "scroll" === p.getComputedStyle(n).overflowY
                      ? n
                      : r;
                }
                p.push(
                  { value: e.style.overflow, property: "overflow", el: e },
                  { value: e.style.overflowX, property: "overflow-x", el: e },
                  { value: e.style.overflowY, property: "overflow-y", el: e }
                ),
                  (e.style.overflow = "hidden");
              }
              return () => {
                p.forEach((e) => {
                  let { value: n, el: p, property: r } = e;
                  n ? p.style.setProperty(r, n) : p.style.removeProperty(r);
                });
              };
            })(r, n));
        }
        remove(e) {
          let n =
              !(arguments.length > 1) ||
              void 0 === arguments[1] ||
              arguments[1],
            p = this.modals.indexOf(e);
          if (-1 === p) return p;
          let r = g(this.containers, (n) => n.modals.includes(e)),
            a = this.containers[r];
          if (
            (a.modals.splice(a.modals.indexOf(e), 1),
            this.modals.splice(p, 1),
            0 === a.modals.length)
          )
            a.restore && a.restore(),
              e.modalRef && N(e.modalRef, n),
              k(a.container, e.mount, e.modalRef, a.hiddenSiblings, !1),
              this.containers.splice(r, 1);
          else {
            let e = a.modals[a.modals.length - 1];
            e.modalRef && N(e.modalRef, !1);
          }
          return p;
        }
        isTopModal(e) {
          return (
            this.modals.length > 0 && this.modals[this.modals.length - 1] === e
          );
        }
        constructor() {
          (this.modals = []), (this.containers = []);
        }
      }
      let Q = () => {},
        q = new K(),
        y = function (e) {
          let {
              container: n,
              disableEscapeKeyDown: p = !1,
              disableScrollLock: a = !1,
              closeAfterTransition: t = !1,
              onTransitionEnter: P,
              onTransitionExited: i,
              children: o,
              onClose: s,
              open: l,
              rootRef: c,
            } = e,
            R = r.useRef({}),
            B = r.useRef(null),
            h = r.useRef(null),
            k = (0, b.A)(h, c),
            [g, K] = r.useState(!l),
            y = !!o && o.props.hasOwnProperty("in"),
            v = !0;
          ("false" === e["aria-hidden"] || !1 === e["aria-hidden"]) && (v = !1);
          let D = () => (0, f.A)(B.current),
            S = () => (
              (R.current.modalRef = h.current),
              (R.current.mount = B.current),
              R.current
            ),
            A = () => {
              q.mount(S(), { disableScrollLock: a }),
                h.current && (h.current.scrollTop = 0);
            },
            V = (0, m.A)(() => {
              let e = ("function" == typeof n ? n() : n) || D().body;
              q.add(S(), e), h.current && A();
            }),
            G = () => q.isTopModal(S()),
            C = (0, m.A)((e) => {
              (B.current = e),
                e && (l && G() ? A() : h.current && N(h.current, v));
            }),
            w = r.useCallback(() => {
              q.remove(S(), v);
            }, [v]);
          r.useEffect(
            () => () => {
              w();
            },
            [w]
          ),
            r.useEffect(() => {
              l ? V() : (y && t) || w();
            }, [l, w, y, t, V]);
          let x = (e) => (n) => {
              var r;
              null === (r = e.onKeyDown) || void 0 === r || r.call(e, n),
                "Escape" === n.key &&
                  229 !== n.which &&
                  G() &&
                  !p &&
                  (n.stopPropagation(), s && s(n, "escapeKeyDown"));
            },
            M = (e) => (n) => {
              var p;
              null === (p = e.onClick) || void 0 === p || p.call(e, n),
                n.target === n.currentTarget && s && s(n, "backdropClick");
            };
          return {
            getRootProps: function () {
              let n =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                p = (0, d.A)(e);
              delete p.onTransitionEnter, delete p.onTransitionExited;
              let r = { ...p, ...n };
              return { role: "presentation", ...r, onKeyDown: x(r), ref: k };
            },
            getBackdropProps: function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              return { "aria-hidden": !0, ...e, onClick: M(e), open: l };
            },
            getTransitionProps: () => {
              var e, n;
              return {
                onEnter: u(
                  () => {
                    K(!1), P && P();
                  },
                  null !== (e = null == o ? void 0 : o.props.onEnter) &&
                    void 0 !== e
                    ? e
                    : Q
                ),
                onExited: u(
                  () => {
                    K(!0), i && i(), t && w();
                  },
                  null !== (n = null == o ? void 0 : o.props.onExited) &&
                    void 0 !== n
                    ? n
                    : Q
                ),
              };
            },
            rootRef: k,
            portalRef: C,
            isTopModal: G,
            exited: g,
            hasTransition: y,
          };
        };
      var v = p(47951),
        D = p(45879);
      function S(e) {
        return (0, D.Ay)("MuiModal", e);
      }
      (0, v.A)("MuiModal", ["root", "hidden", "backdrop"]);
      var A = p(67360),
        V = p(37876);
      let G = (e) => {
          let { open: n, exited: p, classes: r } = e;
          return (0, t.A)(
            { root: ["root", !n && p && "hidden"], backdrop: ["backdrop"] },
            S,
            r
          );
        },
        C = (0, o.Ay)("div", {
          name: "MuiModal",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [n.root, !p.open && p.exited && n.hidden];
          },
        })(
          (0, s.A)((e) => {
            let { theme: n } = e;
            return {
              position: "fixed",
              zIndex: (n.vars || n).zIndex.modal,
              right: 0,
              bottom: 0,
              top: 0,
              left: 0,
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.open && n.exited;
                  },
                  style: { visibility: "hidden" },
                },
              ],
            };
          })
        ),
        w = (0, o.Ay)(c.A, {
          name: "MuiModal",
          slot: "Backdrop",
          overridesResolver: (e, n) => n.backdrop,
        })({ zIndex: -1 }),
        x = r.forwardRef(function (e, n) {
          let p = (0, l.b)({ name: "MuiModal", props: e }),
            {
              BackdropComponent: t = w,
              BackdropProps: o,
              classes: s,
              className: c,
              closeAfterTransition: b = !1,
              children: f,
              container: m,
              component: u,
              components: d = {},
              componentsProps: R = {},
              disableAutoFocus: B = !1,
              disableEnforceFocus: N = !1,
              disableEscapeKeyDown: h = !1,
              disablePortal: k = !1,
              disableRestoreFocus: g = !1,
              disableScrollLock: K = !1,
              hideBackdrop: Q = !1,
              keepMounted: q = !1,
              onBackdropClick: v,
              onClose: D,
              onTransitionEnter: S,
              onTransitionExited: x,
              open: M,
              slotProps: O = {},
              slots: E = {},
              theme: I,
              ...L
            } = p,
            z = {
              ...p,
              closeAfterTransition: b,
              disableAutoFocus: B,
              disableEnforceFocus: N,
              disableEscapeKeyDown: h,
              disablePortal: k,
              disableRestoreFocus: g,
              disableScrollLock: K,
              hideBackdrop: Q,
              keepMounted: q,
            },
            {
              getRootProps: T,
              getBackdropProps: _,
              getTransitionProps: F,
              portalRef: j,
              isTopModal: W,
              exited: H,
              hasTransition: $,
            } = y({ ...z, rootRef: n }),
            U = { ...z, exited: H },
            Z = G(U),
            Y = {};
          if ((void 0 === f.props.tabIndex && (Y.tabIndex = "-1"), $)) {
            let { onEnter: e, onExited: n } = F();
            (Y.onEnter = e), (Y.onExited = n);
          }
          let J = {
              slots: { root: d.Root, backdrop: d.Backdrop, ...E },
              slotProps: { ...R, ...O },
            },
            [X, ee] = (0, A.A)("root", {
              ref: n,
              elementType: C,
              externalForwardedProps: { ...J, ...L, component: u },
              getSlotProps: T,
              ownerState: U,
              className: (0, a.A)(
                c,
                null == Z ? void 0 : Z.root,
                !U.open && U.exited && (null == Z ? void 0 : Z.hidden)
              ),
            }),
            [en, ep] = (0, A.A)("backdrop", {
              ref: null == o ? void 0 : o.ref,
              elementType: t,
              externalForwardedProps: J,
              shouldForwardComponentProp: !0,
              additionalProps: o,
              getSlotProps: (e) =>
                _({
                  ...e,
                  onClick: (n) => {
                    v && v(n), (null == e ? void 0 : e.onClick) && e.onClick(n);
                  },
                }),
              className: (0, a.A)(
                null == o ? void 0 : o.className,
                null == Z ? void 0 : Z.backdrop
              ),
              ownerState: U,
            });
          return q || M || ($ && !H)
            ? (0, V.jsx)(i.A, {
                ref: j,
                container: m,
                disablePortal: k,
                children: (0, V.jsxs)(X, {
                  ...ee,
                  children: [
                    !Q && t ? (0, V.jsx)(en, { ...ep }) : null,
                    (0, V.jsx)(P.A, {
                      disableEnforceFocus: N,
                      disableAutoFocus: B,
                      disableRestoreFocus: g,
                      isEnabled: W,
                      open: M,
                      children: r.cloneElement(f, Y),
                    }),
                  ],
                }),
              })
            : null;
        });
    },
    40436: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(43583).A;
    },
    40642: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, g: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiInputBase", e);
      }
      let P = (0, r.A)("MuiInputBase", [
        "root",
        "formControl",
        "focused",
        "disabled",
        "adornedStart",
        "adornedEnd",
        "error",
        "sizeSmall",
        "multiline",
        "colorSecondary",
        "fullWidth",
        "hiddenLabel",
        "readOnly",
        "input",
        "inputSizeSmall",
        "inputMultiline",
        "inputTypeSearch",
        "inputAdornedStart",
        "inputAdornedEnd",
        "inputHiddenLabel",
      ]);
    },
    40670: (e, n, p) => {
      "use strict";
      function r(e, n) {
        if (null == e) return {};
        var p = {};
        for (var r in e)
          if ({}.hasOwnProperty.call(e, r)) {
            if (-1 !== n.indexOf(r)) continue;
            p[r] = e[r];
          }
        return p;
      }
      p.d(n, { A: () => r });
    },
    41945: (e, n, p) => {
      "use strict";
      function r(e) {
        var n = Object.create(null);
        return function (p) {
          return void 0 === n[p] && (n[p] = e(p)), n[p];
        };
      }
      p.d(n, { A: () => r });
    },
    42200: (e, n, p) => {
      "use strict";
      p.d(n, { tG: () => c });
      var r = p(99542);
      let a = Symbol("RESET"),
        t = (e, n, p) => (n.has(p) ? n : n.set(p, e())).get(p),
        P = new WeakMap(),
        i = (e, n, p) => (n.has(p) ? n : n.set(p, e())).get(p),
        o = new WeakMap(),
        s = (e) => "function" == typeof (null == e ? void 0 : e.then),
        l = (function (
          e = () => {
            try {
              return window.localStorage;
            } catch (e) {
              "undefined" != typeof window && console.warn(e);
              return;
            }
          },
          n
        ) {
          var p;
          let r, a, t;
          let P = {
            getItem: (n, p) => {
              var t, P;
              let i = (e) => {
                  if (r !== (e = e || "")) {
                    try {
                      a = JSON.parse(e, void 0);
                    } catch (e) {
                      return p;
                    }
                    r = e;
                  }
                  return a;
                },
                o =
                  null != (P = null == (t = e()) ? void 0 : t.getItem(n))
                    ? P
                    : null;
              return s(o) ? o.then(i) : i(o);
            },
            setItem: (n, p) => {
              var r;
              return null == (r = e())
                ? void 0
                : r.setItem(n, JSON.stringify(p, void 0));
            },
            removeItem: (n) => {
              var p;
              return null == (p = e()) ? void 0 : p.removeItem(n);
            },
          };
          try {
            t = null == (p = e()) ? void 0 : p.subscribe;
          } catch (e) {}
          if (
            (!t &&
              "undefined" != typeof window &&
              "function" == typeof window.addEventListener &&
              window.Storage &&
              (t = (n, p) => {
                if (!(e() instanceof window.Storage)) return () => {};
                let r = (r) => {
                  r.storageArea === e() && r.key === n && p(r.newValue);
                };
                return (
                  window.addEventListener("storage", r),
                  () => {
                    window.removeEventListener("storage", r);
                  }
                );
              }),
            t)
          ) {
            let e;
            (e = t),
              (P.subscribe = (n, p, r) =>
                e(n, (e) => {
                  let n;
                  try {
                    n = JSON.parse(e || "");
                  } catch (e) {
                    n = r;
                  }
                  p(n);
                }));
          }
          return P;
        })();
      function c(e, n, p = l, t) {
        let P = null == t ? void 0 : t.getOnInit,
          i = (0, r.eU)(P ? p.getItem(e, n) : n);
        return (
          (i.debugPrivate = !0),
          (i.onMount = (r) => {
            let a;
            return (
              r(p.getItem(e, n)), p.subscribe && (a = p.subscribe(e, r, n)), a
            );
          }),
          (0, r.eU)(
            (e) => e(i),
            (r, t, P) => {
              let o = "function" == typeof P ? P(r(i)) : P;
              return o === a
                ? (t(i, n), p.removeItem(e))
                : o instanceof Promise
                  ? o.then((n) => (t(i, n), p.setItem(e, n)))
                  : (t(i, o), p.setItem(e, o));
            }
          )
        );
      }
      let b = new WeakMap(),
        f = (e, n, p) => (n.has(p) ? n : n.set(p, e())).get(p),
        m = new WeakMap();
    },
    42343: (e, n, p) => {
      "use strict";
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "useIntersection", {
          enumerable: !0,
          get: function () {
            return o;
          },
        });
      let r = p(14232),
        a = p(74754),
        t = "function" == typeof IntersectionObserver,
        P = new Map(),
        i = [];
      function o(e) {
        let { rootRef: n, rootMargin: p, disabled: o } = e,
          s = o || !t,
          [l, c] = (0, r.useState)(!1),
          b = (0, r.useRef)(null),
          f = (0, r.useCallback)((e) => {
            b.current = e;
          }, []);
        return (
          (0, r.useEffect)(() => {
            if (t) {
              if (s || l) return;
              let e = b.current;
              if (e && e.tagName)
                return (function (e, n, p) {
                  let {
                    id: r,
                    observer: a,
                    elements: t,
                  } = (function (e) {
                    let n;
                    let p = {
                        root: e.root || null,
                        margin: e.rootMargin || "",
                      },
                      r = i.find(
                        (e) => e.root === p.root && e.margin === p.margin
                      );
                    if (r && (n = P.get(r))) return n;
                    let a = new Map();
                    return (
                      (n = {
                        id: p,
                        observer: new IntersectionObserver((e) => {
                          e.forEach((e) => {
                            let n = a.get(e.target),
                              p = e.isIntersecting || e.intersectionRatio > 0;
                            n && p && n(p);
                          });
                        }, e),
                        elements: a,
                      }),
                      i.push(p),
                      P.set(p, n),
                      n
                    );
                  })(p);
                  return (
                    t.set(e, n),
                    a.observe(e),
                    function () {
                      if ((t.delete(e), a.unobserve(e), 0 === t.size)) {
                        a.disconnect(), P.delete(r);
                        let e = i.findIndex(
                          (e) => e.root === r.root && e.margin === r.margin
                        );
                        e > -1 && i.splice(e, 1);
                      }
                    }
                  );
                })(e, (e) => e && c(e), {
                  root: null == n ? void 0 : n.current,
                  rootMargin: p,
                });
            } else if (!l) {
              let e = (0, a.requestIdleCallback)(() => c(!0));
              return () => (0, a.cancelIdleCallback)(e);
            }
          }, [s, p, n, l, b.current]),
          [
            f,
            l,
            (0, r.useCallback)(() => {
              c(!1);
            }, []),
          ]
        );
      }
      ("function" == typeof n.default ||
        ("object" == typeof n.default && null !== n.default)) &&
        void 0 === n.default.__esModule &&
        (Object.defineProperty(n.default, "__esModule", { value: !0 }),
        Object.assign(n.default, n),
        (e.exports = n.default));
    },
    43165: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(14232);
      function a(e) {
        return parseInt(r.version, 10) >= 19
          ? e?.props?.ref || null
          : e?.ref || null;
      }
    },
    43583: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(44471);
      function a(e) {
        return (0, r.A)(e).defaultView || window;
      }
    },
    43591: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t });
      var r = p(14232);
      let a = [];
      function t(e) {
        r.useEffect(e, a);
      }
    },
    43699: (e, n, p) => {
      "use strict";
      p.d(n, { m: () => P });
      var r = p(19271),
        a = p(67405),
        t = p(47713);
      class P {
        static async create(e) {
          if (!P.isSupported()) throw Error("Stockfish 16.1 is not supported");
          let n = (0, t.eO)();
          n || console.log("Single thread mode");
          let p = "engines/stockfish-16.1/stockfish-16.1"
              .concat(e ? "-lite" : "")
              .concat(n ? "" : "-single", ".js"),
            i = e ? r.Qz.Stockfish16_1Lite : r.Qz.Stockfish16_1;
          return a.Y.create(i, p);
        }
        static isSupported() {
          return (0, t.TH)();
        }
      }
    },
    43903: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P });
      var r = p(69241),
        a = p(92233);
      let t = function (e) {
          if (void 0 === e) return {};
          let n = {};
          return (
            Object.keys(e)
              .filter(
                (n) => !(n.match(/^on[A-Z]/) && "function" == typeof e[n])
              )
              .forEach((p) => {
                n[p] = e[p];
              }),
            n
          );
        },
        P = function (e) {
          let {
            getSlotProps: n,
            additionalProps: p,
            externalSlotProps: P,
            externalForwardedProps: i,
            className: o,
          } = e;
          if (!n) {
            let e = (0, r.A)(p?.className, o, i?.className, P?.className),
              n = { ...p?.style, ...i?.style, ...P?.style },
              a = { ...p, ...i, ...P };
            return (
              e.length > 0 && (a.className = e),
              Object.keys(n).length > 0 && (a.style = n),
              { props: a, internalRef: void 0 }
            );
          }
          let s = (0, a.A)({ ...i, ...P }),
            l = t(P),
            c = t(i),
            b = n(s),
            f = (0, r.A)(
              b?.className,
              p?.className,
              o,
              i?.className,
              P?.className
            ),
            m = { ...b?.style, ...p?.style, ...i?.style, ...P?.style },
            u = { ...b, ...p, ...c, ...l };
          return (
            f.length > 0 && (u.className = f),
            Object.keys(m).length > 0 && (u.style = m),
            { props: u, internalRef: b.ref }
          );
        };
    },
    44371: (e, n, p) => {
      "use strict";
      p.d(n, { m: () => r });
      let r = [
        {
          name: "Amar Gambit",
          fen: "rn1qkbnr/ppp2ppp/8/3p4/5p2/6PB/PPPPP2P/RNBQK2R",
        },
        {
          name: "Amar Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/7N/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Amar Opening: Gent Gambit",
          fen: "rn1qkbnr/ppp2ppp/8/3p4/8/6PB/PPPPP3/RNBQ1RK1",
        },
        {
          name: "Amar Opening: Paris Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/5P2/6PN/PPPPP2P/RNBQKB1R",
        },
        {
          name: "Amsterdam Attack",
          fen: "r1bqkb1r/ppp2ppp/2np1n2/4p3/2P5/1PN1P3/P2P1PPP/R1BQKBNR",
        },
        {
          name: "Anderssen's Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/P7/1PPPPPPP/RNBQKBNR",
        },
        {
          name: "Anderssen's Opening: Polish Gambit",
          fen: "rnbqkbnr/1ppppppp/8/p7/1P6/P7/2PPPPPP/RNBQKBNR",
        },
        {
          name: "Barnes Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/5P2/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Barnes Opening: Fool's Mate",
          fen: "rnb1kbnr/pppp1ppp/8/4p3/6Pq/5P2/PPPPP2P/RNBQKBNR",
        },
        {
          name: "Barnes Opening: Gedult Gambit",
          fen: "rnbqkbnr/ppp1pp1p/6p1/8/3Pp3/2P2P2/PP4PP/RNBQKBNR",
        },
        {
          name: "Barnes Opening: Gedult Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/8/4p3/2N2P2/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Barnes Opening: Hammerschlag",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/5P2/PPPPPKPP/RNBQ1BNR",
        },
        {
          name: "Clemenz Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/7P/PPPPPPP1/RNBQKBNR",
        },
        {
          name: "Clemenz Opening: Spike Lee Gambit",
          fen: "rnbqkbnr/ppppppp1/8/7p/6P1/7P/PPPPPP2/RNBQKBNR",
        },
        {
          name: "Crab Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/P6P/8/1PPPPPP1/RNBQKBNR",
        },
        {
          name: "Creepy Crawly Formation: Classical Defense",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/8/P6P/1PPPPPP1/RNBQKBNR",
        },
        {
          name: "Formation: Hippopotamus Attack",
          fen: "r1bq1rk1/ppp2ppp/2nb1n2/3pp3/8/PPPPPPP1/7P/RNBQKBNR",
        },
        {
          name: "Formation: Shy Attack",
          fen: "r1bq1rk1/ppp2ppp/2nb1n2/3pp3/8/P2PP1PP/1PPN1PB1/R1BQK1NR",
        },
        {
          name: "Global Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/P6P/1PPPPPP1/RNBQKBNR",
        },
        {
          name: "Grob Opening",
          fen: "rnbqkbnr/pppppppp/8/8/6P1/8/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Grob Opening: Alessi Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/6P1/8/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Grob Opening: Double Grob",
          fen: "rnbqkbnr/pppppp1p/8/6p1/6P1/8/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Grob Opening: Double Grob, Coca-Cola Gambit",
          fen: "rnbqkbnr/pppppp1p/8/6p1/5PP1/8/PPPPP2P/RNBQKBNR",
        },
        {
          name: "Grob Opening: Grob Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/6P1/8/PPPPPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Grob Gambit Declined",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/6P1/8/PPPPPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Grob Gambit, Basman Gambit",
          fen: "rnbqkbnr/ppp1ppp1/8/3p3P/8/8/PPPPPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Grob Gambit, Fritz Gambit",
          fen: "rn1qkbnr/ppp1pppp/8/3p4/2P3b1/8/PP1PPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Grob Gambit, Fritz Gambit, Romford Countergambit",
          fen: "q3kbnr/p1pnpppp/8/8/2Pp2b1/8/PP1PPP1P/RNBQK1NR",
        },
        {
          name: "Grob Opening: Grob Gambit, Keres Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/3p2P1/2P5/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Grob Gambit, Richter-Grob Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/8/2p3P1/1P6/P2PPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Keene Defense",
          fen: "rnbqkbnr/pp3ppp/2p5/3pp3/6P1/7P/PPPPPPB1/RNBQK1NR",
        },
        {
          name: "Grob Opening: Keene Defense, Main Line",
          fen: "rnbqk2r/pp2nppp/2pb4/3p4/2PPp1P1/2N4P/PP2PPB1/R1BQK1NR",
        },
        {
          name: "Grob Opening: London Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/6P1/7P/PPPPPP2/RNBQKBNR",
        },
        {
          name: "Grob Opening: Romford Countergambit",
          fen: "rn1qkbnr/ppp1pppp/8/8/2Pp2b1/8/PP1PPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Spike Attack",
          fen: "rnbqkbnr/pp2pppp/2p5/3p2P1/8/8/PPPPPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Spike, Hurst Attack",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/2P3P1/8/PP1PPPBP/RNBQK1NR",
        },
        {
          name: "Grob Opening: Zilbermints Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/8/4p1P1/2N5/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Grob Opening: Zilbermints Gambit, Schiller Defense",
          fen: "rnbqkbnr/ppp1ppp1/8/7p/4p1P1/2N5/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Grob Opening: Zilbermints Gambit, Zilbermints-Hartlaub Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/4p1P1/2NP4/PPP2P1P/R1BQKBNR",
        },
        {
          name: "Hungarian Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/6P1/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Hungarian Opening: Asten Gambit",
          fen: "r1bqkbnr/ppp3pp/2n5/4Pp2/3pN3/6P1/PPP1PP1P/R1BQKBNR",
        },
        {
          name: "Hungarian Opening: Burk Gambit",
          fen: "rnbqk1nr/ppp1bppp/8/3p4/4p2N/P2P2P1/1PP1PP1P/RNBQKB1R",
        },
        {
          name: "Hungarian Opening: B\xfccker Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/1P6/6P1/P1PPPPBP/RNBQK1NR",
        },
        {
          name: "Hungarian Opening: Catalan Formation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/8/6P1/PPPPPPBP/RNBQK1NR",
        },
        {
          name: "Hungarian Opening: Dutch Defense",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/8/6P1/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Hungarian Opening: Indian Defense",
          fen: "rnbqkb1r/pppppppp/5n2/8/8/6P1/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Hungarian Opening: Myers Defense",
          fen: "rnbqkbnr/pppppp1p/8/6p1/8/6P1/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Hungarian Opening: Pachman Gambit",
          fen: "rnbqkbnr/ppppp2p/6p1/7Q/4p3/6P1/PPPP1P1P/RNB1KBNR",
        },
        {
          name: "Hungarian Opening: Paris Gambit",
          fen: "rn1qkbnr/ppp2ppp/8/3p4/5p2/6PB/PPPPP2P/RNBQ1RK1",
        },
        {
          name: "Hungarian Opening: Reversed Alekhine",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "Hungarian Opening: Reversed Brooklyn Defense, Brooklyn Benko Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/1P2p3/6P1/P1PPPP1P/RNBQKBNR",
        },
        {
          name: "Hungarian Opening: Reversed Modern Defense",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/8/6P1/PPPPPPBP/RNBQK1NR",
        },
        {
          name: "Hungarian Opening: Reversed Norwegian Defense",
          fen: "rnbqkbnr/pppp1ppp/8/8/4p2N/6P1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "Hungarian Opening: Sicilian Invitation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/8/6P1/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Hungarian Opening: Slav Formation",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/8/6P1/PPPPPPBP/RNBQK1NR",
        },
        {
          name: "Hungarian Opening: Symmetrical Variation",
          fen: "rnbqkbnr/pppppp1p/6p1/8/8/6P1/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Hungarian Opening: Van Kuijk Gambit",
          fen: "rnbqkbnr/ppppppp1/8/8/7p/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "Hungarian Opening: Winterberg Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/2p5/1P4P1/P2PPPBP/RNBQK1NR",
        },
        {
          name: "K\xe1das Opening",
          fen: "rnbqkbnr/pppppppp/8/8/7P/8/PPPPPPP1/RNBQKBNR",
        },
        {
          name: "K\xe1das Opening: Beginner's Trap",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/7P/7R/PPPPPPP1/RNBQKBN1",
        },
        {
          name: "K\xe1das Opening: K\xe1das Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/1P5P/8/P1PPPPP1/RNBQKBNR",
        },
        {
          name: "K\xe1das Opening: K\xe1das Gambit",
          fen: "rnbqkbnr/pp2pppp/8/3p4/3p3P/2P2N2/PP2PPP1/RNBQKB1R",
        },
        {
          name: "K\xe1das Opening: K\xe1das Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/3p3P/2P5/PP2PPP1/RNBQKBNR",
        },
        {
          name: "K\xe1das Opening: Myers Variation",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/3PP2P/8/PPP2PP1/RNBQKBNR",
        },
        {
          name: "K\xe1das Opening: Schneider Gambit",
          fen: "rnbqkbnr/pppppp1p/8/6p1/7P/8/PPPPPPP1/RNBQKBNR",
        },
        {
          name: "K\xe1das Opening: Steinbok Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/8/4p2P/3P4/PPP2PP1/RNBQKBNR",
        },
        {
          name: "Lasker Simul Special",
          fen: "rnbqkbnr/ppppppp1/8/7p/8/6P1/PPPPPP1P/RNBQKBNR",
        },
        {
          name: "Mieses Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/3P4/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Mieses Opening: Myers Spike Attack",
          fen: "rnbqkbnr/pppppp1p/6p1/8/6P1/3P4/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Mieses Opening: Reversed Rat",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/3P4/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening",
          fen: "rnbqkbnr/pppppppp/8/8/1P6/8/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: Baltic Defense",
          fen: "rn1qkbnr/ppp1pppp/8/3p1b2/1P6/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Birmingham Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/1P6/8/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: Bugayev Advance Variation",
          fen: "rnbqkbnr/pppp2pp/5p2/1P2p3/8/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Bugayev Attack",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/1P6/P7/2PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: Czech Defense",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/1P6/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Dutch Defense",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/1P6/8/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: German Defense",
          fen: "rnb1kbnr/ppp1pppp/3q4/3p4/1P6/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Grigorian Variation",
          fen: "r1bqkbnr/pppppppp/2n5/8/1P6/8/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: Karniewski Variation",
          fen: "rnbqkb1r/pppppppp/7n/8/1P6/8/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: King's Indian Variation",
          fen: "rnbqkb1r/pppppp1p/5np1/8/1P6/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: King's Indian Variation, Schiffler Attack",
          fen: "rnbqkb1r/pppppp1p/5np1/8/1P2P3/8/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: King's Indian Variation, Sokolsky Attack",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/1PPP4/4PN2/PB3PPP/RN1QKB1R",
        },
        {
          name: "Polish Opening: Myers Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/PP6/8/1BPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Outflank Variation",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/1P6/8/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: Queen's Indian Variation",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/1P6/8/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Queenside Defense",
          fen: "rnbqkb1r/1ppp1ppp/p3pn2/1P6/8/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Rooks Swap Line",
          fen: "1nbqkb1r/1ppp1ppp/4pn2/1P6/8/8/2PPPPPP/BN1QKBNR",
        },
        {
          name: "Polish Opening: Schiffler-Sokolsky Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/1P1p4/8/4P3/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Schuehler Gambit",
          fen: "rnbqkbnr/1p1ppppp/8/pp6/4P3/8/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Symmetrical Variation",
          fen: "rnbqkbnr/p1pppppp/8/1p6/1P6/8/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Polish Opening: Tartakower Gambit",
          fen: "rnbqkbnr/pppp2pp/5p2/4p3/1P2P3/8/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Polish Opening: Wolferts Gambit",
          fen: "rnbqkbnr/pp1p1ppp/8/2p1p3/1P6/8/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Saragossa Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/2P5/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "Sodium Attack",
          fen: "rnbqkbnr/pppppppp/8/8/8/N7/PPPPPPPP/R1BQKBNR",
        },
        {
          name: "Sodium Attack: Chenoboskion Variation",
          fen: "rnbqkbnr/pppppp1p/6p1/8/6P1/N7/PPPPPP1P/R1BQKBNR",
        },
        {
          name: "Sodium Attack: Durkin Gambit",
          fen: "r1bqkbnr/pppp2pp/2n5/4pp2/2N1P3/8/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Valencia Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/3P4/PPPNPPPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/2N5/PPPPPPPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Battambang Variation",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/P1N5/1PPPPPPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Billockus-Johansen Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/8/2N2N2/PPPPPPPP/R1BQKB1R",
        },
        {
          name: "Van Geet Opening: Caro-Kann Variation, St. Patrick's Attack",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/4P3/2N4P/PPPP1PP1/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Damhaug Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/5P2/2N5/PPPPP1PP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Dougherty Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/8/4p3/2N2P2/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Dunst-Perrenet Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/8/4p3/2NP4/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: D\xfcsseldorf Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/1P6/2N5/P1PPPPPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Gladbacher Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/4p3/1PNP4/P1P2PPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Hector Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/8/2B1p3/2N5/PPPP1PPP/R1BQK1NR",
        },
        {
          name: "Van Geet Opening: Hergert Gambit",
          fen: "r1bqkbnr/ppp2ppp/2np4/4P3/8/2N5/PPPPP1PP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Hulsemann Gambit",
          fen: "rn1qkbnr/ppp2ppp/4b3/3pp2Q/8/2N1P3/PPPP1PPP/R1B1KBNR",
        },
        {
          name: "Van Geet Opening: Jendrossek Gambit",
          fen: "rnbqkb1r/pp2p1pp/5n2/2p2p2/1P1p1P2/5N2/P1PPPNPP/R1BQKB1R",
        },
        {
          name: "Van Geet Opening: Kluever Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/8/4p3/2NP4/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Laroche Gambit",
          fen: "rnbqkbnr/p1pppppp/8/1p6/8/2N5/PPPPPPPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Liebig Gambit",
          fen: "rnbqkb1r/ppp2ppp/5n2/3pp2Q/8/2N1P3/PPPP1PPP/R1B1KBNR",
        },
        {
          name: "Van Geet Opening: Melleby Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2p5/3pNP2/8/PPPPP1PP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Myers Attack",
          fen: "rnbqkbnr/pppppp1p/6p1/8/7P/2N5/PPPPPPP1/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Napoleon Attack",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/3P4/2N2N2/PPP1PPPP/R1BQKB1R",
        },
        {
          name: "Van Geet Opening: Novosibirsk Variation",
          fen: "r1bqkbnr/pp1ppppp/2n5/8/7Q/2N5/PPP1PPPP/R1B1KBNR",
        },
        {
          name: "Van Geet Opening: Nowokunski Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Pfeiffer Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/3pNP2/8/PPPPP1PP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Pfeiffer Gambit, Sleipnir Countergambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/3pNP2/5N2/PPPPP1PP/R1BQKB1R",
        },
        {
          name: "Van Geet Opening: Reversed Nimzowitsch",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/2N5/PPPPPPPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Reversed Scandinavian",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/Q7/2N5/PPP1PPPP/R1B1KBNR",
        },
        {
          name: "Van Geet Opening: Sicilian Two Knights",
          fen: "r1bqkbnr/pp1ppppp/2n5/8/3N4/2N5/PPP1PPPP/R1BQKB1R",
        },
        {
          name: "Van Geet Opening: Sleipnir Gambit",
          fen: "rnbqk1nr/ppp2ppp/8/3pp3/1b1P4/2N1P3/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Twyble Attack",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/8/2N5/PPPPPPPP/1RBQKBNR",
        },
        {
          name: "Van Geet Opening: T\xfcbingen Gambit",
          fen: "rnbqkb1r/pppppppp/5n2/8/6P1/2N5/PPPPPP1P/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Venezolana Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/8/2NP2P1/PPP1PP1P/R1BQKBNR",
        },
        {
          name: "Van Geet Opening: Warsteiner Gambit",
          fen: "rnbqkbnr/ppp1pp1p/8/3p2p1/5P2/2N5/PPPPP1PP/R1BQKBNR",
        },
        {
          name: "Van't Kruijs Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/4P3/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Van't Kruijs Opening: Bouncing Bishop Variation",
          fen: "rnbqkbnr/p1pp1ppp/8/1p2p3/8/1B2P3/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Van't Kruijs Opening: Keoni-Hiva Gambit, Akahi Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/5p2/2N1PN2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "Van't Kruijs Opening: Keoni-Hiva Gambit, Alua Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/5p2/2N1PN2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "Van't Kruijs Opening: Keoni-Hiva Gambit, Ekolu Variation",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/5p2/2N1PN2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "Venezolana Opening",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/8/2NP2P1/PPP1PP1P/R1BQKBNR",
        },
        {
          name: "Ware Opening",
          fen: "rnbqkbnr/pppppppp/8/8/P7/8/1PPPPPPP/RNBQKBNR",
        },
        {
          name: "Ware Opening: Meadow Hay Trap",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/P7/R7/1PPPPPPP/1NBQKBNR",
        },
        {
          name: "Ware Opening: Ware Gambit",
          fen: "rnbqkbnr/ppp3pp/P7/3ppp2/8/4P3/1PPP1PPP/RNBQKBNR",
        },
        {
          name: "Ware Opening: Wing Gambit",
          fen: "rn1qkbnr/pbpppppp/8/1P6/8/8/1PPPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack",
          fen: "rnbqkbnr/pppppppp/8/8/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Classical Variation",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Dutch Variation",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: English Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Graz Attack",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/BP6/P1PPPPPP/RN1QKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Indian Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Modern Variation",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Modern Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/8/1P6/PBPPPPPP/RN1QKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Modern Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/8/1P2P3/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Pachman Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/5P2/1P6/PBPPP1PP/RN1QKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Polish Variation",
          fen: "rnbqkbnr/p1pppppp/8/1p6/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Ringelbach Gambit",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/4P3/1P6/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Spike Variation",
          fen: "rnbqkb1r/pppppp1p/5np1/8/6P1/1P6/PBPPPP1P/RN1QKBNR",
        },
        {
          name: "Nimzo-Larsen Attack: Symmetrical Variation",
          fen: "rnbqkbnr/p1pppppp/1p6/8/8/1P6/P1PPPPPP/RNBQKBNR",
        },
        {
          name: "Bird Opening",
          fen: "rnbqkbnr/pppppppp/8/8/5P2/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening",
          fen: "rnbqkb1r/pppppppp/5n2/8/5P2/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Batavo-Polish Attack",
          fen: "rnbqkb1r/pppppp1p/5np1/8/1P3P2/5N2/P1PPP1PP/RNBQKB1R",
        },
        {
          name: "Bird Opening: Double Duck Formation",
          fen: "rnbqkbnr/ppp1p1pp/8/3p1p2/3P1P2/8/PPP1P1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: From's Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/5P2/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: From's Gambit, Bahr Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/5P2/2N5/PPPPP1PP/R1BQKBNR",
        },
        {
          name: "Bird Opening: From's Gambit, Langheld Gambit",
          fen: "rnbqkb1r/ppp2ppp/3P1n2/8/8/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: From's Gambit, Lasker Variation",
          fen: "rnbqk1nr/ppp2p1p/3b4/6p1/8/5N2/PPPPP1PP/RNBQKB1R",
        },
        {
          name: "Bird Opening: From's Gambit, Lipke Variation",
          fen: "rnbqk2r/ppp2ppp/3b3n/8/3P4/5N2/PPP1P1PP/RNBQKB1R",
        },
        {
          name: "Bird Opening: Hobbs Gambit",
          fen: "rnbqkbnr/pppppp1p/8/6p1/5P2/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Hobbs-Zilbermints Gambit",
          fen: "rnbqkbnr/pppppp2/7p/6p1/5P2/5N2/PPPPP1PP/RNBQKB1R",
        },
        {
          name: "Bird Opening: Horsefly Defense",
          fen: "rnbqkb1r/pppppppp/7n/8/5P2/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Lasker Gambit",
          fen: "rnbqkbnr/pppp2pp/5p2/4P3/8/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Mujannah",
          fen: "rnbqkb1r/pppppppp/5n2/8/2P2P2/8/PP1PP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Myers Defense",
          fen: "rnbqkbnr/p1pppppp/8/1p6/5P2/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Platz Gambit",
          fen: "rnbqkb1r/ppppnppp/8/4P3/8/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Schlechter Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/4P3/8/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Siegener Gambit",
          fen: "rnbqkbnr/pp1p1ppp/8/2p5/3p1P2/2P2N2/PP2P1PP/RNBQKB1R",
        },
        {
          name: "Bird Opening: Swiss Gambit",
          fen: "rnbqkb1r/ppppp1pp/5n2/8/4pPP1/2N5/PPPP3P/R1BQKBNR",
        },
        {
          name: "Bird Opening: Wagner-Zwitersch Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Dutch Variation",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/5P2/8/PPPPP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Dutch Variation, Dudweiler Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/5PP1/8/PPPPP2P/RNBQKBNR",
        },
        {
          name: "Bird Opening: Lasker Variation",
          fen: "rnbqkb1r/pp2pppp/5n2/2pp4/5P2/4PN2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "Bird Opening: Sturm Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/2P2P2/8/PP1PP1PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Thomas Gambit",
          fen: "rnbqkb1r/pp2pppp/5n2/2p5/3p1P2/1P2PN2/PBPP2PP/RN1QKB1R",
        },
        {
          name: "Bird Opening: Williams Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Williams Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/4pP2/2N5/PPPPQ1PP/R1B1KBNR",
        },
        {
          name: "Bird Opening: Williams-Zilbermints Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/4pP2/2N5/PPPPN1PP/R1BQKB1R",
        },
        {
          name: "Colle System: Rhamphorhynchus Variation",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1P5/8/4PN2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Modern Defense: Semi-Averbakh Variation, Polish Variation",
          fen: "rnb1k1nr/pp1pppbp/1q4p1/2p5/2PPP3/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Modern Defense: Semi-Averbakh Variation, Pterodactyl Variation",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/2PPP3/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Modern Defense: Semi-Averbakh Variation, Pterodactyl Variation Accepted",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1P5/2P1P3/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Defense: Kingside Variation",
          fen: "rnbqkb1r/pppppp1p/6pn/8/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Defense: Sicilian Knight Variation",
          fen: "r1bqkbnr/pp1ppppp/n7/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening",
          fen: "rnbqkbnr/pppppppp/8/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Arctic Defense",
          fen: "rnbqkbnr/ppppp1pp/5p2/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Arctic Defense, Drunken Knight Variation",
          fen: "rnbqkb1r/pppppnpp/5p2/8/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Basman Defense",
          fen: "rnbqkbnr/ppppppp1/7p/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Black Mustang Defense",
          fen: "r1bqkbnr/pppppppp/2n5/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Drunken Cavalry Variation",
          fen: "r1bqkb1r/pppppppp/n6n/8/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Dutch Variation",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Herrstrom Gambit",
          fen: "rnbqkbnr/pppppp1p/8/6p1/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Kingside Fianchetto",
          fen: "rnbqkbnr/pppppp1p/6p1/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Lisitsyn Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Lisitsyn Gambit Deferred",
          fen: "rnbqkb1r/ppppp1pp/5n2/5p2/4P3/3P1N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Pirc Invitation",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Polish Defense",
          fen: "rnbqkbnr/p1pppppp/8/1p6/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Queen's Gambit Invitation",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Queenside Fianchetto Variation",
          fen: "rnbqkbnr/p1pppppp/1p6/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Ross Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Shabalov Gambit",
          fen: "rnbqkbnr/3p1ppp/p3p3/1pp5/2P5/2N2NP1/PP1PPP1P/R1BQKB1R",
        },
        {
          name: "Zukertort Opening: Sicilian Invitation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Slav Invitation",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Speelsmet Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/8/3p4/4PN2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: St. George Defense",
          fen: "rnbqkbnr/1ppppppp/p7/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: The Walrus",
          fen: "r1bqkbnr/ppp2ppp/2p5/8/8/8/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Vos Gambit",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Wade Defense",
          fen: "rn1qkbnr/ppp1pppp/3p4/8/4P1b1/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Ware Defense",
          fen: "rnbqkbnr/1ppppppp/8/p7/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "King's Indian Attack",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Smyslov Variation",
          fen: "rnbqkb1r/pppppp1p/5np1/8/1P6/5NP1/P1PPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Spassky Variation",
          fen: "rnbqkb1r/p1pppppp/5n2/1p6/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Symmetrical Defense",
          fen: "rnbqkb1r/pppppp1p/5np1/8/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Wahls Defense",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/8/3P1NP1/PPP1PPBP/RNBQ1RK1",
        },
        {
          name: "Polish Opening: Zukertort System",
          fen: "rnbqkb1r/pppppppp/5n2/8/1P6/5N2/P1PPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening",
          fen: "rnbqkb1r/pppppppp/5n2/8/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening",
          fen: "r1bqkb1r/pppppppp/2n2n2/8/8/2N2N2/PPPPPPPP/R1BQKB1R",
        },
        {
          name: "Zukertort Opening: Double Fianchetto Attack",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/8/1P3NP1/PBPPPPBP/RN1Q1RK1",
        },
        {
          name: "Zukertort Opening: Lemberger Gambit",
          fen: "rnbqkb1r/pppppppp/5n2/8/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Myers Polish Attack",
          fen: "rnbqkb1r/pppppp1p/5np1/8/PP6/5N2/2PPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Nimzo-Larsen Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/8/1P3N2/P1PPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Quiet System",
          fen: "rnbqkb1r/pppppppp/5n2/8/8/4PN2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzo-Larsen Attack: Classical Variation",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/1P3N2/P1PPPPPP/RNBQKB1R",
        },
        {
          name: "Nimzo-Larsen Attack: Norfolk Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/4P3/1P3N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzo-Larsen Attack: Norfolk Gambit",
          fen: "rnbqkb1r/pp2pppp/5n2/2pp4/4P3/1P3N2/PBPP1PPP/RN1QKB1R",
        },
        {
          name: "Zukertort Opening",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/5N2/PPPPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Ampel Variation",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/5N2/PPPPPPPP/RNBQKBR1",
        },
        {
          name: "Zukertort Opening: Old Indian Attack",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/3P1N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Pachman Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2p5/2p5/1P2PN2/P2P1PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Regina-Nu Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2p5/2p5/1PN2N2/P2PPPPP/R1BQKB1R",
        },
        {
          name: "Zukertort Opening: Reversed Mexican Defense",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/2N2N2/PPPPPPPP/R1BQKB1R",
        },
        {
          name: "Zukertort Opening: Santasiere's Folly",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/1P6/5N2/P1PPPPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Tennison Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: The Potato",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/P7/5N2/1PPPPPPP/RNBQKB1R",
        },
        {
          name: "Hungarian Opening: Wiedenhagen-Beta Gambit",
          fen: "rnbqkbnr/ppp1pp1p/8/3p2p1/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Double Fianchetto",
          fen: "rnbqkbnr/ppp1pp1p/6p1/3p4/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Keres Variation",
          fen: "rn1qkbnr/ppp1pppp/8/3p4/6b1/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Keres Variation",
          fen: "r2qkbnr/pppnpppp/8/3p4/6b1/5NP1/PPPPPPBP/RNBQK2R",
        },
        {
          name: "King's Indian Attack: Omega-Delta Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Pachman System",
          fen: "rnbqk2r/ppp1npbp/6p1/3pp3/8/3P1NP1/PPP1PPBP/RNBQ1RK1",
        },
        {
          name: "King's Indian Attack: Sicilian Variation",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/8/5NP1/PPPPPP1P/RNBQKB1R",
        },
        {
          name: "King's Indian Attack: Yugoslav Variation",
          fen: "rn1qkb1r/pp2pppp/2p2n2/3p4/6b1/5NP1/PPPPPPBP/RNBQ1RK1",
        },
        {
          name: "King's Indian Attack: French Variation",
          fen: "r1bqkbnr/pp2pppp/2n5/2pp4/8/5NP1/PPPPPPBP/RNBQK2R",
        },
        {
          name: "King's Indian Attack: Sicilian Variation",
          fen: "r1bq1rk1/pp2bppp/2n1pn2/2pp4/4P3/3P1NP1/PPPN1PBP/R1BQR1K1",
        },
        {
          name: "King's Indian Attack: Sicilian Variation",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/8/5NP1/PPPPPPBP/RNBQK2R",
        },
        {
          name: "Zukertort Opening: Gr\xfcnfeld Reversed",
          fen: "r1bqkbnr/pp3ppp/2n1p3/2pp4/3P4/5NP1/PPP1PPBP/RNBQ1RK1",
        },
        {
          name: "R\xe9ti Opening",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: Advance Variation",
          fen: "rnbqkbnr/ppp1pppp/8/8/2Pp4/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: Advance Variation, Michel Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2p5/1PPp4/5N2/P2PPPPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: Penguin Variation",
          fen: "rnbqkbnr/ppp1pppp/8/8/2Pp4/5N2/PP1PPPPP/RNBQKBR1",
        },
        {
          name: "R\xe9ti Opening: Reversed Blumenfeld Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2p5/1PPp4/4PN2/P2P1PPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: R\xe9ti Accepted",
          fen: "rnbqkbnr/ppp1pppp/8/8/2p5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: R\xe9ti Gambit, Keres Variation",
          fen: "rn1qkbnr/ppp1pppp/4b3/8/2p5/4PN2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: Zilbermints Gambit",
          fen: "rnbqkbnr/p1p1pppp/8/1p1p4/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening",
          fen: "rnbqkbnr/pppppppp/8/8/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Achilles-Omega Gambit",
          fen: "rnbqkb1r/pppppppp/5n2/8/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "English Opening: Adorjan Defense",
          fen: "rnbqkbnr/pppp1p1p/6p1/4p3/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Dutch Defense",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Dutch Defense, Hickmann Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Dutch Variation, Chabanon Gambit",
          fen: "rnbqkbnr/ppp1p1pp/3p4/5p2/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Dutch Variation, Ferenc Gambit",
          fen: "rnbqkb1r/ppppp1pp/5n2/5p2/2P1P3/2N5/PP1P1PPP/R1BQKBNR",
        },
        {
          name: "English Opening: Anglo-Lithuanian Variation",
          fen: "r1bqkbnr/pppppppp/2n5/8/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Scandinavian Defense",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Scandinavian Defense, L\xf6hn Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/3P4/8/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Scandinavian Defense, Malvinas Variation",
          fen: "rnb1kbnr/ppp1pppp/8/q7/8/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: Anglo-Scandinavian Defense, Schulz Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/3P4/8/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Great Snake Variation",
          fen: "rnbqkbnr/pppppp1p/6p1/8/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Jaenisch Gambit",
          fen: "rnbqkbnr/p1pppppp/8/1p6/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Botvinnik System, Prickly Pawn Pass System",
          fen: "rnbq1rk1/1p3pbp/p1pp1np1/4p3/2P1P3/2NP2P1/PP2NPBP/R1BQ1RK1",
        },
        {
          name: "English Opening: Myers Defense",
          fen: "rnbqkbnr/pppppp1p/8/6p1/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Myers Gambit",
          fen: "rnbqk1nr/ppppppbp/8/6p1/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Porcupine Variation",
          fen: "rnbqkb1r/ppppp1pp/5n2/8/2P1p1P1/2N5/PP1P1P1P/R1BQKBNR",
        },
        {
          name: "English Opening: Wade Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/2P3P1/8/PP1PPP1P/RNBQKBNR",
        },
        {
          name: "English Opening: Zilbermints Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/4p1p1/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Caro-Kann Defensive System",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, Bled Variation",
          fen: "rnbqkb1r/pp2pp1p/2p2np1/3p4/2P5/1P3N2/PB1PPPPP/RN1QKB1R",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, Bogoljubov Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/2P5/1P3N2/P2PPPPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, Bogoljubov Variation",
          fen: "rn1qkbnr/pp2pppp/2p5/3p4/2P3b1/1P3N2/P2PPPPP/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, Bogoljubov Variation",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3p4/2P5/1P3N2/PB1PPPPP/RN1QKB1R",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, Capablanca Variation",
          fen: "rn1qkb1r/pp2pppp/2p2n2/3p4/2P3b1/1P3N2/PB1PPPPP/RN1QKB1R",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, London Defensive System",
          fen: "rn1qkb1r/pp2pppp/2p2n2/3p1b2/2P5/1P3NP1/P2PPP1P/RNBQKB1R",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, New York System",
          fen: "rn1qkb1r/pp2pppp/2p2n2/3p1b2/2P5/1P3N2/PB1PPPPP/RN1QKB1R",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, Torre System",
          fen: "rn1qkb1r/pp2pppp/2p2n2/3p4/2P3b1/1P3NP1/P2PPP1P/RNBQKB1R",
        },
        {
          name: "English Opening: Agincourt Defense",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Agincourt Defense",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Agincourt Defense",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Agincourt Defense, Bogoljubov Defense",
          fen: "rnbqk2r/ppp2ppp/3bpn2/3p4/2P5/5NP1/PP1PPPBP/RNBQK2R",
        },
        {
          name: "English Opening: Agincourt Defense, Catalan Defense",
          fen: "rn1qkbnr/pbp2ppp/1p2p3/3p4/2P5/5NP1/PP1PPPBP/RNBQ1RK1",
        },
        {
          name: "English Opening: Agincourt Defense, Catalan Defense",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/2P5/5NP1/PP1PPP1P/RNBQKB1R",
        },
        {
          name: "English Opening: Agincourt Defense, Catalan Defense Accepted",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/2p5/5NP1/PP1PPPBP/RNBQK2R",
        },
        {
          name: "English Opening: Agincourt Defense, Catalan Defense, Semi-Slav Defense",
          fen: "rnbqkb1r/pp3ppp/2p1pn2/3p4/2P5/5NP1/PP1PPPBP/RNBQK2R",
        },
        {
          name: "English Opening: Agincourt Defense, Kurajica Defense",
          fen: "rnbqkbnr/pp3ppp/2p1p3/3p4/2P5/5NP1/PP1PPP1P/RNBQKB1R",
        },
        {
          name: "English Opening: Agincourt Defense, Tarrasch Defense",
          fen: "r1bqk2r/pp2bppp/2n1pn2/2pp4/2P5/1P3NP1/P2PPPBP/RNBQ1RK1",
        },
        {
          name: "English Opening: Agincourt Defense, Wimpy System",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pp4/2P5/1P2PN2/PB1P1PPP/RN1QKB1R",
        },
        {
          name: "English Opening: Neo-Catalan",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/2P5/5NP1/PP1PPP1P/RNBQKB1R",
        },
        {
          name: "English Opening: Neo-Catalan Declined",
          fen: "rnbqk2r/ppp1bppp/4pn2/3p4/2P5/5NP1/PP1PPPBP/RNBQK2R",
        },
        {
          name: "English Opening: Romanishin Gambit",
          fen: "rnbqkb1r/2pp1ppp/p3pn2/1p6/2P5/5NP1/PP1PPPBP/RNBQK2R",
        },
        {
          name: "English Opening: Agincourt Defense, Keres Defense",
          fen: "r1bqk2r/pp2bppp/2n1p3/2pn4/8/2N2NP1/PP1PPPBP/R1BQ1RK1",
        },
        {
          name: "English Opening: Agincourt Defense, Neo-Catalan Declined",
          fen: "rnbqk2r/ppp1bppp/4pn2/3p4/2P5/5NP1/PP1PPPBP/RNBQ1RK1",
        },
        {
          name: "R\xe9ti Opening: Anglo-Slav Variation, Bogoljubov Variation, Stonewall Line",
          fen: "rnbq1rk1/pp2bppp/2p1pn2/3p4/2P5/1P3NP1/PB1PPPBP/RN1Q1RK1",
        },
        {
          name: "English Opening: Anglo-Indian Defense",
          fen: "rnbqkb1r/pppppppp/5n2/8/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Anti-Anti-Gr\xfcnfeld",
          fen: "rnbqk2r/ppppppbp/5np1/8/2P1P3/2N2N2/PP1P1PPP/R1BQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Gr\xfcnfeld Formation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2P5/5NP1/PP1PPP1P/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, King's Indian Formation",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, King's Indian Formation, Double Fianchetto",
          fen: "rn1qkb1r/pbpppp1p/1p3np1/8/2P5/5NP1/PP1PPPBP/RNBQK2R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, King's Knight Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Old Indian Formation",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Queen's Indian Formation",
          fen: "rnbqkb1r/p1pppppp/1p3n2/8/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Queen's Indian Formation",
          fen: "rn1qkb1r/pbpp1ppp/1p2pn2/8/2P5/5NP1/PP1PPPBP/RNBQK2R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Romanishin Variation",
          fen: "rnbqkb1r/1ppp1ppp/p3pn2/8/2P5/5NP1/PP1PPP1P/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Scandinavian Defense",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Scandinavian Defense, Exchange Variation",
          fen: "rnbqkb1r/ppp1pppp/8/3n4/8/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Slav Formation",
          fen: "rnbqkb1r/pp1ppp1p/2p2np1/8/2P5/5NP1/PP1PPP1P/RNBQKB1R",
        },
        {
          name: "English Orangutan",
          fen: "rnbqkb1r/pppppppp/5n2/8/1PP5/8/P2PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Anglo-Gr\xfcnfeld Defense",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: Anglo-Gr\xfcnfeld Defense, Korchnoi Variation",
          fen: "rnbqk2r/ppp2pbp/6p1/3np3/8/2N2NP1/PP1PPPBP/R1BQK2R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Anglo-Gr\xfcnfeld Variation",
          fen: "rnbqkb1r/ppp1pppp/8/3n4/8/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Anglo-Gr\xfcnfeld Variation",
          fen: "rnbqkb1r/ppp1pp1p/1n4p1/8/8/2N3P1/PP1PPPBP/R1BQK1NR",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Anglo-Gr\xfcnfeld Variation",
          fen: "rnbqkb1r/ppp1pp1p/6p1/8/8/2n3P1/PP1PPPBP/R1BQK1NR",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Queen's Knight Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Hedgehog System",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Nimzo-English",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bP5/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Queen's Indian Formation",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/8/2P5/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Queen's Indian Variation",
          fen: "rn1qkb1r/pbpp1ppp/1p2pn2/8/2P1P3/2NB1N2/PP1P1PPP/R1BQK2R",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Zvjaginsev-Krasenkow Attack",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bP3P1/2N2N2/PP1PPP1P/R1BQKB1R",
        },
        {
          name: "English Opening: Mikenas-Carls Variation",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/2P1P3/2N5/PP1P1PPP/R1BQKBNR",
        },
        {
          name: "English Opening: Mikenas-Carls Variation",
          fen: "r1bqkb1r/pppp1ppp/2n1pn2/8/2P1P3/2N5/PP1P1PPP/R1BQKBNR",
        },
        {
          name: "English Opening: Mikenas-Carls Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3pP3/2P5/2N5/PP1P1PPP/R1BQKBNR",
        },
        {
          name: "English Opening: Anglo-Indian Defense, Flohr-Mikenas-Carls Variation, Nei Gambit",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p1P3/2P5/2N5/PP1P1PPP/R1BQKBNR",
        },
        {
          name: "English Opening: Mikenas-Carls, Sicilian",
          fen: "rnbqkb1r/pp1p1ppp/4pn2/2p5/2P1P3/2N5/PP1P1PPP/R1BQKBNR",
        },
        {
          name: "English Opening: Drill Variation",
          fen: "rnbqkbnr/pppp1pp1/8/4p2p/2P5/6P1/PP1PPP1P/RNBQKBNR",
        },
        {
          name: "English Opening: King's English Variation",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Kahiko-Hula Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/2P2p2/4PN2/PP1P2PP/RNBQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Nimzowitsch Variation",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Nimzowitsch-Flohr Variation",
          fen: "rnbqkbnr/pppp1ppp/8/8/2P1p3/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: King's English Variation",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/2P5/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Keres Defense",
          fen: "rnbqkbnr/pp3ppp/2pp4/4p3/2P5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Kramnik-Shirov Counterattack",
          fen: "rnbqk1nr/pppp1ppp/8/4p3/1bP5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Reversed Sicilian",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Smyslov Defense",
          fen: "rn1qkbnr/ppp2ppp/3p4/4p3/2P3b1/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Troger Defense",
          fen: "r2qkbnr/ppp2ppp/2npb3/4p3/2P5/2N3P1/PP1PPPBP/R1BQK1NR",
        },
        {
          name: "English Opening: Carls-Bremen System",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2P5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Bellon Gambit",
          fen: "rnbqkb1r/p1pp1ppp/5n2/1p4N1/2P1p3/2N5/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Two Knights Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Two Knights Variation, Reversed Dragon",
          fen: "rnbqkb1r/ppp2ppp/5n2/3pp3/2P5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Two Knights Variation, Smyslov System",
          fen: "rnbqk2r/pppp1ppp/5n2/4p3/1bP5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: King's English, Erbenheimer Gambit",
          fen: "rnbqkb1r/pppp1ppp/8/6N1/2P1p1n1/2N5/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English, Mazedonisch",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2P2P2/2N5/PP1PP1PP/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Two Knights Variation, Keres Variation",
          fen: "rnbqkb1r/pp1p1ppp/2p2n2/4p3/2P5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Two Knights Variation, Fianchetto Line",
          fen: "rnbqkb1r/pppp1p1p/5np1/4p3/2P5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: Closed, Taimanov Variation",
          fen: "r1bqk2r/pppp1pbp/2n3pn/4p3/2P5/2N3P1/PP1PPPBP/1RBQK1NR",
        },
        {
          name: "English Opening: Closed, Taimanov Variation",
          fen: "r1bqk2r/ppp2pbp/2np2pn/4p3/2P5/2N1P1P1/PP1PNPBP/R1BQK2R",
        },
        {
          name: "English Opening: King's English Variation, Bremen-Hort Variation",
          fen: "r2qk1nr/ppp2pbp/2npb1p1/4p3/2P5/2N1P1P1/PP1PNPBP/R1BQK2R",
        },
        {
          name: "English Opening: King's English Variation, Closed System",
          fen: "r1bqk1nr/pppp1pbp/2n3p1/4p3/2P5/2NP2P1/PP2PPBP/R1BQK1NR",
        },
        {
          name: "English Opening: King's English Variation, Hungarian Attack",
          fen: "r1bqk1nr/pppp1pbp/2n3p1/4p3/2P5/2N3P1/PP1PPPBP/1RBQK1NR",
        },
        {
          name: "English Opening: King's English Variation, Reversed Closed Sicilian",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: King's English Variation, Taimanov Variation",
          fen: "r1bqk1nr/pppp1pbp/2n3p1/4p3/2P5/2N3P1/PP1PPPBP/R1BQK1NR",
        },
        {
          name: "English Opening: King's English Variation, Botvinnik System",
          fen: "r1bqk1nr/ppp2pbp/2np2p1/4p3/2P1P3/2NP2P1/PP3PBP/R1BQK1NR",
        },
        {
          name: "English Opening: King's English Variation, Closed System, Full Symmetry",
          fen: "r1bqk1nr/ppp2pbp/2np2p1/4p3/2P5/2NP2P1/PP2PPBP/R1BQK1NR",
        },
        {
          name: "English Opening: King's English Variation, Three Knights System",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/2P5/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: Four Knights System, Nimzowitsch Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P1P3/2N2N2/PP1P1PPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation",
          fen: "r1bqk2r/pppp1pp1/5n1p/4n3/2PN3B/2P5/P3PPPP/R2QKB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation, Bradley Beach Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/8/2PPp3/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation, Flexible Line",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2NP1N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation, Korchnoi Line",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/P1N2N2/1P1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation, Quiet Line",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2N1PN2/PP1P1PPP/R1BQKB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation, Quiet Line",
          fen: "r1bqk2r/pppp1ppp/2n2n2/4p3/2P5/2b1PN2/PPQP1PPP/R1B1KB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation, Quiet Line",
          fen: "r1bqr1k1/pppp1ppp/2n2n2/3NpQ2/1bP5/4PN2/PP1P1PPP/R1B1KB1R",
        },
        {
          name: "English Opening: King's English Variation, Four Knights Variation, Fianchetto Line",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2P5/2N2NP1/PP1PPP1P/R1BQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/2P5/8/PP1PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Symmetrical Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/2P5/5N2/PP1PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation, Hedgehog Defense",
          fen: "rn1qk2r/pb1pbppp/1p2pn2/2p5/2P5/2N2NP1/PP1PPPBP/R1BQ1RK1",
        },
        {
          name: "English Opening: Symmetrical Variation, Napolitano Gambit",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/1PP5/5N2/P2PPPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Symmetrical, Hedgehog, Flexible Formation",
          fen: "r2qk2r/1b1nbppp/pp1ppn2/8/2PQ4/1PN2NP1/P3PPBP/R1BR2K1",
        },
        {
          name: "English Opening: Wing Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/1PP5/8/P2PPPPP/RNBQKBNR",
        },
        {
          name: "English Opening: Symmetrical Variation, Anti-Benoni Variation",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation, Anti-Benoni Variation, Spielmann Defense",
          fen: "rnbqkb1r/pp1p1ppp/4pn2/8/2PN4/8/PP2PPPP/RNBQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation, Anti-Benoni Variation, Geller Variation",
          fen: "r1b1kb1r/pp1p1ppp/1qn1pn2/8/2PN4/2N3P1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation, Anti-Benoni Variation, Spielmann Defense",
          fen: "r1bqkb1r/pp1p1ppp/2n1pn2/8/2PN4/2N5/PP2PPPP/R1BQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation, Fianchetto Variation",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/2P5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: Symmetrical Variation, Normal Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: Symmetrical Variation, Rubinstein Variation",
          fen: "rnbqkb1r/ppn1pppp/8/2p5/8/2N3P1/PP1PPPBP/R1BQK1NR",
        },
        {
          name: "English Opening: Symmetrical Variation, Three Knights Variation",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/2P5/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation, Four Knights Variation",
          fen: "r1bqkb1r/pp1ppppp/2n2n2/2p5/2P5/2N2N2/PP1PPPPP/R1BQKB1R",
        },
        {
          name: "English Opening: Symmetrical Variation, Two Knights Variation",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/2P5/2N5/PP1PPPPP/R1BQKBNR",
        },
        {
          name: "English Opening: Symmetrical Variation, Botvinnik System",
          fen: "r1bqk1nr/pp1pppbp/2n3p1/2p5/2P1P3/2N3P1/PP1P1PBP/R1BQK1NR",
        },
        {
          name: "English Opening: Symmetrical Variation, Botvinnik System Reversed, with e3",
          fen: "r1bqk1nr/pp1p1pbp/2n3p1/2p1p3/2P5/2N1P1P1/PP1P1PBP/R1BQK1NR",
        },
        {
          name: "English Opening: Symmetrical Variation, Symmetrical Variation",
          fen: "r1bqk1nr/pp1pppbp/2n3p1/2p5/2P5/2N3P1/PP1PPPBP/R1BQK1NR",
        },
        {
          name: "English Opening: Symmetrical Variation, Two Knights, Fianchetto Variation",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/2P5/2N3P1/PP1PPP1P/R1BQKBNR",
        },
        {
          name: "English Opening: Symmetrical Variation, Botvinnik System Reversed, with Nf3",
          fen: "r1bqk1nr/pp1p1pbp/2n3p1/2p1p3/2P5/2N2NP1/PP1PPPBP/R1BQK2R",
        },
        {
          name: "English Opening: Symmetrical Variation, Three Knights, Fianchetto Variation",
          fen: "r1bqk1nr/pp1pppbp/2n3p1/2p5/2P5/2N2NP1/PP1PPPBP/R1BQK2R",
        },
        {
          name: "English Opening: Symmetrical Variation, Double Fianchetto",
          fen: "r1bq1rk1/pp1pppbp/2n2np1/2p5/2P5/1PN2NP1/P2PPPBP/R1BQ1RK1",
        },
        {
          name: "English Opening: Symmetrical Variation, Duchamp Variation",
          fen: "r1bq1rk1/pp1pppbp/2n2np1/2p5/2P5/2NP1NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "English Opening: Symmetrical Variation, Full Symmetry Line",
          fen: "r1bqk2r/pp1pppbp/2n2np1/2p5/2P5/2N2NP1/PP1PPPBP/R1BQK2R",
        },
        {
          name: "English Opening: Symmetrical Variation, Mecking Variation",
          fen: "r1bq1rk1/pp1pppbp/2n2np1/2p5/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Australian Defense",
          fen: "r1bqkbnr/pppppppp/n7/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Franco-Sicilian Hybrid",
          fen: "rnbqk2r/pp2npbp/3p2p1/2pP4/4P3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Borg Defense: Borg Gambit",
          fen: "rnbqkbnr/pppppp1p/8/6p1/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Colle System: Pterodactyl Variation",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3P4/3BPN2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Colle System: Siroccopteryx Variation",
          fen: "rnb1k1nr/pp1pppbp/6p1/q7/3N4/3BP3/PPP2PPP/RNBQK2R",
        },
        {
          name: "Dutch Defense: Senechaud Gambit",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/3P1BP1/8/PPP1PP1P/RN1QKBNR",
        },
        {
          name: "Dutch Defense: Stonewall Variation, Modern Variation",
          fen: "rnbqk2r/pp4pp/2pbpn2/3p1p2/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "English Defense",
          fen: "rnbqkbnr/p1pppppp/1p6/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "English Defense",
          fen: "rnbqkbnr/p1pp1ppp/1p2p3/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "English Defense: Eastbourne Gambit",
          fen: "rn1qkbnr/pbpp1ppp/1p6/4p3/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "English Defense: Hartlaub Gambit Accepted",
          fen: "rn1qkb1r/pbpp2pp/1p2pn2/5P2/2PP4/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "English Defense: Hartlaub Gambit Declined",
          fen: "rn1qkbnr/pbpp2pp/1p2p3/3P1p2/2P1P3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "English Defense: Perrin Variation",
          fen: "r2qkbnr/pbpp1ppp/1pn1p3/8/2PPP3/3B4/PP3PPP/RNBQK1NR",
        },
        {
          name: "English Defense: Poli Gambit",
          fen: "rn1qkb1r/pbpp2pp/1p2p2n/5P2/2PP4/5P2/PP4PP/RNBQKBNR",
        },
        {
          name: "Englund Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Complex Declined",
          fen: "rnbqkbnr/pppp1ppp/8/3Pp3/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Complex Declined: Diemer Counterattack",
          fen: "rnb1k1nr/pppp1ppp/8/2bPp3/4P2q/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Complex: Englund Gambit",
          fen: "r1b1kbnr/ppppqppp/2n5/4P3/8/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Englund Gambit Complex: Felbecker Gambit",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1P3/8/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Englund Gambit Complex: Hartlaub-Charlick Gambit",
          fen: "rnbqkbnr/ppp2ppp/3p4/4P3/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Complex: Mosquito Gambit",
          fen: "rnb1kbnr/pppp1ppp/8/4P3/7q/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Complex: Soller Gambit",
          fen: "rnbqkbnr/pppp2pp/5p2/4P3/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Complex: Soller Gambit Deferred",
          fen: "r1bqkbnr/pppp2pp/2n2p2/4P3/8/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Englund Gambit Complex: Stockholm Variation",
          fen: "r1b1kbnr/ppppqppp/2n5/3QP3/8/5N2/PPP1PPPP/RNB1KB1R",
        },
        {
          name: "Englund Gambit Complex: Zilbermints Gambit",
          fen: "r1bqkb1r/ppppnppp/2n5/4P3/8/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Englund Gambit Declined: Reversed Alekhine",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Englund Gambit Declined: Reversed Brooklyn",
          fen: "rnbqkbnr/pppp1ppp/8/8/3Pp3/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Declined: Reversed French",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/3P4/4P3/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Englund Gambit Declined: Reversed Krebs",
          fen: "rnbqkbnr/pppp1ppp/8/8/3Pp3/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Englund Gambit Declined: Reversed Mokele Mbembe",
          fen: "rnbqkbnr/pppp1ppp/8/4N3/3Pp3/8/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Horwitz Defense",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Horwitz Defense: Zilbermints Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Kangaroo Defense",
          fen: "rnbqk1nr/pppp1ppp/4p3/8/1bPP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Kangaroo Defense: Keres Defense, Transpositional Variation",
          fen: "rnbqk1nr/pppp1ppp/4p3/8/1bPP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Mikenas Defense",
          fen: "r1bqkbnr/pppppppp/2n5/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Mikenas Defense: Cannstatter Variation",
          fen: "r1bqkbnr/pppp1ppp/8/3Pp3/2Pn4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Mikenas Defense: Lithuanian Variation",
          fen: "r1bqkbnr/ppppnppp/8/3Pp3/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Mikenas Defense: Pozarek Gambit",
          fen: "r1bqkbnr/pppp1ppp/8/8/2n5/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Beefeater Variation",
          fen: "rnbqk1nr/pp1pp2p/6p1/2pP1p2/2P5/2P5/P3PPPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Lizard Defense, Pirc-Diemer Gambit",
          fen: "rnbqkb1r/pppppp1p/5np1/7P/3P4/8/PPP1PPP1/RNBQKBNR",
        },
        {
          name: "Montevideo Defense",
          fen: "rnbqkbnr/pppppppp/8/3P4/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Polish Defense",
          fen: "rnbqkbnr/p1pppppp/8/1p6/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Polish Defense: Spassky Gambit Accepted",
          fen: "rn1qkbnr/pbpppppp/8/1B6/3PP3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Pterodactyl Defense: Central, Benoni Beefeater Pterodactyl",
          fen: "rnb1k1nr/pp2pp1p/3p2p1/q1pP4/2P1P3/2P5/P4PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Central, Benoni Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1pP4/2P1P3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Pterodactyl Defense: Fianchetto, Queen Benoni Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1pP4/2P5/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Fianchetto, Queen Pteranodon",
          fen: "rnb1k1nr/pp1ppp1p/6p1/q1pP4/2P5/2P5/P3PPPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Fianchetto, Queen Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3P4/5NP1/PPP1PPBP/RNBQK2R",
        },
        {
          name: "Pterodactyl Defense: Queen Pterodactyl, Quiet Line",
          fen: "rnbqk1nr/pp1pppbp/6p1/2p5/2PP4/2N1P3/PP3PPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game",
          fen: "rnbqkbnr/pppppppp/8/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game: Anglo-Slav Opening",
          fen: "rnbqkbnr/pp2pppp/2pp4/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game: Modern Defense",
          fen: "rnbqkbnr/pppppp1p/6p1/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Slav Indian: Kudischewitsch Gambit",
          fen: "rnbqkb1r/p2ppppp/2p2n2/1p6/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Zaire Defense",
          fen: "rnbqkbnr/pppppppp/8/3PP3/8/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Modern Defense",
          fen: "rnbqk1nr/ppp1ppbp/3p2p1/8/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Neo-Modern Defense",
          fen: "rnbqk1nr/pppp1pbp/6p1/4p3/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Old Indian Defense",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Rat Defense: English Rat",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Rat Defense: English Rat, Lisbon Gambit",
          fen: "r1bqkbnr/ppp2ppp/2np4/4P3/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Rat Defense: English Rat, Pounds Gambit",
          fen: "rn1qkbnr/ppp2ppp/3pb3/4P3/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Robatsch Defense",
          fen: "rn1qk1nr/ppp1ppbp/3p2p1/8/2PPP1b1/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Wade Defense",
          fen: "rn1qkbnr/ppp1pppp/3p4/8/3P2b1/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Zukertort Opening: Wade Defense, Chigorin Plan",
          fen: "1r1qkbnr/pppnpppp/3p4/8/2PP2b1/1Q3N2/PP2PPPP/RNB1KB1R",
        },
        {
          name: "Modern Defense: Averbakh System",
          fen: "rnbqk1nr/ppp1ppbp/3p2p1/8/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Averbakh Variation, Pseudo-S\xe4misch",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/4BP2/PP4PP/RN1QKBNR",
        },
        {
          name: "Modern Defense: Kotov Variation",
          fen: "r1bqk1nr/ppp1ppbp/2np2p1/8/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Randspringer Variation",
          fen: "rnbqk1nr/ppp1p1bp/3p2p1/5p2/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1p5/2PPP3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Pterodactyl Defense: Central, Bogolubovia",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1p5/2PPP3/2N5/PP2NPPP/R1BQKB1R",
        },
        {
          name: "Benoni Defense: Benoni Gambit Accepted",
          fen: "rnbqkbnr/pp1ppppp/8/2P5/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Benoni Gambit, Schlenker Defense",
          fen: "r1bqkbnr/pp1ppppp/n7/2P5/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Benoni-Indian Defense",
          fen: "rnbqkb1r/pp1ppppp/5n2/2pP4/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Benoni-Indian Defense, Kingside Move Order",
          fen: "rnbqkb1r/pp1ppppp/5n2/2pP4/8/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Benoni Defense: Benoni-Staunton Gambit",
          fen: "rnbqkbnr/pp1pp1pp/8/2pP1p2/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Cormorant Gambit",
          fen: "rnbqkbnr/p2ppppp/1p6/2P5/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: French Benoni",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2pP4/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Hawk Variation",
          fen: "rnbqkb1r/pp1ppppp/5n2/3P4/2p5/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Benoni Defense: Old Benoni",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Old Benoni",
          fen: "rnbqkbnr/pp1ppppp/8/2pP4/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Old Benoni",
          fen: "rnbqkbnr/pp2pppp/3p4/2pP4/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Old Benoni, Mujannah Formation",
          fen: "rnbqkbnr/pp1pp1pp/8/2pP1p2/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Old Benoni, Schmid Variation",
          fen: "rnbqkbnr/pp2pp1p/3p2p1/2pP4/8/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Benoni Defense: Snail Variation",
          fen: "r1bqkbnr/pp1ppppp/n7/2pP4/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Woozle",
          fen: "rnb1kb1r/pp1ppppp/5n2/q1pP4/8/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Benoni Defense: Zilbermints-Benoni Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/1P1P4/8/P1P1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Zilbermints-Benoni Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/8/1P1p4/5N2/P1P1PPPP/RNBQKB1R",
        },
        {
          name: "Benoni Defense: Zilbermints-Benoni Gambit, Tamarkin Countergambit",
          fen: "rnbqkbnr/pp1p1ppp/8/4p3/1P1p4/5N2/P1P1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Pseudo-Benko",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/8/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Liedmann Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/8/2Pp4/4P3/PP3PPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Old Benoni",
          fen: "rnbqkbnr/pp1p1ppp/8/2pPp3/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Semi-Benoni",
          fen: "rnbqkbnr/pp3ppp/3p4/2pPp3/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Amazon Attack: Siberian Attack",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/2NQ4/PPP1PPPP/R1B1KBNR",
        },
        {
          name: "Canard Opening",
          fen: "rnbqkb1r/pppppppp/5n2/8/3P1P2/8/PPP1P1PP/RNBQKBNR",
        },
        {
          name: "Indian Defense",
          fen: "rnbqkb1r/pppppppp/5n2/8/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Gedult Attack, Gedult Attack",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P2P1/5P2/PPP1P2P/RNBQKBNR",
        },
        {
          name: "Indian Defense: Gibbins-Weidenhagen Gambit",
          fen: "rnbqkb1r/pppppppp/5n2/8/3P2P1/8/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Indian Defense: Gibbins-Weidenhagen Gambit Accepted",
          fen: "rnbqkb1r/pppppppp/8/8/3P2n1/8/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Indian Defense: Gibbins-Weidenhagen Gambit, Maltese Falcon",
          fen: "rnbqkb1r/pppppppp/5n2/8/3PP3/5P2/PPP4P/RNBQKBNR",
        },
        {
          name: "Indian Defense: Gibbins-Weidenhagen Gambit, Oshima Defense",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/3P2P1/8/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Indian Defense: Gibbins-Weidenhagen Gambit, Stummer Gambit",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/3PP3/2N5/PPP1BP1P/R1BQK1NR",
        },
        {
          name: "Indian Defense: Lazard Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/3P4/8/PPPNPPPP/R1BQKBNR",
        },
        {
          name: "Indian Defense: Maddigan Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Indian Defense: Omega Gambit",
          fen: "rnbqkb1r/pppppppp/5n2/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Omega Gambit, Arafat Gambit",
          fen: "rnbqkb1r/pppppppp/5n2/6B1/3P4/3B4/PPP2PPP/RN1QK1NR",
        },
        {
          name: "Indian Defense: Paleface Attack, Blackmar-Diemer Gambit Deferred",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3PP3/5P2/PPP3PP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Pawn Push Variation",
          fen: "rnbqkb1r/pppppppp/5n2/3P4/8/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Reversed Chigorin Defense",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Indian Defense: Tartakower Attack",
          fen: "rnbqkb1r/pppppppp/5n2/8/3P4/6P1/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Paleface Attack",
          fen: "rnbqkb1r/pppppppp/5n2/8/3P4/5P2/PPP1P1PP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Veresov, Richter Attack",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/2N2P2/PPP1P1PP/R1BQKBNR",
        },
        {
          name: "Trompowsky Attack",
          fen: "rnbqkb1r/pppppppp/5n2/6B1/3P4/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Trompowsky Attack: Borg Variation",
          fen: "rnbqkb1r/pppppp1p/8/6p1/3PnB2/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Trompowsky Attack: Classical Defense",
          fen: "rnbqkb1r/pppp1ppp/4pn2/6B1/3P4/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Trompowsky Attack: Classical Defense, Big Center Variation",
          fen: "rnbqkb1r/pppp1ppp/4pn2/6B1/3PP3/8/PPP2PPP/RN1QKBNR",
        },
        {
          name: "Trompowsky Attack: Edge Variation",
          fen: "rnbqkb1r/pppppppp/8/8/3Pn2B/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Trompowsky Attack: Edge Variation, Hergert Gambit",
          fen: "rnb1kb1r/pp2pppp/2p5/q2p4/3PP2B/2P5/PP1Q1PPP/R3KBNR",
        },
        {
          name: "Trompowsky Attack: Edge Variation, Hergert Gambit",
          fen: "rn1qkb1r/ppp1pppp/5n2/3p1b2/3PP2B/2N2P2/PPP3PP/R2QKBNR",
        },
        {
          name: "Trompowsky Attack: Poisoned Pawn Variation",
          fen: "rnb1kb1r/pp1ppppp/1q3n2/2pP2B1/8/2N5/PPP1PPPP/R2QKBNR",
        },
        {
          name: "Trompowsky Attack: Raptor Variation",
          fen: "rnbqkb1r/pppppppp/8/6B1/3Pn2P/8/PPP1PPP1/RN1QKBNR",
        },
        {
          name: "Trompowsky Attack: Raptor Variation, Hergert Gambit",
          fen: "rnbqkb1r/pppp1ppp/8/4p1P1/3P4/8/PPP1PPP1/RN1QKBNR",
        },
        {
          name: "D\xf6ry Defense",
          fen: "rnbqkb1r/pppppppp/8/8/3Pn3/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Czech-Indian",
          fen: "rnbqkb1r/pp1ppppp/2p2n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Knights Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Knights Variation, Alburt-Miles Variation",
          fen: "rnbqkb1r/1ppppppp/p4n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: London System",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/3P1B2/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Indian Defense: Polish Variation",
          fen: "rnbqkb1r/p1pppppp/5n2/1p6/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Spielmann-Indian",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Wade-Tartakower Defense",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Torre Attack, Breyer Variation",
          fen: "rnb1kb1r/pp3ppp/1q2pn2/2pp2B1/3P4/2P1PN2/PP3PPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: Veresov Attack, Classical Defense",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p2B1/3P4/2N2N2/PPP1PPPP/R2QKB1R",
        },
        {
          name: "Torre Attack: Classical Defense",
          fen: "rnbqkb1r/pppp1ppp/4pn2/6B1/3P4/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Torre Attack: Classical Defense, Nimzowitsch Variation",
          fen: "rnbqkb1r/pppp1pp1/4pn1p/6B1/3P4/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Torre Attack: Classical Defense, Petrosian Gambit",
          fen: "rnbqkb1r/p2p1ppp/1p2pn2/2pP2B1/8/4PN2/PPP2PPP/RN1QKB1R",
        },
        {
          name: "Torre Attack: Wagner Gambit",
          fen: "rnbqkb1r/pp1p1ppp/4pn2/2p3B1/3PP3/5N2/PPP2PPP/RN1QKB1R",
        },
        {
          name: "Yusupov-Rubinstein System",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/3P4/4PN2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Schnepper Gambit",
          fen: "rnbqkb1r/p1pp1ppp/1p3n2/4p3/3P4/2P2N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Marienbad System",
          fen: "rn1qkb1r/pb1ppppp/1p3n2/2p5/3P4/5NP1/PPP1PPBP/RNBQK2R",
        },
        {
          name: "Marienbad System: Berg Variation",
          fen: "rn1qkb1r/pb1ppppp/1p3n2/8/2PQ4/5NP1/PP2PPBP/RNB1K2R",
        },
        {
          name: "Pseudo Queen's Indian Defense",
          fen: "rnbqkb1r/p1pppppp/1p3n2/8/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "East Indian Defense",
          fen: "rnbqkb1r/pppppp1p/5np1/8/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Colle System, King's Indian Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/3P4/3BPN2/PPP2PPP/RNBQK2R",
        },
        {
          name: "London System",
          fen: "rnbqkb1r/pppppp1p/5np1/8/3P1B2/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: Barry Attack, Gr\xfcnfeld Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/3P1B2/2N1PN2/PPP1BPPP/R2QK2R",
        },
        {
          name: "Queen's Pawn Game: Torre Attack, Gr\xfcnfeld Variation, Main Line",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p2B1/3P4/4PN2/PPPN1PPP/R2QKB1R",
        },
        {
          name: "Torre Attack: Fianchetto Defense",
          fen: "rnbqkb1r/pppppp1p/5np1/6B1/3P4/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Torre Attack: Fianchetto Defense, Euwe Variation",
          fen: "rnbqk2r/pp1pppbp/5np1/2p3B1/3P4/5N2/PPPNPPPP/R2QKB1R",
        },
        {
          name: "Indian Defense: Przepiorka Variation",
          fen: "rnbqkb1r/pppppp1p/5np1/8/3P4/5NP1/PPP1PP1P/RNBQKB1R",
        },
        {
          name: "Indian Defense: Medusa Gambit",
          fen: "rnbqkb1r/pppppp1p/5n2/6p1/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Normal Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Pyrenees Gambit",
          fen: "rnbqkb1r/p1pppppp/5n2/1p6/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Mexican Defense",
          fen: "r1bqkb1r/pppppppp/2n2n2/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Mexican Defense: Horsefly Gambit",
          fen: "r1bqkb1r/pppppppp/5n2/3Pn3/2P2P2/8/PP2P1PP/RNBQKBNR",
        },
        {
          name: "Queen's Indian Accelerated",
          fen: "rnbqkb1r/p1pppppp/1p3n2/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Slav Indian",
          fen: "rnbqkb1r/pp1ppppp/2p2n2/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense, Fajarowicz Defense, Bonsdorf Variation",
          fen: "rnbqkb1r/p1pp1ppp/1p6/4P3/2P1n3/P7/1P2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense, Fajarowicz Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/2P1n3/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense, Fajarowicz-Steiner Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/2P1n3/8/PPQ1PPPP/RNB1KBNR",
        },
        {
          name: "Indian Defense: Budapest Defense",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/2P3n1/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense, Adler Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/2P3n1/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Budapest Defense, Alekhine Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/2P1P1n1/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense, Alekhine Variation, Abonyi Variation",
          fen: "rnbqkb1r/pppp1ppp/2n5/8/2P1PP2/8/PP4PP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense, Alekhine Variation, Tartakower Defense",
          fen: "rnbqkb1r/ppp2ppp/3p4/4P3/2P1P1n1/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Budapest Defense, Rubinstein Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/2P2Bn1/8/PP2PPPP/RN1QKBNR",
        },
        {
          name: "Old Indian Defense",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Old Indian Defense: Aged Gibbon Gambit",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/2PP2P1/8/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Old Indian Defense: Czech Variation, with Nc3",
          fen: "rnbqkb1r/pp2pppp/2pp1n2/8/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Old Indian Defense: Czech Variation, with Nf3",
          fen: "rnbqkb1r/pp2pppp/2pp1n2/8/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Old Indian Defense: Janowski Variation",
          fen: "rn1qkb1r/ppp1pppp/3p1n2/5b2/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Old Indian Defense: Janowski Variation, Fianchetto Variation",
          fen: "rn1qkb1r/ppp1pppp/3p1n2/5b2/2PP4/2N3P1/PP2PP1P/R1BQKBNR",
        },
        {
          name: "Old Indian Defense: Janowski Variation, Grinberg Gambit",
          fen: "rn1qkb1r/ppp1pppp/3p1n2/5b2/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Old Indian Defense: Janowski Variation, Main Line",
          fen: "rn1qkb1r/ppp1pppp/3p1n2/5b2/2PP4/2N2P2/PP2P1PP/R1BQKBNR",
        },
        {
          name: "Old Indian Defense: Dus-Khotimirsky Variation",
          fen: "r1bqkb1r/pppn1ppp/3p1n2/4p3/2PP4/2NBP3/PP3PPP/R1BQK1NR",
        },
        {
          name: "Old Indian Defense: Tartakower-Indian",
          fen: "rn1qkb1r/ppp1pppp/3p1n2/8/2PP2b1/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Old Indian Defense: Two Knights Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/4p3/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Old Indian Defense: Ukrainian Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/4p3/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Old Indian Defense: Normal Variation",
          fen: "r1bqkb1r/pppn1ppp/3p1n2/4p3/2PPP3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Benoni Defense",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Czech Benoni Defense",
          fen: "rnbqkb1r/pp1p1ppp/5n2/2pPp3/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Hrom\xe1dka System",
          fen: "rnbqkb1r/pp2pppp/3p1n2/2pP4/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: King's Indian System",
          fen: "rnbqkb1r/pp3p1p/3p1np1/2pPp3/2P1P3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Benoni Defense: Weenink Variation",
          fen: "rnbqkb1r/pp1p1ppp/4pn2/2P5/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation, Burille Variation, Reversed Tarrasch",
          fen: "r1bq1rk1/pp2ppbp/2n2np1/3p4/2PP4/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "Vulture Defense",
          fen: "rnbqkb1r/pp1ppppp/8/2pP4/2P1n3/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit Accepted",
          fen: "rnbqkb1r/3ppppp/p4n2/1PpP4/8/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit Accepted: Dlugy Variation",
          fen: "rnbqkb1r/3ppppp/p4n2/1PpP4/8/5P2/PP2P1PP/RNBQKBNR",
        },
        {
          name: "Benko Gambit Accepted: Modern Variation",
          fen: "rnbqkb1r/3ppppp/p4n2/1PpP4/8/4P3/PP3PPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit Accepted: Pawn Return Variation",
          fen: "rnbqkb1r/3ppppp/pP3n2/2pP4/8/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit Declined: Bishop Attack",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP2B1/2P5/8/PP2PPPP/RN1QKBNR",
        },
        {
          name: "Benko Gambit Declined: Hj\xf8rring Countergambit",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/2P1P3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit Declined: Main Line",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/2P5/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Benko Gambit Declined: Pseudo-S\xe4misch",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/2P5/5P2/PP2P1PP/RNBQKBNR",
        },
        {
          name: "Benko Gambit Declined: Quiet Line",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/2P5/8/PP1NPPPP/R1BQKBNR",
        },
        {
          name: "Benko Gambit Declined: Sosonko Variation",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/P1P5/8/1P2PPPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit: Mutkin Countergambit",
          fen: "rnbqkb1r/p2ppppp/5n2/1ppP4/2P3P1/8/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Benko Gambit: Nescafe Frappe Attack",
          fen: "rnbqkb1r/4pppp/3p1n2/1NpP4/1pB1P3/8/PP3PPP/R1BQK1NR",
        },
        {
          name: "Benko Gambit: Zaitsev System",
          fen: "rnbqkb1r/3ppppp/p4n2/1PpP4/8/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Benko Gambit: Zaitsev Variation, Nescafe Frappe Attack",
          fen: "rnbqkb1r/3ppppp/5n2/1NpP4/1p2P3/8/PP3PPP/R1BQKBNR",
        },
        {
          name: "Benko Gambit Accepted: Central Storming Variation",
          fen: "rn1qkb1r/3ppp1p/b4np1/2pP4/5P2/2N5/PP2P1PP/R1BQKBNR",
        },
        {
          name: "Benko Gambit Accepted: Fianchetto Variation",
          fen: "rn1qk2r/4ppbp/b2p1np1/2pP4/8/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Benko Gambit Accepted: Fully Accepted Variation",
          fen: "rnbqkb1r/3ppppp/P4n2/2pP4/8/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benko Gambit: Fianchetto Variation",
          fen: "rn1qkb1r/4pp1p/b2p1np1/2pP4/8/2N2NP1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "Benko Gambit: Nd2 Variation",
          fen: "rn1qkb1r/4pp1p/b2p1np1/2pP4/8/2N5/PP1NPPPP/R1BQKB1R",
        },
        {
          name: "Benko Gambit",
          fen: "rn1qkb1r/4pp1p/3p1np1/2pP4/4P3/2N3P1/PP3P1P/R1BQ1KNR",
        },
        {
          name: "Benko Gambit Accepted: King Walk Variation",
          fen: "rn1q1rk1/4ppbp/3p1np1/2pP4/4P3/2N2NP1/PP3PKP/R1BQ3R",
        },
        {
          name: "Benko Gambit Accepted: Yugoslav",
          fen: "rn1qkb1r/4pppp/b2p1n2/2pP4/4P3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Benko Gambit Accepted: Yugoslav",
          fen: "rn1qkb1r/4pp1p/3p1np1/2pP4/4P3/2N5/PP2NPPP/R1BQ1K1R",
        },
        {
          name: "Benoni Defense: Modern Variation",
          fen: "rnbqkb1r/pp1p1ppp/4pn2/2pP4/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Benoni Defense: Modern Variation, Snake Variation",
          fen: "rnbqk2r/pp1p1ppp/3b1n2/2pP4/8/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Benoni Defense",
          fen: "rnbqkb1r/pp3p1p/3p1np1/2pP4/8/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Benoni Defense: Fianchetto Variation",
          fen: "rnbqkb1r/pp3p1p/3p1np1/2pP4/8/2N2NP1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "Benoni Defense: Knight's Tour Variation",
          fen: "rnbqkb1r/pp3p1p/3p1np1/2pP4/8/2N5/PP1NPPPP/R1BQKB1R",
        },
        {
          name: "Benoni Defense: Uhlmann Variation",
          fen: "rnbqkb1r/pp3p1p/3p1np1/2pP2B1/8/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Benoni Defense: Fianchetto Variation",
          fen: "rnbq1rk1/pp3pbp/3p1np1/2pP4/8/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Benoni Defense: Fianchetto Variation, Hastings Defense",
          fen: "r1bq1rk1/pp1n1pbp/3p1np1/2pP4/8/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: Fianchetto Variation, Hastings Defense, Main Line",
          fen: "r1bqr1k1/1p1n1pbp/p2p1np1/2pP4/P7/2N3P1/1P1NPPBP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: King's Pawn Line",
          fen: "rnbqkb1r/pp3ppp/3p1n2/2pP4/4P3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Benoni Defense: Mikenas Variation",
          fen: "rnbqk2r/pp3pbp/3p1np1/2pPP3/5P2/2N5/PP4PP/R1BQKBNR",
        },
        {
          name: "Benoni Defense: Pawn Storm Variation",
          fen: "rnbqkb1r/pp3p1p/3p1np1/2pP4/4PP2/2N5/PP4PP/R1BQKBNR",
        },
        {
          name: "Benoni Defense: Taimanov Variation",
          fen: "rnbqk2r/pp3pbp/3p1np1/1BpP4/4PP2/2N5/PP4PP/R1BQK1NR",
        },
        {
          name: "Benoni Defense: Four Pawns Attack",
          fen: "rnbq1rk1/pp3pbp/3p1np1/2pP4/4PP2/2N2N2/PP4PP/R1BQKB1R",
        },
        {
          name: "Benoni Defense: Four Pawns Attack, Main Line",
          fen: "rnbqr1k1/pp3pbp/3p1np1/2pP4/4PP2/2N2N2/PP2B1PP/R1BQK2R",
        },
        {
          name: "Benoni Defense: Classical Variation",
          fen: "rnbqkb1r/pp3p1p/3p1np1/2pP4/4P3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Benoni Defense: Classical Variation, New York Variation",
          fen: "rnbqk2r/pp3pbp/3p1np1/2pP4/4P3/2N2N1P/PP3PP1/R1BQKB1R",
        },
        {
          name: "Benoni Defense: Classical Variation, Traditional Variation",
          fen: "rnbqk2r/pp3pbp/3p1np1/2pP4/4P3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "Benoni Defense: Classical Variation, Averbakh-Grivas Attack",
          fen: "rnbqk2r/pp3pbp/3p1np1/2pP2B1/4P3/2N2N2/PP3PPP/R2QKB1R",
        },
        {
          name: "Benoni Defense: Classical",
          fen: "rnbq1rk1/pp3pbp/3p1np1/2pP4/4P3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "Benoni Defense: Classical Variation, Main Line",
          fen: "rnbq1rk1/pp3pbp/3p1np1/2pP4/4P3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: Classical Variation, Full Line",
          fen: "rnbq1rk1/1p3pbp/p2p1np1/2pP4/P3P3/2N2N2/1P2BPPP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: Classical Variation, Argentine Counterattack",
          fen: "rn1q1rk1/1p3pbp/p2p1np1/2pP4/P3P1b1/2N2N2/1P2BPPP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: Classical Variation, Czerniak Defense",
          fen: "rnbqr1k1/pp3pbp/3p1np1/2pP4/4P3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: Classical Variation, Czerniak Defense, Tal Line",
          fen: "rnbqr1k1/pp3pbp/3p1np1/2pP4/4P3/2N5/PP1NBPPP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: Classical Variation, Czerniak Defense",
          fen: "r1bqr1k1/pp3pbp/n2p1np1/2pP4/4P3/2N5/PP1NBPPP/R1BQ1RK1",
        },
        {
          name: "Benoni Defense: Classical Variation, Czerniak Defense",
          fen: "r1bqr1k1/pp3pbp/n2p1np1/2pP4/4P3/2N2P2/PP1NB1PP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Alapin Variation",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/3P4/3Q4/PPP1PPPP/RNB1KBNR",
        },
        {
          name: "Dutch Defense: Hevendehl Gambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/3P2P1/8/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Hopton Attack",
          fen: "rnbqkbnr/ppppp1pp/8/5pB1/3P4/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Dutch Defense: Janzen-Korchnoi Gambit",
          fen: "rnbqkb1r/ppppp1pp/5n2/5p2/3P2P1/7P/PPP1PP2/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Kingfisher Gambit",
          fen: "rnbqkbnr/ppp1p1pp/8/3p1p2/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Korchnoi Attack",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/3P4/7P/PPP1PPP1/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Krejcik Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/3P2P1/8/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Krejcik Gambit, Tate Gambit",
          fen: "rnbqkbnr/ppp1p1pp/8/3p4/3PP1p1/2N5/PPP2P1P/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Manhattan Gambit, Anti-Classical Line",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/3P2P1/3Q4/PPP1PP1P/RNB1KBNR",
        },
        {
          name: "Dutch Defense: Manhattan Gambit, Anti-Leningrad",
          fen: "rnbqkbnr/ppppp2p/6p1/5p2/3P2P1/3Q4/PPP1PP1P/RNB1KBNR",
        },
        {
          name: "Dutch Defense: Manhattan Gambit, Anti-Modern",
          fen: "rnbqkbnr/ppp1p1pp/3p4/5p2/3P2P1/3Q4/PPP1PP1P/RNB1KBNR",
        },
        {
          name: "Dutch Defense: Manhattan Gambit, Anti-Stonewall",
          fen: "rnbqkbnr/ppp1p1pp/8/3p1p2/3P2P1/3Q4/PPP1PP1P/RNB1KBNR",
        },
        {
          name: "Dutch Defense: Omega-Isis Gambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Dutch Defense: Raphael Variation",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Spielmann Gambit",
          fen: "rnbqkb1r/ppppp1pp/5n2/5p2/3P2P1/2N5/PPP1PP1P/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Veresov Attack, Dutch System",
          fen: "rnbqkbnr/ppp1p1pp/8/3p1p2/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Blackburne Variation",
          fen: "rnbqkb1r/pppp2pp/4pn2/5p2/3P4/6PN/PPP1PPBP/RNBQK2R",
        },
        {
          name: "Dutch Defense: Fianchetto Attack",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/3P4/6P1/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Leningrad Variation, Karlsbad Variation",
          fen: "rnbqk1nr/ppppp1bp/6p1/5p2/3P4/6PN/PPP1PPBP/RNBQK2R",
        },
        {
          name: "Dutch Defense: Leningrad, Basman System",
          fen: "rnbqk2r/pp1pp1bp/2p3pn/5p2/3P4/5NP1/PPP1PPBP/RNBQ1RK1",
        },
        {
          name: "Dutch Defense: Semi-Leningrad Variation",
          fen: "rnbqkb1r/ppppp2p/5np1/5p2/3P4/6P1/PPP1PPBP/RNBQK1NR",
        },
        {
          name: "Dutch Defense: Blackmar's Second Gambit",
          fen: "rnbqkb1r/ppppp1pp/5n2/8/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit Accepted",
          fen: "rnbqkbnr/ppppp1pp/8/8/3Pp3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit, American Attack",
          fen: "rnbqkbnr/ppppp1pp/8/8/3Pp3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit, Tartakower Variation",
          fen: "rnbqkb1r/ppppp1pp/5n2/8/3Pp1P1/2N5/PPP2P1P/R1BQKBNR",
        },
        {
          name: "Rat Defense: Balogh Defense",
          fen: "rnbqkbnr/ppp1p1pp/3p4/5p2/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit",
          fen: "rnbqkb1r/ppppp1pp/5n2/6B1/3Pp3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit, Alekhine Variation",
          fen: "rnbqkb1r/ppppp2p/5np1/6B1/3Pp2P/2N5/PPP2PP1/R2QKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit, Chigorin Variation",
          fen: "rnbqkb1r/pp1pp1pp/2p2n2/6B1/3Pp3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit, Lasker Variation",
          fen: "rnbqkb1r/ppppp2p/5np1/6B1/3Pp3/2N2P2/PPP3PP/R2QKBNR",
        },
        {
          name: "Dutch Defense: Staunton Gambit, Nimzowitsch Variation",
          fen: "rnbqkb1r/p1ppp1pp/1p3n2/6B1/3Pp3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "Dutch Defense",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Bellon Gambit",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Bladel Variation",
          fen: "rnbqkb1r/ppppp2p/6pn/5p2/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Classical Variation",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Krause Variation",
          fen: "r1bqkb1r/ppp1p1pp/2np1n2/5p2/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Dutch Defense: Normal Variation",
          fen: "rnbqkb1r/ppppp1pp/5n2/5p2/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Rubinstein Variation",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Queen's Knight Variation",
          fen: "rnbqkb1r/ppppp1pp/5n2/5p2/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Dutch Defense: Fianchetto Variation",
          fen: "rnbqkb1r/ppppp1pp/5n2/5p2/2PP4/6P1/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Hort-Antoshin System",
          fen: "rnb1kb1r/ppq1p1pp/2pp1n2/5p2/2PP4/2N3P1/PP2PPBP/R1BQK1NR",
        },
        {
          name: "Dutch Defense: Leningrad Variation",
          fen: "rnbqkb1r/ppppp2p/5np1/5p2/2PP4/6P1/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Dutch Defense: Leningrad Variation",
          fen: "rnbqk2r/ppppp1bp/5np1/5p2/2PP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Dutch Defense: Leningrad Variation, Warsaw Variation",
          fen: "rnbq1rk1/pp2p1bp/2pp1np1/5p2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense: Leningrad Variation, Matulovic Variation",
          fen: "r1bq1rk1/ppp1p1bp/2np1np1/5p2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation",
          fen: "rnbqkb1r/pppp2pp/4pn2/5p2/2PP4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Dutch Defense: Nimzo-Dutch Variation",
          fen: "rnbqk2r/pppp2pp/4pn2/5p2/1bPP4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Dutch Defense: Nimzo-Dutch Variation, Alekhine Variation",
          fen: "rnbqk2r/ppppb1pp/4pn2/5p2/2PP4/6P1/PP1BPPBP/RN1QK1NR",
        },
        {
          name: "Dutch Defense: Classical Variation",
          fen: "rnbqk2r/ppppb1pp/4pn2/5p2/2PP4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Dutch Defense: Classical Variation, Blackburne Attack",
          fen: "rnbqk2r/ppppb1pp/4pn2/5p2/2PP4/6PN/PP2PPBP/RNBQK2R",
        },
        {
          name: "Dutch Defense: Alekhine Variation",
          fen: "rnbq1rk1/ppppb1pp/4p3/5p2/2PPn3/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation",
          fen: "rnbq1rk1/ppppb1pp/4pn2/5p2/2PP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Dutch Defense: Stonewall",
          fen: "rnbq1rk1/ppp1b1pp/4pn2/3p1p2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense: Stonewall Variation",
          fen: "rnbq1rk1/ppp1b1pp/4pn2/3p1p2/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Stonewall Variation, Botvinnik Variation",
          fen: "rnbq1rk1/ppp1b1pp/4pn2/3p1p2/2PP4/1P3NP1/P3PPBP/RNBQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Stonewall Variation",
          fen: "rnbq1rk1/pp2b1pp/2p1pn2/3p1p2/2PP4/BP3NP1/P3PPBP/RN1Q1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Stonewall Variation",
          fen: "rnbq1rk1/pp2b1pp/2p1pn2/3p1p2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense: Stonewall, Chekhover Variation",
          fen: "rnb1qrk1/pp2b1pp/2p1pn2/3p1pB1/2PP4/2N2NP1/PPQ1PPBP/R4RK1",
        },
        {
          name: "Dutch Defense: Classical Variation",
          fen: "rnbq1rk1/ppp1b1pp/3ppn2/5p2/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Buenos Aires Variation",
          fen: "rnbq1rk1/1pp1b1pp/3ppn2/p4p2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Huisl Variation",
          fen: "rnbq1rk1/ppp1b1pp/3pp3/5p2/2PPn3/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Ilyin-Zhenevsky Variation",
          fen: "rnb1qrk1/ppp1b1pp/3ppn2/5p2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Ilyin-Zhenevsky Variation, Winter Variation",
          fen: "rnb1qrk1/ppp1b1pp/3ppn2/5p2/2PP4/2N2NP1/PP2PPBP/R1BQR1K1",
        },
        {
          name: "Dutch Defense: Classical Variation, Ilyin-Zhenevsky Variation, Alatortsev-Lisitsyn Line",
          fen: "rnb1qrk1/ppp1b1pp/3ppn2/5p2/2PP4/2N2NP1/PPQ1PPBP/R1B2RK1",
        },
        {
          name: "Dutch Defense: Classical Variation, Ilyin-Zhenevsky Variation, Modern Main Line",
          fen: "rnb1qrk1/ppp1b1pp/3ppn2/5p2/2PP4/1PN2NP1/P3PPBP/R1BQ1RK1",
        },
        {
          name: "Barnes Defense",
          fen: "rnbqkbnr/ppppp1pp/5p2/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Borg Defense",
          fen: "rnbqkbnr/pppppp1p/8/6p1/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Borg Defense: Borg Gambit",
          fen: "rnbqk1nr/ppppppbp/8/6p1/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Borg Defense: Troon Gambit",
          fen: "rnbqkbnr/pppppp2/7p/8/3PP1pP/8/PPP2PP1/RNBQKBNR",
        },
        {
          name: "Borg Defense: Zilbermints Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/4p1p1/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Carr Defense",
          fen: "rnbqkbnr/ppppppp1/7p/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Carr Defense: Zilbermints Gambit",
          fen: "rnbqkbnr/pppp1pp1/7p/4p3/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Duras Gambit",
          fen: "rnbqkbnr/ppppp1pp/8/5p2/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Fried Fox Defense",
          fen: "rnbq1bnr/pppppkpp/5p2/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Goldsmith Defense",
          fen: "rnbqkbnr/ppppppp1/8/7p/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Goldsmith Defense: Picklepuss Defense",
          fen: "rnbqkb1r/ppppppp1/5n2/7p/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Guatemala Defense",
          fen: "rn1qkbnr/p1pppppp/bp6/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Hippopotamus Defense",
          fen: "rnbqkb1r/pppppppp/7n/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Hippopotamus Defense",
          fen: "rnbqkb1r/ppppp2p/5ppn/8/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game",
          fen: "rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Lemming Defense",
          fen: "r1bqkbnr/pppppppp/n7/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Lion Defense: Lion's Jaw",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/3PP3/5P2/PPP3PP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense",
          fen: "r1bqkbnr/pppppppp/2n5/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense",
          fen: "r1bqkbnr/pppppppp/2n5/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Breyer Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Colorado Countergambit",
          fen: "r1bqkbnr/ppppp1pp/2n5/5p2/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: Colorado Countergambit Accepted",
          fen: "r1bqkbnr/ppppp1pp/2n5/5P2/8/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: Declined Variation",
          fen: "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: El Columpio Defense",
          fen: "r1bqkb1r/pppppppp/2n5/4P3/6n1/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: El Columpio Defense, El Columpio Gambit",
          fen: "r1bqkb1r/ppp1pppp/2npP2n/8/3P4/5N1P/PPP2PP1/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: El Columpio Defense, Exchange Variation",
          fen: "r1bqkb1r/ppp1pppp/2nP3n/8/3P4/5N1P/PPP2PP1/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: El Columpio Defense, Pin Variation",
          fen: "r1bqkb1r/ppp1pppp/2np3n/1B2P3/3P4/5N1P/PPP2PP1/RNBQK2R",
        },
        {
          name: "Nimzowitsch Defense: Franco-Nimzowitsch Variation",
          fen: "r1bqkbnr/pppp1ppp/2n1p3/8/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: French Connection",
          fen: "r1bqkbnr/pppp1ppp/2n1p3/8/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Hornung Gambit",
          fen: "r1bqkbnr/ppp1pppp/2n5/3p4/3PP3/4B3/PPP2PPP/RN1QKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Bielefelder Gambit",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1P3/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Hammer Gambit",
          fen: "r1bqkbnr/pppp2pp/2n2p2/4P3/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Herford Gambit",
          fen: "r1b1kbnr/pppp1ppp/2n5/4P3/4P2q/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Keres Attack",
          fen: "r1bqkbnr/pppp1ppp/8/4n3/4P3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Linksspringer Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/3Pp3/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Main Line",
          fen: "r1bqkbnr/pppp1ppp/6n1/8/4PP2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Paulsen Attack",
          fen: "r1bqkbnr/pppp1ppp/8/4n3/4P3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, Riemann Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/4PP2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Kennedy Variation, de Smet Gambit",
          fen: "r1bqkbnr/ppp2ppp/2np4/4P3/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Mikenas Variation",
          fen: "r1bqkbnr/ppp1pppp/2np4/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Neo-Mongoloid Defense",
          fen: "r1bqkbnr/ppppp1pp/2n2p2/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Pirc Connection",
          fen: "r1bqkbnr/pppppp1p/2n3p1/8/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Pseudo-Spanish Variation",
          fen: "r1bqkbnr/pppppppp/2n5/1B6/4P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation",
          fen: "r1bqkbnr/ppp1pppp/2n5/3p4/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Aachen Gambit",
          fen: "r1bqkbnr/ppp1pppp/8/3P4/1n1P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Advance Variation",
          fen: "r1bqkbnr/ppp1pppp/2n5/3pP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation",
          fen: "r1bqkbnr/ppp1pppp/2n5/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation",
          fen: "r1bqkbnr/ppp1pppp/2n5/8/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation, Brandics Gambit",
          fen: "r1bqkbnr/1pp1pppp/p1n5/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation, Erben Gambit",
          fen: "r1bqkbnr/ppp1pp1p/2n3p1/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation, Heinola-Deppe Gambit",
          fen: "r1bqkbnr/ppp2ppp/2n5/3pp3/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation, Nimzowitsch Gambit",
          fen: "r1bqkbnr/ppp1pppp/8/3Pn3/4p3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation, Richter Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3P4/4p3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Bogoljubov Variation, Vehre Variation",
          fen: "r1bqkb1r/ppp1pppp/2n2n2/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Exchange Variation",
          fen: "r1b1kbnr/ppp1pppp/2n5/3q4/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Scandinavian Variation, Exchange Variation, Marshall Gambit",
          fen: "r1b1kbnr/ppp1pppp/2n5/3q4/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Wheeler Gambit",
          fen: "r1bqkbnr/pppppppp/2n5/8/1P2P3/8/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Nimzowitsch Defense: Williams Variation",
          fen: "r1bqkbnr/ppp1pppp/2np4/8/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Nimzowitsch Defense: Woodchuck Variation",
          fen: "r1bqkbnr/1ppppppp/p1n5/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Owen Defense",
          fen: "rnbqkbnr/p1pppppp/1p6/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Owen Defense: Hekili-Loa Gambit",
          fen: "r1bqkbnr/p2ppppp/1pn5/2P5/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Owen Defense: Matovinsky Gambit",
          fen: "rn1qkbnr/p1ppp2p/1p4p1/5P1Q/3P4/3B4/PPP2PbP/RNB1K1NR",
        },
        {
          name: "Owen Defense: Naselwaus Gambit",
          fen: "rn1qkbnr/pbpppppp/1p6/6B1/3PP3/8/PPP2PPP/RN1QKBNR",
        },
        {
          name: "Owen Defense: Smith Gambit",
          fen: "rn1qkbnr/pbpppppp/1p6/8/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Owen Defense: Unicorn Variation",
          fen: "rn1qkbnr/pbppp1pp/1p3p2/8/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Owen Defense: Wind Gambit",
          fen: "rn1qkbnr/pbpp1ppp/1p6/4p3/3PP3/5P2/PPP3PP/RNBQKBNR",
        },
        {
          name: "Pirc Defense",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Pirc Defense",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Pirc Defense",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Pirc Defense: Roscher Gambit",
          fen: "rnbqkb1r/ppp1pppp/3p1n2/8/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Rat Defense: Antal Defense",
          fen: "r1bqkbnr/pppnpppp/3p4/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Rat Defense: Fuller Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/3P4/5P2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "Rat Defense: Harmonist",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "Rat Defense: Petruccioli Attack",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/4P2P/8/PPPP1PP1/RNBQKBNR",
        },
        {
          name: "Rat Defense: Spike Attack",
          fen: "rnbqkbnr/ppp1pppp/3p4/8/4P1P1/8/PPPP1P1P/RNBQKBNR",
        },
        {
          name: "St. George Defense",
          fen: "rnbqkbnr/1ppppppp/p7/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "St. George Defense: Polish Variation",
          fen: "rn1qkbnr/1bpp1ppp/p3p3/1p6/3PP3/3B1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "St. George Defense: San Jorge Variation",
          fen: "rn1qk1nr/1bp1ppbp/p2p2p1/1p6/3PP3/2PB1N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "St. George Defense: Zilbermints Gambit",
          fen: "rnbqkbnr/1ppp1ppp/p7/4p3/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Van Geet Opening: Berlin Gambit",
          fen: "r1bqkbnr/ppp1pppp/2n5/3P4/4p3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Ware Defense",
          fen: "rnbqkbnr/1ppppppp/8/p7/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Ware Defense: Snagglepuss Defense",
          fen: "r1bqkbnr/1ppppppp/2n5/p7/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/4P3/1P6/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Anderssen Counterattack",
          fen: "rnb1kbnr/ppp2ppp/8/q3p3/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Scandinavian Defense: Anderssen Counterattack, Collijn Variation",
          fen: "rn2kbnr/ppp2ppp/8/q3p3/3P2b1/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Anderssen Counterattack, Goteborg System",
          fen: "rnb1kbnr/ppp2ppp/8/q3p3/3P4/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Anderssen Counterattack, Orthodox Attack",
          fen: "r1b1k1nr/ppp2ppp/2n5/q3P3/1b6/2N2N2/PPPB1PPP/R2QKB1R",
        },
        {
          name: "Scandinavian Defense: Blackburne Gambit",
          fen: "r1bqkbnr/pp2pppp/2n5/8/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Blackburne-Kloosterboer Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/3P4/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Boehnke Gambit",
          fen: "rn1qkbnr/ppp2ppp/4b3/8/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Bronstein Variation",
          fen: "rnb1kb1r/1pp1pppp/p2q1n2/8/3P4/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Classical Variation",
          fen: "rn2kb1r/ppp1pppp/5n2/q4b2/3P4/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Gr\xfcnfeld Variation",
          fen: "rn2kb1r/pp2pppp/2p2n2/q3Nb2/3P2P1/2N5/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Gubinsky-Melts Defense",
          fen: "rnb1kbnr/ppp1pppp/3q4/8/8/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Scandinavian Defense: Icelandic-Palme Gambit",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3P4/2P5/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Kiel Variation",
          fen: "rnbqkb1r/ppp1pppp/8/8/1nPP4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Kloosterboer Gambit",
          fen: "rnbqkbnr/pp3ppp/2P5/4p3/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: K\xe1das Gambit",
          fen: "rnbqkb1r/pp3ppp/2P2n2/4p3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Lasker Variation",
          fen: "rn2kb1r/ppp1pppp/5n2/q7/3P2b1/2N2N1P/PPP2PP1/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Main Line",
          fen: "rnb1kbnr/ppp1pppp/8/q7/8/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Scandinavian Defense: Main Line, Leonhardt Gambit",
          fen: "rnb1kbnr/ppp1pppp/8/q7/1P6/2N5/P1PP1PPP/R1BQKBNR",
        },
        {
          name: "Scandinavian Defense: Main Line, Mieses Variation",
          fen: "rnb1kb1r/ppp1pppp/5n2/q7/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Scandinavian Defense: Marshall Variation",
          fen: "rnbqkb1r/ppp1pppp/8/3n4/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Mieses-Kotroc Variation",
          fen: "rnb1kbnr/ppp1pppp/8/3q4/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Modern Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/3P4/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Modern Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/3P4/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Modern Variation, Gipslis Variation",
          fen: "rn1qkb1r/ppp1pppp/8/3n4/3P2b1/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scandinavian Defense: Modern Variation, Wing Gambit",
          fen: "rnbqkb1r/p1p1pp1p/5np1/1p1P4/2PP4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Panov Transfer",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3P4/2P5/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit",
          fen: "rn1qkb1r/ppp1pppp/5n2/3P4/3P2b1/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Banker Variation",
          fen: "rn1qkb1r/ppp1pppp/5n2/3P1b2/2PP4/5P2/PP4PP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Classical Variation",
          fen: "rn1qkb1r/ppp1pppp/5n2/3P4/3P2b1/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Correspondence Refutation",
          fen: "rn1qkb1r/ppp1pppp/5n2/3P1b2/3P2P1/5P2/PPP4P/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Elbow Variation",
          fen: "rn1qkb1r/pp2pppp/2p2n2/1B1P4/3P2b1/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Jadoul Variation",
          fen: "r2qkb1r/pppnpppp/5n2/1B1P1b2/2PP4/5P2/PP4PP/RNBQK1NR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Lusophobe Variation",
          fen: "r2qkb1r/pppnpppp/5n2/3P4/3P2b1/8/PPP1BPPP/RNBQK1NR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Melbourne Shuffle Variation",
          fen: "r2qkb1r/pppnpppp/5n2/1B1P1b2/3P4/2N2P2/PPP3PP/R1BQK1NR",
        },
        {
          name: "Scandinavian Defense: Portuguese Gambit, Wuss Variation",
          fen: "rn1qkb1r/ppp1pppp/5n2/3P4/3P2b1/8/PPP1BPPP/RNBQK1NR",
        },
        {
          name: "Scandinavian Defense: Richter Variation",
          fen: "rnbqkb1r/ppp1pp1p/6p1/3n4/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scandinavian Defense: Richter Variation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3P4/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Scandinavian Defense: Schiller-Pytel Variation",
          fen: "rnb1kbnr/pp2pppp/2pq4/8/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Scandinavian Defense: Schiller-Pytel Variation, Modern Variation",
          fen: "rn2kb1r/pp2pppp/2p2n2/5b2/1qBP1B2/2N5/PPP1NPPP/R2QK2R",
        },
        {
          name: "Scandinavian Defense: Valencian Variation",
          fen: "rnbqkbnr/ppp1pppp/8/8/8/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Scandinavian Defense: Valencian Variation, Ilundain Variation",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/3P4/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Valencian Variation, Main Line",
          fen: "rn1qkb1r/ppp1pppp/5n2/8/3P2b1/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scandinavian Defense: Zilbermints Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/1P2P3/8/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Van Geet Opening: Gr\xfcnfeld Defense",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/4N3/8/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Alekhine Defense",
          fen: "rnbqkb1r/pppppppp/5n2/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Brooklyn Variation",
          fen: "rnbqkbnr/pppppppp/8/4P3/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Brooklyn Variation, Everglades Variation",
          fen: "rnbqkbnr/ppppp1pp/8/4Pp2/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Buckley Attack",
          fen: "rnbqkb1r/pppppppp/8/3nP3/8/N7/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Alekhine Defense: Hunt Variation, Lasker Simul Gambit",
          fen: "rnbqkb1r/pppp1ppp/4p3/2PnP3/2B5/2N5/PP1P1PPP/R1BQK1NR",
        },
        {
          name: "Alekhine Defense: Hunt Variation, Matsukevich Gambit",
          fen: "rnbqkb1r/ppp1pppp/3p4/2P1P1B1/8/2P5/PP3PPP/R2QKBNR",
        },
        {
          name: "Alekhine Defense: Hunt Variation, Mikenas Gambit",
          fen: "rnbqkb1r/ppp2ppp/3p4/2PBP3/8/8/PP1P1PPP/R1BQK1NR",
        },
        {
          name: "Alekhine Defense: Kmoch Variation",
          fen: "rnbqkb1r/pp1ppppp/1n6/2p1P3/8/1B1P4/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Alekhine Defense: Krejcik Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Alekhine Defense: Krejcik Variation, Krejcik Gambit",
          fen: "rnbqkb1r/pppppBpp/8/8/4n3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Alekhine Defense: Mar\xf3czy Variation",
          fen: "rnbqkb1r/pppppppp/5n2/8/4P3/3P4/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Mokele Mbembe",
          fen: "rnbqkb1r/pppppppp/8/4P3/4n3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Mokele Mbembe, Modern Line",
          fen: "rnbqkb1r/ppppp1pp/5p2/4P3/3Pn3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Mokele Mbembe, Vavra Defense",
          fen: "rnbqkb1r/pppp1ppp/4p3/4P3/3Pn3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Normal Variation",
          fen: "rnbqkb1r/pppppppp/8/3nP3/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Scandinavian Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Alekhine Defense: Scandinavian Variation, Geschev Gambit",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3P4/8/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Alekhine Defense: Scandinavian Variation, Myers Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/6B1/4p3/2NP4/PPP2PPP/R2QKBNR",
        },
        {
          name: "Alekhine Defense: Spielmann Gambit",
          fen: "rnbqkb1r/pppnpppp/4P3/3p4/8/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Alekhine Defense: Steiner Variation",
          fen: "rnbqkb1r/pppppppp/1n6/4P3/2P5/1P6/P2P1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: S\xe4misch Attack",
          fen: "rnbqkb1r/pppppppp/8/3nP3/8/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Alekhine Defense: The Squirrel",
          fen: "rnbqkb1r/pppppppp/8/4P3/2P2n2/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Two Pawns Attack",
          fen: "rnbqkb1r/pppppppp/8/3nP3/2P5/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Two Pawns Attack, Lasker Variation",
          fen: "rnbqkb1r/pppppppp/1n6/2P1P3/8/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Two Pawns Attack, Mikenas Variation",
          fen: "rnbqkb1r/ppp2ppp/3pp3/2PnP3/2B5/2N5/PP1P1PPP/R1BQK1NR",
        },
        {
          name: "Alekhine Defense: Welling Variation",
          fen: "rnbqkb1r/pppppppp/8/3nP3/8/1P6/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense",
          fen: "rnbqkb1r/pppppppp/8/3nP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense",
          fen: "rnbqkb1r/ppp1pppp/3p4/3nP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense",
          fen: "rnbqkb1r/ppp1pppp/3p4/3nP3/2PP4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Balogh Variation",
          fen: "rnbqkb1r/ppp1pppp/3p4/3nP3/2BP4/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Alekhine Defense: Exchange Variation",
          fen: "rnbqkb1r/ppp1pppp/1n1P4/8/2PP4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Exchange Variation, Karpov Variation",
          fen: "r2q1rk1/pp2ppbp/1nnp2p1/5b2/2PP1B2/2N2N1P/PP2BPP1/R2Q1RK1",
        },
        {
          name: "Alekhine Defense: Exchange Variation, Voronezh Variation",
          fen: "rnbq1rk1/pp2ppbp/1n1p2p1/8/2PP4/1PN1B3/P4PPP/2RQKBNR",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack",
          fen: "rnbqkb1r/ppp1pppp/1n1p4/4P3/2PP1P2/8/PP4PP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack, Cambridge Gambit",
          fen: "rnbqkb1r/ppp1pp1p/1n1p4/4P1p1/2PP1P2/8/PP4PP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack, Fianchetto Variation",
          fen: "rnbqkb1r/ppp1pp1p/1n1p2p1/4P3/2PP1P2/8/PP4PP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack, Ilyin-Zhenevsky Variation",
          fen: "r2qkb1r/ppp1p1pp/1nn1p3/2P5/3P2b1/5N2/PP4PP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack, Korchnoi Variation",
          fen: "rn1q1rk1/ppp1b1pp/1n2pp2/4Pb2/2PP4/2N2N2/PP2B1PP/R1BQ1RK1",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack, Main Line",
          fen: "r1bqkb1r/ppp1pppp/1nn5/4P3/2PP4/4B3/PP4PP/RN1QKBNR",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack, Tartakower Variation",
          fen: "2kr3r/pppqbppp/1nn1p3/4Pb2/2PP4/2N1BN2/PP2B1PP/R2Q1RK1",
        },
        {
          name: "Alekhine Defense: Four Pawns Attack, Trifunovic Variation",
          fen: "rn1qkb1r/ppp1pppp/1n1p4/4Pb2/2PP1P2/8/PP4PP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Hunt Variation",
          fen: "rnbqkb1r/ppp1pppp/1n1p4/2P1P3/3P4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Modern Variation, Alekhine Gambit",
          fen: "rn1qkb1r/ppp1pppp/1n1p4/4P3/2PP2b1/5N2/PP2BPPP/RNBQK2R",
        },
        {
          name: "Alekhine Defense: O'Sullivan Gambit",
          fen: "rnbqkb1r/p1pppppp/8/1p1nP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Alekhine Defense: Modern Variation",
          fen: "rnbqkb1r/ppp1pppp/3p4/3nP3/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Alburt Variation",
          fen: "rnbqkb1r/ppp1pp1p/3p2p1/3nP3/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Keres Variation",
          fen: "rnbqk2r/ppp1ppbp/1n1p2p1/4P3/P2P4/1B3N2/1PP2PPP/RNBQK2R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Larsen Variation",
          fen: "rnbqkb1r/ppp1pppp/8/3np3/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Larsen-Haakert Variation",
          fen: "r1bqkb1r/ppp1pppp/2np4/3nP3/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Schmid Variation",
          fen: "rnbqkb1r/ppp1pppp/1n1p4/4P3/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Alekhine Variation",
          fen: "rn1qkb1r/ppp1pppp/3p4/3nP3/2PP2b1/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Flohr Variation",
          fen: "rn1qkb1r/pp2pppp/2pp4/3nP3/3P2b1/5N2/PPP1BPPP/RNBQK2R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Main Line",
          fen: "rn1qkb1r/ppp1pppp/3p4/3nP3/3P2b1/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Panov Variation",
          fen: "rn1qkb1r/ppp1pppp/3p4/3nP3/3P2b1/5N1P/PPP2PP1/RNBQKB1R",
        },
        {
          name: "Alekhine Defense: Modern Variation, Vitolins Attack",
          fen: "rn1qkb1r/ppp1pppp/1n1p4/3PP3/2P3b1/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Modern Defense",
          fen: "rnbqkbnr/pppppp1p/6p1/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Modern Defense",
          fen: "rnbqk1nr/ppppppbp/6p1/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Modern Defense: Anti-Modern",
          fen: "rnbqk1nr/pp2ppbp/2pp2p1/8/2BPP3/2N5/PPP1QPPP/R1B1K1NR",
        },
        {
          name: "Modern Defense: Bishop Attack",
          fen: "rnbqk1nr/ppppppbp/6p1/8/2BPP3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Modern Defense: Bishop Attack, B\xfccker Gambit",
          fen: "rnbqk1nr/p1ppppbp/6p1/1p6/2BPP3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Modern Defense: Bishop Attack, Monkey's Bum",
          fen: "rnbqk1nr/pppp1p1p/4p1p1/8/2BbP3/5Q2/PPP2PPP/RNB1K1NR",
        },
        {
          name: "Modern Defense: Dunworthy Variation",
          fen: "rnbqk1nr/pp2pp1p/2P3p1/8/2Pb4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Modern Defense: Fianchetto Gambit",
          fen: "rnbqkbnr/ppppp2p/6p1/5p2/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Modern Defense: Gurgenidze Defense",
          fen: "rnbqk1nr/pp2ppb1/2p3p1/3pP2p/3P1P2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Lizard Defense, Mittenberger Gambit",
          fen: "rnbqk1nr/ppp1ppbp/6p1/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Masur Gambit",
          fen: "rnbq1rk1/ppppp2p/6pb/5P2/3P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "Modern Defense: Modern Pterodactyl",
          fen: "rnbqk1nr/pp1pppbp/6p1/2p5/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Mongredien Defense, with Nc3",
          fen: "rnbqk1nr/p1ppppbp/1p4p1/8/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Mongredien Defense, with Nf3",
          fen: "rnbqk1nr/p1ppppbp/1p4p1/8/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Modern Defense: Norwegian Defense",
          fen: "rnbqkb1r/pppppp1p/5np1/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Modern Defense: Norwegian Defense, Norwegian Gambit",
          fen: "rnbqkb1r/ppp1pp1p/3p2p1/4P2n/3P4/8/PPP1BPPP/RNBQK1NR",
        },
        {
          name: "Modern Defense: Pseudo-Austrian Attack",
          fen: "rnbqk1nr/ppp1ppbp/3p2p1/8/3PPP2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Semi-Averbakh Variation, Pterodactyl Variation Declined",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1p5/2PPP3/5N2/PP2BPPP/RNBQK2R",
        },
        {
          name: "Modern Defense: Standard Defense",
          fen: "rnbqk1nr/ppp1ppbp/3p2p1/8/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Standard Line",
          fen: "rnbqk1nr/ppppppbp/6p1/8/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Modern Defense: Three Pawns Attack",
          fen: "rnbqk1nr/ppppppbp/6p1/8/3PPP2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "Modern Defense: Two Knights Variation",
          fen: "rnbqk1nr/ppp1ppbp/3p2p1/8/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Modern Defense: Two Knights Variation, Suttles Variation",
          fen: "rnbqk1nr/pp2ppbp/2pp2p1/8/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Modern Defense: Two Knights Variation, Suttles Variation, Tal Gambit",
          fen: "rnb1k1nr/pp2ppbp/2pp2p1/6B1/3PP3/2N2N2/PqPQ1PPP/R3KB1R",
        },
        {
          name: "Modern Defense: Westermann Gambit",
          fen: "rnbqk1nr/ppppppbp/6p1/8/3PP3/8/PPPB1PPP/RN1QKBNR",
        },
        {
          name: "Modern Defense: Wind Gambit",
          fen: "rnbqk1nr/ppppppbp/6p1/8/3PP3/3B4/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Norwegian Defense",
          fen: "rnbqkb1r/ppppppnp/6p1/4P3/3P2P1/8/PPP2P1P/RNBQKBNR",
        },
        {
          name: "Pterodactyl Defense: Austrian, Austriadactylus Western",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PPP2/5N2/PPP3PP/RNBQKB1R",
        },
        {
          name: "Pterodactyl Defense: Austrian, Grand Prix Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/4PP2/2N2N2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "Pterodactyl Defense: Austrian, Pteranodon",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PPP2/2P5/PP4PP/RNBQKBNR",
        },
        {
          name: "Pterodactyl Defense: Central, Anhanguera",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1p5/2PPP3/2N1B3/PP3PPP/R2QKBNR",
        },
        {
          name: "Pterodactyl Defense: Central, Benoni Quetzalcoatlus",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1pP4/2P1P3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Central, Quetzalcoatlus Gambit",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1P5/2P1P3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Eastern, Anhanguera",
          fen: "rnbqk1nr/pp1pppbp/6p1/2p5/3PP3/2N1B3/PPP2PPP/R2QKBNR",
        },
        {
          name: "Pterodactyl Defense: Eastern, Benoni",
          fen: "rnbqk1nr/pp1pppbp/6p1/2pP4/4P3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Eastern, Benoni Pteranodon",
          fen: "rnb1k1nr/pp1ppp1p/6p1/q1pP4/4P3/2P5/P1P2PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Eastern, Benoni Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1pP4/4P3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Eastern, Pteranodon",
          fen: "rnb1k1nr/pp1ppp1p/6p1/q1P5/4P3/2P5/P1P2PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Eastern, Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1P5/4P3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Eastern, Rhamphorhynchus",
          fen: "rnbqk1nr/pp1pppbp/6p1/2P5/4P3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Pterodactyl Defense: Fianchetto, King Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PP3/5NP1/PPP2P1P/RNBQKB1R",
        },
        {
          name: "Pterodactyl Defense: Fianchetto, Rhamphorhynchus",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1P5/4P3/6P1/PPP2P1P/RNBQKBNR",
        },
        {
          name: "Pterodactyl Defense: Sicilian, Quetzalcoatlus",
          fen: "rnb1k1nr/pp2ppbp/3p2p1/q1p5/3PP3/2N2N2/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Pterodactyl Defense: Sicilian, Siroccopteryx",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/2BPP3/2N2N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Pterodactyl Defense: Western, Anhanguera",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PP3/4BN2/PPP2PPP/RN1QKB1R",
        },
        {
          name: "Pterodactyl Defense: Western, Siroccopteryx",
          fen: "rnb1k1nr/pp1pppbp/6p1/q7/2BNP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Rat Defense: Accelerated Gurgenidze",
          fen: "rnbqkbnr/pp2pp1p/2pp2p1/8/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Czech Defense",
          fen: "rnbqkb1r/pp2pppp/2pp1n2/8/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "King's Pawn Game: Mar\xf3czy Defense",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Lion Defense: Anti-Philidor",
          fen: "r1bqkb1r/pppnpppp/3p1n2/8/3PPP2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "Lion Defense: Anti-Philidor, Lion's Cave",
          fen: "r1bqkb1r/pppn1ppp/3p1n2/4p3/3PPP2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "Lion Defense: Anti-Philidor, Lion's Cave, Lion Claw Gambit",
          fen: "r1bqkb1r/pp1n1ppp/2p2n2/3p4/2BQPP2/2N2N2/PPP3PP/R1B1K2R",
        },
        {
          name: "Lion Defense: Bayonet Attack",
          fen: "r1bqkb1r/pppnpppp/3p1n2/8/3PP1P1/2N5/PPP2P1P/R1BQKBNR",
        },
        {
          name: "Modern Defense: Geller's System",
          fen: "rnbqk1nr/ppp1ppbp/3p2p1/8/3PP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Pirc Defense",
          fen: "rnbqkb1r/ppp1pp1p/3p1np1/8/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Pirc Defense: 150 Attack",
          fen: "rnbqkb1r/pp2pp1p/2pp1np1/8/3PP3/2N1B3/PPPQ1PPP/R3KBNR",
        },
        {
          name: "Pirc Defense: 150 Attack, Inner Doll Defense",
          fen: "rn1qkb1r/pp2pp1p/2pp1np1/8/3PP1b1/2N1B3/PPPQ1PPP/R3KBNR",
        },
        {
          name: "Pirc Defense: 150 Attack, Sveshnikov-Jansa Attack",
          fen: "rnbqkb1r/pp2pp1p/2pp1np1/8/3PP3/2N1B2P/PPP2PP1/R2QKBNR",
        },
        {
          name: "Pirc Defense: Bayonet Attack",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/3PP2P/2N5/PPP1BPP1/R1BQK1NR",
        },
        {
          name: "Pirc Defense: Byrne Variation",
          fen: "rnbqkb1r/ppp1pp1p/3p1np1/6B1/3PP3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "Pirc Defense: Chinese Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/3PP1P1/2N5/PPP1BP1P/R1BQK1NR",
        },
        {
          name: "Pirc Defense: Kholmov System",
          fen: "rnbqkb1r/ppp1pp1p/3p1np1/8/2BPP3/2N5/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Pirc Defense: Sveshnikov System",
          fen: "rnbqkb1r/ppp1pp1p/3p1np1/8/3PP3/2N3P1/PPP2P1P/R1BQKBNR",
        },
        {
          name: "Pirc Defense: Classical Variation",
          fen: "rnbqkb1r/ppp1pp1p/3p1np1/8/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Pirc Defense: Classical Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Pirc Defense: Classical Variation, Quiet System",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/3PP3/2N2N2/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Pirc Defense: Classical Variation, Quiet System, Chigorin Line",
          fen: "r1bq1rk1/ppp1ppbp/2np1np1/8/3PP3/2N2N2/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Pirc Defense: Classical Variation, Quiet System, Czech Defense",
          fen: "rnbq1rk1/pp2ppbp/2pp1np1/8/3PP3/2N2N2/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Pirc Defense: Classical Variation, Quiet System, Parma Defense",
          fen: "rn1q1rk1/ppp1ppbp/3p1np1/8/3PP1b1/2N2N2/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Pirc Defense: Classical Variation, Schlechter Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/3PP3/2N2N1P/PPP2PP1/R1BQKB1R",
        },
        {
          name: "Pirc Defense: Austrian Attack",
          fen: "rnbqkb1r/ppp1pp1p/3p1np1/8/3PPP2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "Pirc Defense: Austrian Attack",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/3PPP2/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Pirc Defense: Austrian Attack, Dragon Formation",
          fen: "rnbqk2r/pp2ppbp/3p1np1/2p5/3PPP2/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Pirc Defense: Austrian Attack, Kurajica Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/3PPP2/2N1BN2/PPP3PP/R2QKB1R",
        },
        {
          name: "Pirc Defense: Austrian Attack, Ljubojevic Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2BPPP2/2N5/PPP3PP/R1BQK1NR",
        },
        {
          name: "Pirc Defense: Austrian Attack, Unzicker Attack",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/4P3/3P1P2/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Pirc Defense: Austrian Attack, Unzicker Attack, Bronstein Variation",
          fen: "rnbq1rk1/pppnppbp/3p2p1/4P3/3P1P1P/2N2N2/PPP3P1/R1BQKB1R",
        },
        {
          name: "Pirc Defense: Austrian Attack, Weiss Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/3PPP2/2NB1N2/PPP3PP/R1BQK2R",
        },
        {
          name: "Caro-Kann Defense",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Accelerated Panov Attack",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Accelerated Panov Attack",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Accelerated Panov Attack, Modern Variation",
          fen: "rnbqkb1r/pp2pppp/5n2/3P4/8/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Accelerated Panov Attack, Open Variation",
          fen: "rnbqkbnr/pp1p1ppp/2p5/4p3/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Accelerated Panov Attack, Pseudo-Scandinavian",
          fen: "rnb1kbnr/pp2pppp/2p5/3q4/2P5/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Accelerated Panov Attack, Van Weersel Attack",
          fen: "rnbqkbnr/pp2pppp/8/3p4/4P3/1Q6/PP1P1PPP/RNB1KBNR",
        },
        {
          name: "Caro-Kann Defense: Apocalypse Attack",
          fen: "rnbqkbnr/pp2pppp/8/3pN3/8/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Caro-Kann Defense: Breyer Variation",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/4P3/3P4/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Breyer Variation, Stein Attack",
          fen: "rnbq1rk1/pp2npbp/2p3p1/3pp3/1P2P3/3P1NP1/P1PN1PBP/R1BQ1RK1",
        },
        {
          name: "Caro-Kann Defense: Euwe Attack",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/4P3/1P6/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Goldman Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/4P3/2N2Q2/PPPP1PPP/R1B1KBNR",
        },
        {
          name: "Caro-Kann Defense: Hector Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/6N1/4p3/2N5/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Hillbilly Attack",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Caro-Kann Defense: Hillbilly Attack, Schaeffer Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/7Q/4p3/1B6/PPPP1PPP/RNB1K1NR",
        },
        {
          name: "Caro-Kann Defense: Labahn Attack",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/1P2P3/8/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Labahn Attack, Double Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/1P1p4/4P3/8/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Labahn Attack, Polish Variation",
          fen: "rnbqkbnr/pp1p1ppp/2p5/4p3/1P2P3/8/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Caro-Kann Defense: Scorpion-Horus Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/6B1/4p3/2NP4/PPP2PPP/R2QKBNR",
        },
        {
          name: "Caro-Kann Defense: Spike Variation",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/4P1P1/8/PPPP1P1P/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Spike Variation, Scorpion-Grob Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/8/4p1P1/2NP4/PPP2P1P/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Toikkanen Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/3pP3/2P5/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Two Knights Attack",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Two Knights Attack, Mindeno Variation",
          fen: "rn1qkbnr/pp2pppp/2p5/3p4/4P1b1/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Two Knights Attack, Mindeno Variation, Exchange Line",
          fen: "rn1qkbnr/pp2pppp/2p5/3p4/4P3/2N2b1P/PPPP1PP1/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Two Knights Attack, Mindeno Variation, Retreat Line",
          fen: "rn1qkbnr/pp2pppp/2p5/3p3b/4P3/2N2N1P/PPPP1PP1/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense",
          fen: "rnbqkbnr/pp1ppppp/2p5/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3pP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Bayonet Attack",
          fen: "rn1qkbnr/pp2pppp/2p5/3pPb2/3P2P1/8/PPP2P1P/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Botvinnik-Carls Defense",
          fen: "rnbqkbnr/pp2pppp/8/2ppP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Bronstein Variation",
          fen: "rn1qkbnr/pp2pppp/2p5/3pPb2/3P4/8/PPP1NPPP/RNBQKB1R",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Prins Attack",
          fen: "rn1qkbnr/pp2pppp/2p5/3pPb2/1P1P4/8/P1P2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Short Variation",
          fen: "rn1qkbnr/pp2pppp/2p5/3pPb2/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Tal Variation",
          fen: "rn1qkbnr/pp2pppp/2p5/3pPb2/3P3P/8/PPP2PP1/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Van der Wiel Attack",
          fen: "rn1qkbnr/pp2pppp/2p5/3pPb2/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Van der Wiel Attack",
          fen: "rn1qkbnr/pp3ppp/4p1b1/2ppP3/3P2PP/2N5/PPP1NP2/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Advance Variation, Van der Wiel Attack, Dreyev Defense",
          fen: "rn2kbnr/pp2pppp/1qp5/3pPb2/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Advance, Short Variation",
          fen: "rn1qkbnr/pp3ppp/2p1p3/3pPb2/3P4/2P5/PP2BPPP/RNBQK1NR",
        },
        {
          name: "Caro-Kann Defense: De Bruycker Defense",
          fen: "r1bqkbnr/pp1ppppp/n1p5/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: De Bruycker Defense",
          fen: "r1bqkbnr/ppnppppp/2p5/8/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Edinburgh Variation",
          fen: "rnb1kbnr/pp2pppp/1qp5/3p4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Mar\xf3czy Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/3PP3/5P2/PPP3PP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Mar\xf3czy Variation, Mar\xf3czy Gambit",
          fen: "rnbqkbnr/pp3ppp/2p5/8/2BpP3/5N2/PPP3PP/RNBQK2R",
        },
        {
          name: "Caro-Kann Defense: Masi Variation",
          fen: "rnbqkb1r/pp1ppppp/2p2n2/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Massachusetts Defense",
          fen: "rnbqkbnr/pp1pp1pp/2p5/5p2/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Mieses Attack, Landau Gambit",
          fen: "rnbqkb1r/pp1npppp/2p1P3/3p4/3P4/3B4/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Caro-Kann Defense: Mieses Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/3PP3/4B3/PPP2PPP/RN1QKBNR",
        },
        {
          name: "Caro-Kann Defense: Modern Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Ulysses Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/6N1/3Pp3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Caro-Kann Defense: Exchange Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3P4/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Exchange Variation, Bulla Attack",
          fen: "rnbqkbnr/pp2pppp/8/3p4/3P2P1/8/PPP2P1P/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Exchange Variation, Rubinstein Variation",
          fen: "r1bqkb1r/pp2pppp/2n2n2/3p4/3P1B2/2PB4/PP3PPP/RN1QK1NR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack",
          fen: "rnbqkbnr/pp2pppp/8/3p4/2PP4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack",
          fen: "rnbqkb1r/pp2pppp/5n2/3p4/2PP4/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Gunderam Attack",
          fen: "rnbqkb1r/pp2pppp/5n2/2Pp4/3P4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Modern Defense",
          fen: "r1bqkb1r/pp2pppp/2n2n2/3p4/2PP4/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Modern Defense, Carlsbad Line",
          fen: "r1bqkb1r/pp3ppp/2n1pn2/3p2B1/2PP4/2N5/PP3PPP/R2QKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Modern Defense, Czerniak Line",
          fen: "r1b1kb1r/pp2pppp/2n2n2/q2p2B1/2PP4/2N5/PP3PPP/R2QKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Modern Defense, Mieses Line",
          fen: "r2qkb1r/pp2pppp/2n2n2/3p4/2PP2b1/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Modern Defense, Reifir-Spielmann Line",
          fen: "r1b1kb1r/pp2pppp/1qn2n2/3p2B1/2PP4/2N5/PP3PPP/R2QKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov-Botvinnik, Herzog Defense",
          fen: "r1bqkb1r/pp2pppp/5n2/n2P2B1/2p5/2N5/PP3PPP/R2QKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack",
          fen: "rnbqkb1r/pp3ppp/4pn2/3p4/2PP4/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Fianchetto Defense",
          fen: "rnbqkb1r/pp2pp1p/5np1/3p4/2PP4/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Fianchetto Defense, Fianchetto Gambit",
          fen: "rnbqk2r/pp2ppbp/5np1/3P4/3P4/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Panov Attack, Main Line",
          fen: "rnbqk2r/pp3ppp/4pn2/3p4/1bPP4/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense",
          fen: "rnbqkbnr/pp2pppp/2p5/8/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Alekhine Gambit",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/3PN3/3B4/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Caro-Kann Defense: Campomanes Attack",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Forgacs Variation",
          fen: "rnbqkb1r/pp3ppp/2p2p2/8/2BP4/8/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Caro-Kann Defense: Gurgenidze Counterattack",
          fen: "rnbqkbnr/p3pppp/2p5/1p1p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Gurgenidze System",
          fen: "rnbqkbnr/pp2pp1p/2p3p1/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Main Line",
          fen: "rnbqkbnr/pp2pppp/2p5/8/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Rasa-Studier Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/8/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Tartakower Variation",
          fen: "rnbqkb1r/pp3ppp/2p2p2/8/3P4/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: von Hennig Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/8/2BPp3/2N5/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Caro-Kann Defense: Bronstein-Larsen Variation",
          fen: "rnbqkb1r/pp2pp1p/2p2p2/8/3P4/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Finnish Variation",
          fen: "rnbqkbnr/pp2ppp1/2p4p/8/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation",
          fen: "r1bqkbnr/pp1npppp/2p5/8/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation, Modern Main Line",
          fen: "r1bqk2r/pp1n1pp1/2pbp2p/8/3PQ3/3B1N2/PPP2PPP/R1B1K2R",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation, Modern Variation",
          fen: "r1bqkbnr/pp1npppp/2p5/6N1/3P4/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation, Modern Variation, Ivanchuk Defense",
          fen: "r1bqkbnr/pp2pppp/2p2n2/6N1/3P4/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation, Modern Variation, Kasparov Attack",
          fen: "r1bqkb1r/pp1npppp/2p2n2/8/3P4/5NN1/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation, Smyslov Variation",
          fen: "r1bqkb1r/pp3ppp/1np1pn2/6N1/2BP4/8/PPP1QPPP/R1B1K1NR",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation, Smyslov Variation, Main Line",
          fen: "r1bqkb1r/pp3ppp/1np1pn2/6N1/3P4/1B6/PPP1QPPP/R1B1K1NR",
        },
        {
          name: "Caro-Kann Defense: Karpov Variation, Tiviakov-Fischer Attack",
          fen: "r1bqkb1r/pp2pppp/2p2n2/8/2BP4/8/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Caro-Kann Defense: Classical Variation",
          fen: "rn1qkbnr/pp2pppp/2p5/5b2/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Classical Variation, Flohr Variation",
          fen: "rn1qkbnr/pp2pppp/2p3b1/8/3P4/6NN/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Classical Variation, Main Line",
          fen: "rn1qkbnr/pp2pppp/2p3b1/8/3P3P/6N1/PPP2PP1/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Classical Variation, Mar\xf3czy Attack",
          fen: "rn1qkbnr/pp2pppp/2p3b1/8/3P1P2/6N1/PPP3PP/R1BQKBNR",
        },
        {
          name: "Caro-Kann Defense: Classical Variation",
          fen: "r2qkbnr/pp1nppp1/2p3bp/8/3P3P/5NN1/PPP2PP1/R1BQKB1R",
        },
        {
          name: "Caro-Kann Defense: Classical Variation, Lobron System",
          fen: "r2qk2r/pp1nbpp1/2p1pn1p/7P/3P4/3Q1NN1/PPPB1PP1/2KR3R",
        },
        {
          name: "Caro-Kann Defense: Classical Variation, Seirawan Variation",
          fen: "r2qk2r/pp1n1pp1/2pbpn1p/7P/3P4/3Q1NN1/PPPB1PP1/2KR3R",
        },
        {
          name: "Caro-Kann Defense: Classical Variation, Spassky Variation",
          fen: "r2qkbnr/pp1nppp1/2p3bp/7P/3P4/5NN1/PPP2PP1/R1BQKB1R",
        },
        {
          name: "Sicilian Defense",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Amazon Attack",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P1Q1/8/PPPP1PPP/RNB1KBNR",
        },
        {
          name: "Sicilian Defense: Big Clamp Formation",
          fen: "r1bqkbnr/pp2pppp/2np4/2p5/4PP2/2PP4/PP4PP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Bowdler Attack",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Sicilian Defense: Brick Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/7N/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Euwe Attack, Prins Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/4P3/1P6/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Sicilian Defense: Gloria Variation",
          fen: "r1bqkbnr/pp2ppp1/2np4/2p4p/2P1P3/2N3P1/PP1P1P1P/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Grob Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P1P1/8/PPPP1P1P/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Keres Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPPNPPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: King David's Opening",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPPKPPP/RNBQ1BNR",
        },
        {
          name: "Sicilian Defense: Kronberger Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/N7/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Kronberger Variation, Nemeth Gambit",
          fen: "r1bqkbnr/pp1ppppp/2n5/8/2BpP3/N7/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Sicilian Defense: Lasker-Dunne Attack",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/6P1/PPPP1P1P/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Mengarini Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/P7/1PPP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Myers Attack, with a4",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/P3P3/8/1PPP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Myers Attack, with h4",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P2P/8/PPPP1PP1/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Snyder Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/1P6/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Snyder Variation, Queen Fianchetto Variation",
          fen: "rnbqkbnr/p2ppppp/1p6/2p5/4P3/1P6/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Staunton-Cochrane Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Wing Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/1P2P3/8/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Abrahams Variation",
          fen: "rnbqkbnr/pp1ppppp/8/8/1p2P3/8/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Carlsbad Variation",
          fen: "rnbqkbnr/pp1ppppp/8/8/4P3/p7/2PP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Marienbad Variation",
          fen: "rnb1kbnr/pp2pppp/8/3q4/1p6/P7/1BPP1PPP/RN1QKBNR",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Marshall Variation",
          fen: "rnbqkbnr/pp1ppppp/8/8/1p2P3/P7/2PP1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Nanu Gambit",
          fen: "rnb1kbnr/pp3ppp/4q3/4p3/1pP5/P2B1N2/3P1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Romanian Defense",
          fen: "r1b1kbnr/pp3ppp/2n1q3/4p3/1pP5/P4N2/1B1P1PPP/RN1QKB1R",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Santasiere Variation",
          fen: "rnbqkbnr/pp1ppppp/8/8/1pP1P3/8/P2P1PPP/RNBQKBNR",
        },
        {
          name: "Bird Opening: Dutch Variation, Batavo Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2p5/4pP2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Coles Sicilian Gambit",
          fen: "r1bqkb1r/pp1ppppp/2n2n2/8/2B1P3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Sicilian Defense: Halasz Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/8/3pPP2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: McDonnell Attack",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: McDonnell Attack, Tal Gambit",
          fen: "rnbqkb1r/pp2pppp/5n2/2pP4/5P2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Morphy Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Morphy Gambit, Andreaschek Gambit",
          fen: "rnbqkbnr/pp1p1ppp/8/4p3/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit",
          fen: "rnbqkbnr/pp1ppppp/8/8/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Chicago Defense",
          fen: "rnbqkb1r/1p3ppp/p2ppn2/8/2B1P3/2N2N2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Classical Formation",
          fen: "r1bqkb1r/1p2pppp/p1np1n2/8/2B1P3/2N2N2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Fianchetto Defense",
          fen: "r1bqkbnr/pp1ppp1p/2n3p1/8/4P3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Finegold Defense",
          fen: "rnbqk2r/1p2bppp/p2ppn2/8/2B1P3/2N2N2/PP2QPPP/R1B2RK1",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Kan Formation",
          fen: "rnbqkbnr/1p1p1ppp/p3p3/8/4P3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Larsen Defense",
          fen: "r1b1k1nr/1pqp1ppp/p1nbp3/8/2B1P3/2N2N2/PP2QPPP/R1B2RK1",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Morphy Defense",
          fen: "r1bqk1nr/pp1p1ppp/2n1p3/2b5/2B1P3/2N2N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Morphy Defense Deferred",
          fen: "r1bqk1nr/3p1ppp/p1n1p3/1pb5/4P3/1BN2N2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Paulsen Formation",
          fen: "r1bqkbnr/1p1p1ppp/p1n1p3/8/2B1P3/2N2N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Pin Defense",
          fen: "r1bqk1nr/pp1p1ppp/2n1p3/8/1bB1P3/2N2N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Scheveningen Formation",
          fen: "r1bqkbnr/pp3ppp/2npp3/8/2B1P3/2N2N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Sozin Formation",
          fen: "r1bqkbnr/5ppp/p1npp3/1p6/2B1P3/2N2N2/PP2QPPP/R1B2RK1",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Accepted, Taimanov Formation",
          fen: "rnbqkb1r/1p1pnppp/p3p3/8/2B1P3/2N2N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Declined, Alapin Formation",
          fen: "rnbqkb1r/pp1ppppp/5n2/8/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Declined, Center Formation",
          fen: "rnbqkbnr/pp1p1ppp/8/4p3/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Declined, Dubois Variation",
          fen: "rnbqkbnr/pp1ppppp/8/8/2P1P3/3p4/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Declined, Push Variation",
          fen: "rnbqkbnr/pp1ppppp/8/8/4P3/2Pp4/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Declined, Scandinavian Formation",
          fen: "rnbqkbnr/pp2pppp/8/3p4/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Declined, Wing Formation",
          fen: "rnb1kbnr/pp1ppppp/8/q7/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit, Chicago Defense",
          fen: "2bqkbnr/r4ppp/p1npp3/1p6/4P3/1BN2N2/PP2QPPP/R1B2RK1",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit, Danish Variation",
          fen: "rnbqkbnr/pp1ppppp/8/8/4P3/2p2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Alapin Variation",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/2P5/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Barmen Defense",
          fen: "rnb1kbnr/pp2pppp/8/2pq4/8/2P5/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Barmen Defense, Central Exchange",
          fen: "r3kbnr/pp2pppp/2n5/3q4/3P2b1/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Barmen Defense, Endgame Variation",
          fen: "r3kbnr/pp2pppp/8/8/3n4/2N2P2/PP3P1P/R1B1KB1R",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Barmen Defense, Milner-Barry Attack",
          fen: "r1b1k1nr/pp3ppp/2n5/3qp3/1b1P4/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Barmen Defense, Modern Line",
          fen: "rn2kb1r/pp2pppp/5n2/2pq4/3P2b1/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Smith-Morra Declined",
          fen: "rnbqkb1r/pp1ppppp/8/3nP3/3p4/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Stoltz Attack",
          fen: "r1bqkb1r/pp1ppppp/1nn5/2p1P3/8/1BP2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Stoltz Attack, Ivanchuk Line",
          fen: "r1b1kb1r/ppqppp1p/1nn5/4P1p1/2p5/2P2N2/PPBPQPPP/RNB1K2R",
        },
        {
          name: "Sicilian Defense: Heidenfeld Variation",
          fen: "r1bqkb1r/pp1ppppp/2n5/2pnP3/8/N1P2N2/PP1P1PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/4P3/2N3P1/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Closed, Chameleon Variation",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/2N5/PPPPNPPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Closed, Grob Attack",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/4P1P1/2N5/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Closed, Korchnoi Defense",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/4P3/2N3P1/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Closed, Traditional",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Grand Prix Attack",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/4PP2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Grand Prix Attack, Schofman Variation",
          fen: "r1bqk1nr/pp1p1pbp/2n1p1p1/2p2P2/2B1P3/2N2N2/PPPP2PP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "r1bqkbnr/pp1ppp1p/2n3p1/2p5/4P3/2N3P1/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "r1bqk1nr/pp1pppbp/2n3p1/2p5/4P3/2N3P1/PPPP1PBP/R1BQK1NR",
        },
        {
          name: "Sicilian Defense: Closed, Fianchetto Variation",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/2N3P1/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Closed, Smyslov Variation",
          fen: "r1bqk1nr/pp1p1pbp/4p1p1/2p5/3nP3/3PB1P1/PPP1NPBP/R2QK1NR",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "r1bqk1nr/pp2ppbp/2np2p1/2p5/4P3/2NP2P1/PPP2PBP/R1BQK1NR",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "r1bqk1nr/pp2ppbp/2np2p1/2p5/4PP2/2NP2P1/PPP3BP/R1BQK1NR",
        },
        {
          name: "Sicilian Defense: Closed, Botvinnik Defense, Edge Variation",
          fen: "r1bqk2r/pp2npbp/2np2p1/2p1p3/4PP2/2NP2PN/PPP3BP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Closed, Botvinnik Defense, with Nge2",
          fen: "r1bqk1nr/pp3pbp/2np2p1/2p1p3/4P3/2NP2P1/PPP1NPBP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Closed, Botvinnik Defense, with f4",
          fen: "r1bqk1nr/pp3pbp/2np2p1/2p1p3/4PP2/2NP2P1/PPP3BP/R1BQK1NR",
        },
        {
          name: "Sicilian Defense: Closed",
          fen: "r1bqk1nr/pp2ppbp/2np2p1/2p5/4P3/2NPB1P1/PPP2PBP/R2QK1NR",
        },
        {
          name: "Modern Defense: Pterodactyl Variation",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Pterodactyl Defense: Sicilian, Anhanguera",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PP3/2N1BN2/PPP2PPP/R2QKB1R",
        },
        {
          name: "Pterodactyl Defense: Sicilian, Benoni Gambit",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1pP4/4P3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Pterodactyl Defense: Sicilian, Pteranodon",
          fen: "rnb1k1nr/pp1ppp1p/6p1/q1P5/4P3/2P2N2/P1P2PPP/R1BQKB1R",
        },
        {
          name: "Pterodactyl Defense: Sicilian, Rhamphorhynchus",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1P5/4P3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Pterodactyl Defense: Sicilian, Unpin",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PP3/2N2N2/PPPB1PPP/R2QKB1R",
        },
        {
          name: "Pterodactyl Defense: Western, Pterodactyl",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1p5/3PP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Pterodactyl Defense: Western, Rhamphorhynchus",
          fen: "rnb1k1nr/pp1pppbp/6p1/q1P5/4P3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense",
          fen: "rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Acton Extension",
          fen: "rnbqk1nr/pp1ppp1p/6pb/2p5/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Brussels Gambit",
          fen: "rnbqkbnr/pp1pp1pp/8/2p2p2/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: B\xfccker Variation",
          fen: "rnbqkbnr/pp1pppp1/7p/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Double-Dutch Gambit",
          fen: "rnbqkb1r/pp1pp1pp/7n/2p2P2/8/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Frederico Variation",
          fen: "rnbqkbnr/pp1pp2p/6p1/2p2p2/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Hyperaccelerated Dragon",
          fen: "rnbqkbnr/pp1ppp1p/6p1/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Hyperaccelerated Fianchetto",
          fen: "rnbqkbnr/pp1ppp1p/6p1/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Hyperaccelerated Pterodactyl",
          fen: "rnbqk1nr/pp1pppbp/6p1/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Hyperaccelerated Pterodactyl, Exchange Variation",
          fen: "rnb1k1nr/pp1ppp1p/6p1/2P5/4P3/2q2N2/P1P2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Jalalabad Variation",
          fen: "rnbqkbnr/pp1p1ppp/8/2p1p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Katalimov Variation",
          fen: "rnbqkbnr/p2ppppp/1p6/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Mongoose Variation",
          fen: "rnb1kbnr/pp1ppppp/8/q1p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Polish Gambit",
          fen: "rnbqkbnr/p2ppppp/8/1pp5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Quinteros Variation",
          fen: "rnb1kbnr/ppqppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Aronin System",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/4P3/5N2/PPPPBPPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Kieseritzky System",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/4P3/1P3N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Mar\xf3czy Bind",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Mar\xf3czy Bind, Paulsen Line",
          fen: "rnbqkbnr/1p1p1ppp/p3p3/2p5/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Mar\xf3czy Bind, Robatsch Line",
          fen: "rnbqkbnr/1p2pppp/p2p4/2p5/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Normal System",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Normal System, Cortlever Gambit",
          fen: "rnbqkbnr/1p1ppppp/p7/8/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Normal System, Smith-Morra Line",
          fen: "rnbqkbnr/1p1ppppp/p7/8/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Normal System, Taimanov Line",
          fen: "rnbqkbnr/1p1p1ppp/p7/4p3/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Normal System, Zagorovsky Line",
          fen: "rnbqkbnr/1p1ppppp/p7/8/3QP3/5N2/PPP2PPP/RNB1KB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Quiet System",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/4P3/3P1N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, R\xe9ti System",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/4P3/5NP1/PPPP1P1P/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Venice System",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Venice System, Barcza Line",
          fen: "rnbqkb1r/1p1ppppp/p4n2/2p5/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Venice System, Gambit Line",
          fen: "rnbqkb1r/1p2pppp/p4n2/2pP4/8/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Venice System, Ljubojevic Line",
          fen: "rnbqkbnr/3ppppp/p7/1pp5/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Venice System, Steiner Line",
          fen: "rnbqkbnr/1p2pppp/p2p4/2p5/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Wing Gambit",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/1P2P3/5N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Yerevan System",
          fen: "rnbqkbnr/1p1ppppp/p7/2p5/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Nimzowitsch Variation",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Nimzowitsch Variation, Advance Variation",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p1P3/8/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Nimzowitsch Variation, Closed Variation",
          fen: "rnbqkb1r/pp1ppppp/5n2/2p5/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Nimzowitsch Variation, Exchange Variation",
          fen: "rnbqkb1r/pp1ppppp/8/2p1P3/8/2n2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Nimzowitsch Variation, Main Line",
          fen: "r1bqkb1r/pp1p1ppp/2n5/2ppP3/3P4/5N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Closed, Anti-Sveshnikov Variation, Kharlov-Kramnik Line",
          fen: "r1bqk1nr/pp3ppp/2np4/2p1p1b1/2B1P3/2NP4/PPPN1PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Nyezhmetdinov-Rossolimo Attack",
          fen: "r1bqkbnr/pp1ppppp/2n5/1Bp5/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Nyezhmetdinov-Rossolimo Attack, San Francisco Gambit",
          fen: "r1bqkbnr/pp1ppppp/8/nBp5/1P2P3/5N2/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Old Sicilian",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Portsmouth Gambit",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/1P2P3/5N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Rossolimo Variation, Brooklyn Retreat Defense",
          fen: "rnbqkbnr/pp1ppppp/8/1Bp5/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Nyezhmetdinov-Rossolimo Attack, Fianchetto Variation",
          fen: "r1bqkbnr/pp1ppp1p/2n3p1/1Bp5/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Nyezhmetdinov-Rossolimo Attack, Fianchetto Variation, Gufeld Gambit",
          fen: "r1bqk1nr/pp1p1pbp/2n3p1/1Bp1p3/3PP3/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Sicilian Defense: Nyezhmetdinov-Rossolimo Attack, Fianchetto Variation, Lutikov Gambit",
          fen: "r1bqk2r/pp1pppbp/2n2np1/1Bp5/3PP3/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Sicilian Defense: Nyezhmetdinov-Rossolimo Attack, Fianchetto Variation, Totsky Attack",
          fen: "r1bqk2r/pp1pppbp/2n2np1/1Bp5/Q3P3/2P2N2/PP1P1PPP/RNB2RK1",
        },
        {
          name: "Sicilian Defense: Nyezhmetdinov-Rossolimo Attack, Gurgenidze Variation",
          fen: "r1bqk1nr/pp1p1pbp/2n3p1/1Bp1p3/1P2P3/5N2/P1PP1PPP/RNBQR1K1",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon",
          fen: "r1bqkbnr/pp1ppp1p/2n3p1/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Flohr Variation",
          fen: "r1b1kbnr/ppqppppp/2n5/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Franco-Sicilian Variation",
          fen: "r1bqkbnr/pp1p1ppp/2n1p3/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Godiva Variation",
          fen: "r1b1kbnr/pp1ppppp/1qn5/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Kalashnikov Variation",
          fen: "r1bqkbnr/pp3ppp/2np4/1N2p3/4P3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: L\xf6wenthal Variation",
          fen: "r1bqkbnr/pp1p1ppp/2n5/4p3/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Nimzo-American Variation",
          fen: "r1bqkbnr/pp2pppp/2n5/3p4/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: O'Kelly Variation, Mar\xf3czy Bind, Geller Line",
          fen: "r1bqkbnr/1p1p1ppp/p1n5/4p3/2PNP3/8/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Open",
          fen: "r1bqkbnr/pp1ppppp/2n5/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Open",
          fen: "r1bqkbnr/pp1ppppp/2n5/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Open",
          fen: "r1bqkbnr/pp1ppppp/2n5/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Four Knights Variation, Cobra Variation",
          fen: "r1bqk2r/pp1p1ppp/2n1pn2/1Nb5/4P3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation",
          fen: "r1bqkb1r/pp1p1ppp/2n2n2/4p3/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Bird Variation",
          fen: "r2qkb1r/1p3ppp/p1npbn2/4p1B1/4P3/N1N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Exchange Variation",
          fen: "r1bqkb1r/pp1p1ppp/2N2n2/4p3/4P3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Retreat Variation",
          fen: "r1bqkb1r/pp1p1ppp/2n2n2/4p3/4P3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Schlechter Variation",
          fen: "r1bqkb1r/pp1p1ppp/2n2n2/4p3/4P3/1NN5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Sveshnikov Variation",
          fen: "r1bqkb1r/5ppp/p1np1n2/1p2p1B1/4P3/N1N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Sveshnikov Variation",
          fen: "r1bqkb1r/5p1p/p1np4/1p1Npp2/4P3/N7/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Sveshnikov Variation, Chelyabinsk Variation",
          fen: "r1bqkb1r/5ppp/p1np1n2/1p1Np1B1/4P3/N7/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Sveshnikov Variation, Novosibirsk Variation",
          fen: "r1bqk2r/5pbp/p1np1p2/1p1Np3/4P3/N7/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Lasker-Pelikan Variation, Sveshnikov Variation, Peresypkin's Sacrifice",
          fen: "r1bqkb1r/5p1p/p1np4/1B1Npp2/4P3/N7/PPP2PPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Open",
          fen: "r1bqkb1r/pp1ppppp/2n2n2/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Exchange Variation",
          fen: "r1bqkbnr/pp1ppp1p/2N3p1/8/4P3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Modern Variation",
          fen: "r1bqkbnr/pp1ppp1p/2n3p1/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Modern Bc4 Variation",
          fen: "r1bqk2r/pp1pppbp/2n2np1/8/2BNP3/2N1B3/PPP2PPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Modern Bc4 Variation",
          fen: "r1bqk2r/pp2ppbp/2np1np1/8/2BNP3/2N1B3/PPP2PPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Mar\xf3czy Bind",
          fen: "r1bqkbnr/pp1ppp1p/2n3p1/8/2PNP3/8/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Mar\xf3czy Bind, Gurgenidze Variation",
          fen: "r1bqkb1r/pp2pp1p/3p1np1/8/2PQP3/2N5/PP3PPP/R1B1KB1R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Mar\xf3czy Bind",
          fen: "r1bqk1nr/pp1pppbp/2n3p1/8/2PNP3/8/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Simagin Variation",
          fen: "r1bqk2r/pp2ppbp/2np2pn/8/2P1P3/8/PPN1BPPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Mar\xf3czy Bind",
          fen: "r1bqk1nr/pp1pppbp/2n3p1/8/2PNP3/4B3/PP3PPP/RN1QKB1R",
        },
        {
          name: "Sicilian Defense: Accelerated Dragon, Mar\xf3czy Bind, Breyer Variation",
          fen: "r1bqk2r/pp1pppbp/2n3p1/8/2PNP1n1/2N1B3/PP3PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Alapin Variation, Sherzer Variation",
          fen: "r1bqkb1r/pp1p1ppp/2n1p3/2pnP3/3P4/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Delayed Alapin Variation",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Drazic Variation",
          fen: "rnbqkbnr/1p1p1ppp/p3p3/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Four Knights Variation",
          fen: "r1bqkb1r/pp1p1ppp/2n1pn2/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Four Knights Variation, Exchange Variation",
          fen: "r1bqkb1r/pp1p1ppp/2N1pn2/8/4P3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: French Variation",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: French Variation, Normal",
          fen: "rnbqkb1r/pp1p1ppp/4pn2/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: French Variation, Open",
          fen: "rnbqkbnr/pp1p1ppp/4p3/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: French Variation, Westerinen Attack",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/4P3/1P3N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Gaw-Paw Variation",
          fen: "rnb1kb1r/pp1p1ppp/1q2pn2/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Wing Attack, Fianchetto Variation",
          fen: "rnbqkbnr/3p1ppp/p3p3/1p6/3NP3/2N3P1/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Kramnik Variation",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Kveinis Variation",
          fen: "rnb1kbnr/pp1p1ppp/1q2p3/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Marshall Counterattack",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Paulsen-Basman Defense",
          fen: "rnbqk1nr/pp1p1ppp/4p3/2b5/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Pin Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/8/1b1NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Pin Variation, Jaffe Variation",
          fen: "rnbqk2r/pp1p1ppp/5n2/4p3/1b1NP3/2NB4/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Pin Variation, Koch Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/4P3/1b1N4/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Smith-Morra Gambit Deferred",
          fen: "rnbqkbnr/pp1p1ppp/4p3/8/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Wing Gambit Deferred",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/1P2P3/5N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Kan Variation",
          fen: "rnbqkbnr/1p1p1ppp/p3p3/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Mar\xf3czy Bind, Bronstein Variation",
          fen: "r1bqk2r/1p1p1ppp/p1n1pn2/8/1bPNP3/2NB4/PP3PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Mar\xf3czy Bind, Bronstein Variation",
          fen: "r1bqk2r/1p1p1ppp/p1n1pn2/8/1bPNP3/2N5/PPB2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Mar\xf3czy Bind, Hedgehog Variation",
          fen: "rnbqkbnr/1p1p1p1p/p3p1p1/8/2PNP3/8/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Mar\xf3czy Bind, R\xe9ti Variation",
          fen: "rnbqkbnr/1p1p1ppp/p3p3/8/2PNP3/8/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Gipslis Variation",
          fen: "rnbqkb1r/1p3p1p/p2ppnp1/8/2PNP3/3B4/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Sicilian Defense: Kan Variation, Modern Variation",
          fen: "rnbqkbnr/1p1p1ppp/p3p3/8/3NP3/3B4/PPP2PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Polugaevsky Variation",
          fen: "rnbqk1nr/1p1p1ppp/p3p3/2b5/3NP3/3B4/PPP2PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Swiss Cheese Variation",
          fen: "rnbqkbnr/1p1p1p1p/p3p1p1/8/3NP3/3B4/PPP2PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Knight Variation",
          fen: "rnbqkbnr/1p1p1ppp/p3p3/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Wing Attack",
          fen: "rnbqkbnr/3p1ppp/p3p3/1p6/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Wing Attack, Christiansen's Dream",
          fen: "rnb1k1nr/3p1ppp/pq2p3/1pb5/3NP1Q1/2NBB3/PPP2PPP/R3K2R",
        },
        {
          name: "Sicilian Defense: Kan Variation, Wing Attack, Spraggett Attack",
          fen: "rnb1kbnr/3p1ppp/pq2p3/1p6/4P3/2NB1N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation",
          fen: "r1bqkbnr/pp1p1ppp/2n1p3/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Gary Gambit",
          fen: "r1bqkb1r/1p3ppp/p1n1pn2/3p4/2P1P3/N1N5/PP3PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Modern Line",
          fen: "r1bq1rk1/4bppp/ppnppn2/8/2P1P3/N1N5/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Sz\xe9n Variation",
          fen: "r1bqkbnr/pp1p1ppp/2n1p3/1N6/4P3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, American Attack",
          fen: "r1bqk2r/pp1p1ppp/2nNpn2/8/1b2P3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Normal Variation",
          fen: "r1bqkbnr/pp1p1ppp/2n1p3/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation",
          fen: "r1bqkbnr/1p1p1ppp/p1n1p3/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Bastrikov Variation",
          fen: "r1b1kbnr/ppqp1ppp/2n1p3/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Bastrikov Variation, Ponomariov Gambit",
          fen: "rqb1kbnr/1p1p1ppp/pBn1p3/1N6/4P3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Bastrikov Variation, English Attack",
          fen: "r1b1kbnr/ppqp1ppp/2n1p3/8/3NP3/2N1B3/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Taimanov Variation, Bastrikov Variation",
          fen: "r1b1kbnr/1pqp1ppp/p1n1p3/8/3NP3/2N1B3/PPP1BPPP/R2QK2R",
        },
        {
          name: "Sicilian Defense",
          fen: "rnbqkbnr/pp2pppp/3p4/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense",
          fen: "rnbqkbnr/pp2pppp/3p4/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Delayed Alapin",
          fen: "rnbqkbnr/pp2pppp/3p4/2p5/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Delayed Alapin, Basman-Palatnik Double Gambit",
          fen: "r1b1kb1r/pp2pppp/2np4/q2P4/8/2P2N2/P3BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Delayed Alapin, Basman-Palatnik Gambit",
          fen: "r1bqkb1r/pp2pppp/2np4/8/3Pn3/5N2/PP2BPPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Kopec System",
          fen: "rnbqkbnr/pp2pppp/3p4/2p5/4P3/3B1N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Kotov Gambit",
          fen: "rnbqkbnr/p3pppp/3p4/1pp5/4P3/5NP1/PPPP1P1P/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Modern Variations",
          fen: "rnbqkbnr/pp2pppp/3p4/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Modern Variations, Anti-Qxd4 Move Order",
          fen: "rnbqkb1r/pp2pppp/3p1n2/2p5/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Modern Variations, Anti-Qxd4 Move Order Accepted",
          fen: "rnbqkb1r/pp2pppp/3p4/2P5/4n3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Modern Variations, Tartakower",
          fen: "rnbqkbnr/pp2pppp/3p4/8/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Wing Gambit, Deferred Variation",
          fen: "rnbqkbnr/pp2pppp/3p4/2p5/1P2P3/5N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Moscow Variation",
          fen: "rnbqkbnr/pp2pppp/3p4/1Bp5/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Moscow Variation, Dorfman Gambit",
          fen: "r2qkbnr/pp1bpp1p/2np2p1/1Bp1P3/8/5N2/PPPPQPPP/RNB2RK1",
        },
        {
          name: "Sicilian Defense: Moscow Variation, Moscow Gambit",
          fen: "r2qkb1r/1p2pppp/p2p1n2/2p3B1/3Pb3/2P2N2/PP3PPP/RN1QR1K1",
        },
        {
          name: "Sicilian Defense: Moscow Variation, Haag Gambit",
          fen: "r3kb1r/pp1qpppp/2np1n2/2p5/3PP3/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Sicilian Defense: Moscow Variation, Main Line",
          fen: "rn1qkbnr/pp1bpppp/3p4/1Bp5/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Moscow Variation, Sokolsky Variation",
          fen: "rn2kbnr/pp1qpppp/3p4/2p5/2P1P3/5N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Chekhover Variation",
          fen: "rnbqkbnr/pp2pppp/3p4/8/3QP3/5N2/PPP2PPP/RNB1KB1R",
        },
        {
          name: "Sicilian Defense: Chekhover Variation, Zaitsev Defense",
          fen: "r1b1kbnr/pp1qpppp/2np4/1B6/3QP3/5N2/PPP2PPP/RNB1K2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Accelerated Dragon",
          fen: "rnbqkbnr/pp2pp1p/3p2p1/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Modern Variations, Ginsberg Gambit",
          fen: "rnbqkb1r/pp2pppp/3p1n2/8/2BNP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Modern Variations, Main Line",
          fen: "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Prins Variation",
          fen: "rnbqkb1r/pp2pppp/3p1n2/8/3NP3/5P2/PPP3PP/RNBQKB1R",
        },
        {
          name: "Sicilian Defense: Prins Variation, Venice Attack",
          fen: "rnbqkb1r/pp3ppp/3p1n2/1B2p3/3NP3/5P2/PPP3PP/RNBQK2R",
        },
        {
          name: "Sicilian Defense: Classical Variation",
          fen: "r1bqkb1r/pp2pppp/2np1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Classical Variation, Fianchetto Variation",
          fen: "r1bqkb1r/pp2pppp/2np1n2/8/3NP3/2N3P1/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Kupreichik Variation",
          fen: "rn1qkb1r/pp1bpppp/3p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Spielmann Variation",
          fen: "r1bqkb1r/pp2pppp/2np1n2/8/4P3/2N5/PPP1NPPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Venice Attack",
          fen: "rnbqkb1r/pp3ppp/3p1n2/1B2p3/3NP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Yates Variation",
          fen: "r1bqkb1r/pp2pppp/2np1n2/8/3NP3/2NB4/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Classical Variation, Anti-Sozin Variation",
          fen: "r1b1kb1r/pp2pppp/1qnp1n2/8/2BNP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Classical Variation, Sozin Attack",
          fen: "r1bqkb1r/pp2pppp/2np1n2/8/2BNP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Magnus Smith Trap",
          fen: "r1bqkb1r/p3pp1p/2pp1np1/4P3/2B5/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Boleslavsky Variation",
          fen: "r1bqkb1r/pp3ppp/2np1n2/4p3/3NP3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Boleslavsky Variation, Louma Variation",
          fen: "r1bqkb1r/pp3ppp/2Np1n2/4p3/4P3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Classical Variation",
          fen: "r1bqkb1r/pp2pppp/2np1n2/8/3NP3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Classical Variation, Dragon Transfer",
          fen: "r1bqkb1r/pp2pp1p/3p1np1/8/3QP3/2N5/PPP1BPPP/R1B1K2R",
        },
        {
          name: "Sicilian Defense: Boleslavsky Variation",
          fen: "r1bqkb1r/pp3ppp/2np1n2/4p3/4P3/1NN5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation",
          fen: "r1bqkb1r/pp2pppp/2np1n2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Dragon Variation",
          fen: "r1bqkb1r/pp2pp1p/2np1np1/6B1/3NP3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Modern Variation",
          fen: "r2qkb1r/pp1bpppp/2np1n2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Modern Variation",
          fen: "r2qkb1r/pp1bpppp/2np1n2/6B1/3NP3/2N5/PPPQ1PPP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation",
          fen: "r1bqkb1r/pp3ppp/2nppn2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation",
          fen: "r1bqkb1r/pp3ppp/2nppn2/6B1/3NP3/2NQ4/PPP2PPP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Exchange Variation",
          fen: "r1bqkb1r/pp3ppp/2Nppn2/6B1/4P3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Podebrady Variation",
          fen: "r1bqkb1r/pp3ppp/2nppn2/6B1/4P3/1NN5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Vitolins Variation",
          fen: "r1bqkb1r/pp3ppp/2nppn2/1B4B1/3NP3/2N5/PPP2PPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Classical Variation",
          fen: "r1bqk2r/pp2bppp/2nppn2/6B1/3NP3/2N5/PPPQ1PPP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Classical Variation, Kantscher Line",
          fen: "r1bqk2r/4bppp/p2ppn2/1p4B1/3QPP2/2N5/PPP3PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Ivanov Variation",
          fen: "r1b1kb1r/pp3ppp/1qnppn2/6B1/3NP3/2N5/PPPQ1PPP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Traditional Variation",
          fen: "r1bqkb1r/pp3ppp/2nppn2/6B1/3NP3/2N5/PPPQ1PPP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Classical Variation",
          fen: "r1bq1rk1/pp2bppp/2np1n2/4p1B1/3NPP2/2N5/PPPQ2PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Classical Variation",
          fen: "r1bq1rk1/pp2bppp/2nppn2/6B1/3NPP2/2N5/PPPQ2PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Classical Variation",
          fen: "r1bq1rk1/pp2bppp/3ppn2/6B1/3QPP2/2N5/PPP3PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Rauzer Attack",
          fen: "r1bq1rk1/pp2bppp/3ppn2/6B1/3nPP2/2N5/PPPQ2PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Neo-Modern Variation, Early Deviations",
          fen: "r1bqkb1r/1p3ppp/p1nppn2/6B1/3NP3/2N5/PPPQ1PPP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Neo-Modern Variation",
          fen: "r2qkb1r/1p1b1ppp/p1nppn2/6B1/3NP3/2N5/PPPQ1PPP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Neo-Modern Variation",
          fen: "r2qk2r/1p1bbppp/p1nppn2/6B1/3NPP2/2N5/PPPQ2PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Richter-Rauzer Variation, Neo-Modern Variation, Nyezhmetdinov Attack",
          fen: "r2qk2r/3bbppp/p1nppB2/1p6/4PP2/2N2N2/PPPQ2PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation",
          fen: "rnbqkb1r/pp2pp1p/3p1np1/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation",
          fen: "rnbqkb1r/pp2pp1p/3p1np1/8/3NP3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Fianchetto Variation",
          fen: "rnbqkb1r/pp2pp1p/3p1np1/8/3NP3/2N3P1/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Levenfish Variation",
          fen: "rnbqkb1r/pp2pp1p/3p1np1/8/3NPP2/2N5/PPP3PP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Levenfish Variation, Main Line",
          fen: "r1bqkb1r/pp1npp1p/3p1np1/8/3NPP2/2N5/PPP3PP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation",
          fen: "rnbqkb1r/pp2pp1p/3p1np1/8/3NP3/2N1B3/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation",
          fen: "rnbqk2r/pp2ppbp/3p1np1/8/3NP3/2N1B3/PPP1BPPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation",
          fen: "r1bqk2r/pp2ppbp/2np1np1/8/3NP3/2N1B3/PPP1BPPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation",
          fen: "r1bqk2r/pp2ppbp/2np1np1/8/4P3/1NN1B3/PPP1BPPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Amsterdam Variation",
          fen: "r1bqk2r/pp2ppbp/2np1np1/8/3NP3/2N1B3/PPPQBPPP/R3K2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Grigoriev Variation",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/3NP3/2N1B3/PPPQBPPP/2KR3R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation",
          fen: "r1bqk2r/pp2ppbp/2np1np1/8/3NP3/2N1B3/PPP1BPPP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Battery Variation",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/3NP3/2N1B3/PPPQBPPP/R4RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Zollner Gambit",
          fen: "r1b2rk1/pp2ppbp/1qnp1np1/4P3/3N1P2/2N1B3/PPP1B1PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Alekhine Line",
          fen: "r1bq1rk1/1p2ppbp/2np1np1/p7/4P3/1NN1B3/PPP1BPPP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Bernard Defense",
          fen: "r2q1rk1/pp2ppbp/5np1/n2p1P2/4P3/1NNPB3/PP4PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Mar\xf3czy Line",
          fen: "r2q1rk1/pp2ppbp/3pbnp1/n7/4PP2/1NN1B3/PPP1B1PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Normal Line",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/4P3/1NN1B3/PPP1BPPP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Spielmann Variation",
          fen: "r2q1rk1/pp2ppbp/3p1np1/n4P2/2b1P3/1NNBB3/PPP3PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Stockholm Attack",
          fen: "r4rk1/pp2ppbp/3p1np1/q4P2/4P1P1/2N1B3/PPP1Q2P/R4RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Classical Variation, Tartakower Line",
          fen: "r1q2rk1/pp2ppbp/2npbnp1/8/4PP2/1NN1B3/PPP1B1PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Belezky Line",
          fen: "r1bqk2r/pp2ppbp/2np1np1/8/3NP3/2N1BP2/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Early Deviations",
          fen: "rnbqk2r/pp2ppbp/3p1np1/8/3NP3/2N1BP2/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/8/3NP3/2N1BP2/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/3NP3/2N1BP2/PPPQ2PP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Modern Line",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/3NP3/2N1BP2/PPPQ2PP/2KR1B1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Panov Variation",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/3NP1P1/2N1BP2/PPPQ3P/R3KB1R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack",
          fen: "r2q1rk1/pp1bppbp/2np1np1/8/2BNP3/2N1BP2/PPPQ2PP/R3K2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Byrne Variation",
          fen: "r1bq1rk1/1p2ppbp/2np1np1/p7/2BNP3/2N1BP2/PPPQ2PP/R3K2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Czerniak Variation",
          fen: "r2q1rk1/pp2ppbp/3pbnp1/8/2BBP3/2N2P2/PPPQ2PP/R3K2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Main Line",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/2BNP3/2N1BP2/PPPQ2PP/R3K2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Sosonko Variation",
          fen: "r1bq1rk1/pp1nppbp/2np2p1/8/2BNP3/2N1BP2/PPPQ2PP/R3K2R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack",
          fen: "r2q1rk1/pp1bppbp/2np1np1/8/2BNP3/2N1BP2/PPPQ2PP/2KR3R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Old Line",
          fen: "2rq1rk1/pp1bppbp/2np1np1/8/2BNP3/2N1BP2/PPPQ2PP/2KR3R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack",
          fen: "r1r3k1/pp1bppbp/2np1np1/q7/3NP2P/1BN1BP2/PPPQ2P1/2KR3R",
        },
        {
          name: "Sicilian Defense: Dragon Variation, Yugoslav Attack, Soltis Variation",
          fen: "r1r3k1/pp1bppb1/2np1np1/q6p/3NP2P/1BN1BP2/PPPQ2P1/2KR3R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation",
          fen: "rnbqkb1r/pp3ppp/3ppn2/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, English Attack, with Qd2",
          fen: "rnbqkb1r/1p3ppp/p2ppn2/8/3NP3/2N1B3/PPPQ1PPP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Fianchetto Variation",
          fen: "rnbqkb1r/pp3ppp/3ppn2/8/3NP3/2N3P1/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Vitolins Variation",
          fen: "rnbqkb1r/pp3ppp/3ppn2/1B6/3NP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Keres Attack",
          fen: "rnbqkb1r/pp3ppp/3ppn2/8/3NP1P1/2N5/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Matanovic Attack",
          fen: "rnbqkb1r/pp3ppp/3ppn2/8/3NPP2/2N5/PPP3PP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Tal Variation",
          fen: "r1bqk2r/pp2bppp/2nppn2/8/3NPP2/2N1BQ2/PPP3PP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Classical Variation",
          fen: "rnbqkb1r/pp3ppp/3ppn2/8/3NP3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Modern Variation",
          fen: "r1bqkb1r/pp3ppp/2nppn2/8/3NP3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Modern Variation",
          fen: "r1bq1rk1/pp2bppp/2nppn2/8/3NPP2/2N1B3/PPP1B1PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Modern Variation",
          fen: "r2q1rk1/pp1bbppp/2nppn2/8/4PP2/1NN1B3/PPP1B1PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Scheveningen Variation",
          fen: "r1bqkb1r/1p1n1ppp/p2ppn2/8/3NP3/2N5/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Classical Variation",
          fen: "rnbqkb1r/1p3ppp/p2ppn2/8/3NP3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Classical Variation",
          fen: "rnb1kb1r/1pq2ppp/p2ppn2/8/3NP3/2N5/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Classical Main Line",
          fen: "r1b2rk1/1pq1bppp/p1nppn2/8/3NPP2/2N1B3/PPP1B1PP/R3QRK1",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Classical Variation, Paulsen Variation",
          fen: "r1b1kb1r/1pq2ppp/p1nppn2/8/3NPP2/2N5/PPP1B1PP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Classical Variation, Paulsen Variation",
          fen: "r1b1kb1r/1pq2ppp/p1nppn2/8/3NPP2/2N1B3/PPP1B1PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Classical Variation, Paulsen Variation",
          fen: "r1b1k2r/1pq1bppp/p1nppn2/8/P2NPP2/2N5/1PP1B1PP/R1BQ1R1K",
        },
        {
          name: "Sicilian Defense: Sozin Attack",
          fen: "rnbqkb1r/pp3ppp/3ppn2/8/2BNP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Sozin Attack, Flank Variation",
          fen: "rnbqkb1r/5ppp/p2ppn2/1p6/3NP3/1BN5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Sozin Attack, Fischer Variation",
          fen: "r1bq1rk1/pp2bppp/2nppn2/8/3NPP2/1BN1B3/PPP3PP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Sozin Attack, Leonhardt Variation",
          fen: "r1bqkb1r/pp3ppp/2nppn2/8/2BNP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Sozin Attack, Main Line",
          fen: "r1bqkb1r/pp3ppp/2nppn2/8/2BNP3/2N1B3/PPP2PPP/R2QK2R",
        },
        {
          name: "Sicilian Defense: Sozin Attack, Main Line, Sherbakov Variation",
          fen: "r1bq1rk1/p3bppp/1p1ppn2/n7/3NPP2/1BN1B3/PPP3PP/R2Q1RK1",
        },
        {
          name: "Sicilian Defense: Velimirovic Attack",
          fen: "r1bqk2r/pp2bppp/2nppn2/8/2BNP3/2N1B3/PPP1QPPP/R3K2R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Adams Attack",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N4P/PPP2PP1/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Dekker Gambit",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NP1P1/2N5/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, English Attack",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N1B3/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, English Attack, Anti-English",
          fen: "rnbqkb1r/1p2pppp/p2p4/8/3NP1n1/2N1B3/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Freak Attack",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N5/PPP2PPP/R1BQKBR1",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Lipnitsky Attack",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/2BNP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Delayed Keres Attack",
          fen: "rnbqkb1r/1p3ppp/p2ppn2/8/3NP1P1/2N1B3/PPP2P1P/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, Delayed Keres Attack, Perenyi Gambit",
          fen: "rnbqkb1r/1p3p1p/p2p1np1/4pNP1/4P3/2N1B3/PPP2P1P/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Scheveningen Variation, English Attack, with f3",
          fen: "rnbqkb1r/1p3ppp/p2ppn2/8/3NP3/2N1BP2/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Zagreb Variation",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N3P1/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Opocensky Variation",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NP3/2N5/PPP1BPPP/R1BQK2R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Opocensky Variation, Modern Line",
          fen: "rn1qk2r/1p2bppp/p2pbn2/4p3/4P3/1NN5/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Opocensky Variation, Traditional Line",
          fen: "rnbq1rk1/1p2bppp/p2p1n2/4p3/4P3/1NN5/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Amsterdam Variation",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/8/3NPP2/2N5/PPP3PP/R1BQKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation",
          fen: "rnbqkb1r/1p2pppp/p2p1n2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Ivkov Variation",
          fen: "r3kb1r/1b3ppp/p2ppn2/qpn1P1B1/3N4/1BN5/PPPQ1PPP/2KRR3",
        },
        {
          name: "Sicilian Defense: Najdorf Variation",
          fen: "rnbqkb1r/1p3ppp/p2ppn2/6B1/3NP3/2N5/PPP2PPP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation",
          fen: "rnbqkb1r/1p3ppp/p2ppn2/6B1/3NPP2/2N5/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Neo-Classical Defense",
          fen: "r1bqkb1r/1p3ppp/p1nppn2/6B1/3NPP2/2N5/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Polugaevsky Variation",
          fen: "rnbqkb1r/5ppp/p2ppn2/1p4B1/3NPP2/2N5/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Polugaevsky Variation, Simagin Line",
          fen: "rnb1kb1r/2q2ppp/p3pn2/1p2P1B1/3N4/2N5/PPP1Q1PP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Poisoned Pawn Accepted",
          fen: "rnb1kb1r/1p3ppp/p2ppn2/6B1/3NPP2/q1N5/P1PQ2PP/1R2KB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Poisoned Pawn Variation",
          fen: "rnb1kb1r/1p3ppp/pq1ppn2/6B1/3NPP2/2N5/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation",
          fen: "rnbqk2r/1p2bppp/p2ppn2/6B1/3NPP2/2N5/PPP3PP/R2QKB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Browne Variation",
          fen: "rnb1k2r/1pq1bpp1/p2ppn1p/8/3NPP1B/2N2Q2/PPP3PP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Goteborg Variation",
          fen: "rnbqk2r/1p2bp2/p2ppn1p/6p1/3NPP1B/2N2Q2/PPP3PP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Traditional Line",
          fen: "rnb1k2r/1pq1bppp/p2ppn2/6B1/3NPP2/2N2Q2/PPP3PP/R3KB1R",
        },
        {
          name: "Sicilian Defense: Najdorf Variation, Main Line",
          fen: "r1b1k2r/1pqnbppp/p2ppn2/6B1/3NPP2/2N2Q2/PPP3PP/2KR1B1R",
        },
        {
          name: "French Defense",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "French Defense",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Alapin Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/4B3/PPP2PPP/RN1QKBNR",
        },
        {
          name: "French Defense: Baeuerle Gambit",
          fen: "rnbqkbnr/p1pp1ppp/4p3/1p6/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Banzai-Leong Gambit",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/1P2P3/8/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Banzai-Leong Gambit, Pinova Gambit",
          fen: "rnbqk1nr/pppp1ppp/4p3/4P3/1b6/8/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Bird Invitation",
          fen: "rnbqkbnr/pppp1ppp/4p3/1B6/4P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "French Defense: Carlson Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/4N3/3Pp3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Chigorin Variation",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4P3/8/PPPPQPPP/RNB1KBNR",
        },
        {
          name: "French Defense: Diemer-Duhm Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Diemer-Duhm Gambit Accepted",
          fen: "rnbqkbnr/ppp2ppp/4p3/8/2PPp3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Franco-Hiva Gambit",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Franco-Hiva Gambit Accepted",
          fen: "rnbqkbnr/pppp2pp/4p3/5P2/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Franco-Sicilian Defense",
          fen: "rnbqkbnr/pp1p1ppp/4p3/2p5/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Hoffmann Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/3PPp2/8/PPP1Q1PP/RNB1KBNR",
        },
        {
          name: "French Defense: Horwitz Attack",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4P3/1P6/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Horwitz Attack, Papa-Ticulat Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/4P3/1P6/PBPP1PPP/RN1QKBNR",
        },
        {
          name: "French Defense: King's Indian Attack",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4P3/3P4/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: King's Indian Attack, Franco-Hiva Gambit",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/4P3/3P4/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Knight Variation",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Knight Variation, Franco-Hiva Gambit",
          fen: "rnbqkbnr/pppp2pp/4p3/5p2/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "French Defense: La Bourdonnais Variation",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "French Defense: La Bourdonnais Variation, Reuter Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/8/4pP2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "French Defense: Mediterranean Defense",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Morphy Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/7N/PPP2PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Normal Variation",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Orthoschnapp Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/4P3/1Q6/PP1P1PPP/RNB1KBNR",
        },
        {
          name: "French Defense: Pelikan Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/4PP2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "French Defense: Perseus Gambit",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Queen's Knight",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Reversed Philidor Formation",
          fen: "r1bqkb1r/ppp2ppp/2n1pn2/3p4/4P3/3P1N2/PPPNBPPP/R1BQK2R",
        },
        {
          name: "French Defense: R\xe9ti-Spielmann Attack",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/4P3/6P1/PPPP1P1P/RNBQKBNR",
        },
        {
          name: "French Defense: Schlechter Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/3B4/PPP2PPP/RNBQK1NR",
        },
        {
          name: "French Defense: St. George Defense",
          fen: "rnbqkbnr/1ppp1ppp/p3p3/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: St. George Defense, Sanky-George Gambit",
          fen: "rnbqkbnr/2pp1ppp/p3p3/1p6/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: St. George Defense, St. George Gambit",
          fen: "rnbqkbnr/2pp1ppp/4p3/1p6/3PP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: St. George Defense, Three Pawn Attack",
          fen: "rnbqkbnr/1ppp1ppp/p3p3/8/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: St. George Defense, Traditional Line",
          fen: "rn1qkb1r/1b1p1ppp/p3pn2/1pp5/3PP3/2PB1N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "French Defense: Steiner Variation",
          fen: "rnbqkbnr/pppp1ppp/4p3/8/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Steinitz Attack",
          fen: "rnbqkbnr/pppp1ppp/4p3/4P3/8/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Two Knights Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Wing Gambit",
          fen: "rnbqkbnr/pp3ppp/4p3/2ppP3/1P6/5N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Rat Defense: Small Center Defense",
          fen: "rnbqkbnr/ppp2ppp/3pp3/8/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Exchange Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3P4/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Exchange Variation, Bogoljubov Variation",
          fen: "r1bqkb1r/ppp2ppp/2n2n2/3p2B1/3P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Exchange Variation, Monte Carlo Variation",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/2PP4/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Exchange Variation, Svenonius Variation",
          fen: "rnbqkb1r/ppp2ppp/5n2/3p2B1/3P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Advance Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3pP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Advance Variation",
          fen: "rnbqkbnr/pp3ppp/4p3/2ppP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Advance Variation",
          fen: "rnbqkbnr/pp3ppp/4p3/2ppP3/3P4/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Advance Variation",
          fen: "r1bqkbnr/pp3ppp/2n1p3/2ppP3/3P4/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Advance Variation, Euwe Variation",
          fen: "r2qkbnr/pp1b1ppp/2n1p3/2ppP3/3P4/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Advance Variation, Extended Bishop Swap",
          fen: "rn1qkbnr/pppb1ppp/4p3/3pP3/3P4/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Advance Variation, Frenkel Gambit",
          fen: "rnbqkbnr/pp3ppp/4p3/2ppP3/1P1P4/8/P1P2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Advance Variation, Lputian Variation",
          fen: "r1b1kb1r/pp3ppp/1qn1p2n/2ppP3/3P4/P1P2N2/1P3PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Advance Variation, Main Line",
          fen: "r1b1kbnr/pp3ppp/1qn1p3/2ppP3/3P4/P1P2N2/1P3PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Advance Variation, Milner-Barry Gambit",
          fen: "r1b1kbnr/pp3ppp/1qn1p3/2ppP3/3P4/2PB1N2/PP3PPP/RNBQK2R",
        },
        {
          name: "French Defense: Advance Variation, Nimzowitsch Attack",
          fen: "rnbqkbnr/pp3ppp/4p3/2ppP3/3P2Q1/8/PPP2PPP/RNB1KBNR",
        },
        {
          name: "French Defense: Advance Variation, Nimzowitsch Gambit",
          fen: "rnbqkbnr/pp3ppp/4p3/3pP3/3p2Q1/5N2/PPP2PPP/RNB1KB1R",
        },
        {
          name: "French Defense: Advance Variation, Nimzowitsch System",
          fen: "rnbqkbnr/pp3ppp/4p3/2ppP3/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Advance Variation, Paulsen Attack",
          fen: "r1bqkbnr/pp3ppp/2n1p3/2ppP3/3P4/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Advance Variation, Ruisdonk Gambit",
          fen: "rnbqkbnr/pp3ppp/4p3/3pP3/3p4/3B1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "French Defense: Advance Variation, Steinitz Variation",
          fen: "rnbqkbnr/pp3ppp/4p3/2PpP3/8/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "French Defense: Advance Variation, Wade Variation",
          fen: "rn2kbnr/pp1b1ppp/1q2p3/2ppP3/3P4/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "French Defense: Guimard Variation, Thunderbunny Variation",
          fen: "r1bqkbnr/ppp2ppp/2n5/4p3/3PN3/2P5/PP3PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Guimard Defense",
          fen: "r1bqkbnr/ppp2ppp/2n1p3/3p4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Haberditz Variation",
          fen: "rnbqkbnr/ppp3pp/4p3/3p1p2/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Modern System",
          fen: "rnbqkbnr/1pp2ppp/p3p3/3p4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Morozevich Variation",
          fen: "rnbqk1nr/ppp1bppp/4p3/3p4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Guimard Defense, Main Line",
          fen: "r1bqkb1r/ppp2ppp/2n1pn2/3p4/3PP3/5N2/PPPN1PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Tarrasch Variation, Botvinnik Variation",
          fen: "rnbqkb1r/p2n1ppp/1p2p3/2ppP3/3P4/2PB4/PP1N1PPP/R1BQK1NR",
        },
        {
          name: "French Defense: Tarrasch Variation, Closed Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Closed Variation",
          fen: "r1bqkb1r/pp1n1ppp/2n1p3/2ppP3/3P4/2PB4/PP1N1PPP/R1BQK1NR",
        },
        {
          name: "French Defense: Tarrasch Variation, Pawn Center Variation",
          fen: "rnbqkb1r/pppn1ppp/4p3/3pP3/3P1P2/8/PPPN2PP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Closed Variation, Main Line",
          fen: "r1bqkb1r/pp1n1ppp/2n1p3/3pP3/3P4/3B4/PP1NNPPP/R1BQK2R",
        },
        {
          name: "French Defense: Tarrasch Variation, Leningrad Variation",
          fen: "r1bqkb1r/pp3ppp/1nn1p3/3pP3/3P4/3B4/PP1NNPPP/R1BQK2R",
        },
        {
          name: "French Defense: Tarrasch Variation, Chistyakov Defense",
          fen: "rnb1kbnr/pp3ppp/4p3/2pq4/3P4/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Chistyakov Defense, Modern Line",
          fen: "r1b1kb1r/1p3ppp/p2qpn2/8/2BN4/8/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "French Defense: Tarrasch Variation, Eliskases Variation",
          fen: "rnbqkbnr/pp3ppp/4p3/8/2Bp4/5N2/PPPN1PPP/R1BQK2R",
        },
        {
          name: "French Defense: Tarrasch Variation, Open System",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/3PP3/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Open System, Euwe-Keres Line",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/3PP3/5N2/PPPN1PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Tarrasch Variation, Open System, Shaposhnikov Gambit",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pP4/3P4/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Open System, S\xfcchting Line",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/3PP3/2P5/PP1N1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Open System",
          fen: "rnbqkbnr/pp3ppp/8/2pp4/3P4/8/PPPN1PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Tarrasch Variation, Open System, Advance Line",
          fen: "rnbqkbnr/pp3ppp/8/3p4/2pP4/5N2/PPPN1PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Tarrasch Variation, Open System, Main Line",
          fen: "r1bqkbnr/pp3ppp/2n5/2pp4/3P4/5N2/PPPN1PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Classical Variation, Svenonius Variation",
          fen: "r1bqkbnr/ppp2ppp/2n1p3/3P4/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Paulsen Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Rubinstein Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/8/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Rubinstein Variation, Blackburne Defense",
          fen: "r1bqkbnr/pppn1ppp/4p3/8/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Rubinstein Variation, Capablanca Line",
          fen: "r1bqkb1r/ppp2ppp/4pn2/4N3/3P4/8/PPP2PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Rubinstein Variation, Ellis Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Rubinstein Variation, Fort Knox Variation",
          fen: "rn1qkbnr/ppp2ppp/2b1p3/8/3PN3/5N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Rubinstein Variation, Kasparov Attack",
          fen: "r1bqkb1r/ppp2ppp/4pn2/8/3P4/2P2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Rubinstein Variation, Maric Variation",
          fen: "rnb1kbnr/ppp2ppp/4p3/3q4/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Sicilian Defense: Marshall Gambit",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Burn Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p2B1/3PP3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Classical Variation, Burn Variation, Main Line",
          fen: "rnbq1rk1/ppp2ppp/4pb2/8/3PN3/5N2/PPP2PPP/R2QKB1R",
        },
        {
          name: "French Defense: Classical Variation, Burn Variation, Morozevich Line",
          fen: "rnbqk2r/ppp1bp1p/4pp2/8/3PN3/8/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Delayed Exchange Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3P4/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Classical Variation, Steinitz Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3pP3/3P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Classical Variation, Swiss Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/3PP3/2NB4/PPP2PPP/R1BQK1NR",
        },
        {
          name: "French Defense: Henneberger Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/3PP3/2N1B3/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Steinitz Variation",
          fen: "r1bqkb1r/pp1n1ppp/2n1p3/2PpP3/5P2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "French Defense: Steinitz Variation",
          fen: "rnbqkb1r/pp1n1ppp/4p3/2ppP3/3P1P2/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "French Defense: Steinitz Variation, Boleslavsky Variation",
          fen: "r1bqkb1r/pp1n1ppp/2n1p3/2ppP3/3P1P2/2N1BN2/PPP3PP/R2QKB1R",
        },
        {
          name: "French Defense: Steinitz Variation, Bradford Attack Variation",
          fen: "rnbqk2r/pp1n1ppp/4p3/2bpP3/5PQ1/2N5/PPP3PP/R1B1KBNR",
        },
        {
          name: "French Defense: Steinitz Variation, Brodsky-Jones Variation",
          fen: "r1bq1rk1/pp1n2pp/2n1pp2/2bpP3/5PQ1/P1N2N2/1PP3PP/R1B1KB1R",
        },
        {
          name: "French Defense: Steinitz Variation, Gledhill Attack",
          fen: "rnbqkb1r/pppn1ppp/4p3/3pP3/3P2Q1/2N5/PPP2PPP/R1B1KBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/3p2B1/1b1PP3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Advance Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/3pP1B1/1b1P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Bernstein Variation",
          fen: "rnbqk2r/ppp2pp1/4pn1p/3pP3/1b1P3B/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Bogoljubov Variation",
          fen: "rnb1k2r/ppp2p1p/4pp2/q7/1b1P4/2N5/PPPQ1PPP/R3KBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Chigorin Variation",
          fen: "rnbqk2r/ppp2pp1/4pP1p/3p2B1/1b1P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Dr. Olland Variation",
          fen: "rnbqk2r/ppp2pp1/4pn1p/3pP3/1b1P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Duras Variation",
          fen: "rnbq1k1r/ppp2pp1/4p2p/3pP3/3Pn1Q1/2P5/P1P2PPP/R1B1KBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Exchange Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/3P2B1/1b1P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Grigoriev Variation",
          fen: "rnbqk1r1/ppp2pP1/4p3/3p4/1b1P2Qp/2N5/PPP2PP1/R3KBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Janowski Variation",
          fen: "rnbqk2r/ppp2pp1/4pn1p/3pP3/1b1P4/2N1B3/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Lasker Variation",
          fen: "rnbqk2r/ppp2pp1/4pn1p/3pP3/3P4/2b5/PPPB1PPP/R2QKBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Lasker Variation",
          fen: "rnbqk2r/ppp2p2/4p1pp/3pP3/3Pn1Q1/2P5/P1PB1PPP/R3KBNR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Tartakower Variation",
          fen: "rnbqk2r/pppn1pp1/4p2p/3pP3/1b1P4/2N5/PPPB1PPP/R2QKBNR",
        },
        {
          name: "French Defense: Alekhine-Chatard Attack",
          fen: "rnbqk2r/pppnbppp/4p3/3pP1B1/3P3P/2N5/PPP2PP1/R2QKBNR",
        },
        {
          name: "French Defense: Alekhine-Chatard Attack, Albin-Chatard Gambit",
          fen: "rnb1k2r/pppn1ppp/4p3/3pP1q1/3P4/2N5/PPP2PP1/R2QKBNR",
        },
        {
          name: "French Defense: Alekhine-Chatard Attack, Breyer Variation",
          fen: "rnbqk2r/pp1nbppp/4p3/2ppP1B1/3P3P/2N5/PPP2PP1/R2QKBNR",
        },
        {
          name: "French Defense: Alekhine-Chatard Attack, Mar\xf3czy Variation",
          fen: "rnbqk2r/1ppnbppp/p3p3/3pP1B1/3P3P/2N5/PPP2PP1/R2QKBNR",
        },
        {
          name: "French Defense: Alekhine-Chatard Attack, Spielmann Variation",
          fen: "rnbq1rk1/pppnbppp/4p3/3pP1B1/3P3P/2N5/PPP2PP1/R2QKBNR",
        },
        {
          name: "French Defense: Alekhine-Chatard Attack, Teichmann Variation",
          fen: "rnbqk2r/pppnb1pp/4pp2/3pP1B1/3P3P/2N5/PPP2PP1/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Frankfurt Variation",
          fen: "rnbqk1nr/p1p1bppp/1p2p3/3pP3/3P4/2N1B3/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Normal Variation",
          fen: "rnbqk2r/ppp1bppp/4pn2/3p2B1/3PP3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Richter Attack",
          fen: "rnbqk2r/ppp1bppp/4pB2/3p4/3PP3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Richter Attack",
          fen: "rnbqk2r/ppp1bppp/4p3/3pP3/3P2Q1/2N5/PPP2PPP/R3KBNR",
        },
        {
          name: "French Defense: Classical Variation, Tartakower Variation",
          fen: "rnbqk2r/ppp1bppp/4p3/3pP1B1/3Pn3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Vistaneckis Variation",
          fen: "rnbqk1nr/ppp1bppp/4p3/3pP1B1/3P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation",
          fen: "rnb1k2r/pppnqppp/4p3/3pP3/3P4/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Alapin Variation",
          fen: "rnb1k2r/pppnqppp/4p3/1N1pP3/3P4/8/PPP2PPP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Pollock Variation",
          fen: "rnb1k2r/pppnqppp/4p3/3pP3/3P2Q1/2N5/PPP2PPP/R3KBNR",
        },
        {
          name: "French Defense: Classical Variation, Rubinstein Variation",
          fen: "rnb1k2r/pppnqppp/4p3/3pP3/3P4/2N5/PPPQ1PPP/R3KBNR",
        },
        {
          name: "French Defense: Classical Variation, Stahlberg Variation",
          fen: "r1b2rk1/pp1nqppp/2n1p3/3pP3/2pP1P2/2N2N2/PPPQ2PP/2KR1B1R",
        },
        {
          name: "French Defense: Classical Variation, Steinitz Variation",
          fen: "rnb1k2r/pppnqppp/4p3/3pP3/3P1P2/2N5/PPP3PP/R2QKBNR",
        },
        {
          name: "French Defense: Classical Variation, Tarrasch Variation",
          fen: "rnb1k2r/pppnqppp/4p3/3pP3/3P4/2NB4/PPP2PPP/R2QK1NR",
        },
        {
          name: "French Defense: MacCutcheon Variation, Wolf Gambit",
          fen: "rnbqk2r/ppp2ppp/4pn2/3p2B1/1b1PP3/2N5/PPP1NPPP/R2QKB1R",
        },
        {
          name: "French Defense: Winawer Variation",
          fen: "rnbqk1nr/ppp2ppp/4p3/3p4/1b1PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Alekhine Gambit Accepted",
          fen: "rnbqk1nr/ppp2ppp/4p3/8/3Pp3/P1b5/1PP1NPPP/R1BQKB1R",
        },
        {
          name: "French Defense: Winawer Variation, Alekhine Gambit, Alatortsev Variation",
          fen: "r1bq1rk1/ppp1bppp/2n1pn2/8/3PN3/P5N1/1PP1BPPP/R1BQK2R",
        },
        {
          name: "French Defense: Winawer Variation, Alekhine Gambit, Kan Variation",
          fen: "r1bqk1nr/ppp2ppp/2n1p3/8/3Pp3/P1N5/1PP2PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Winawer Variation, Alekhine-Mar\xf3czy Gambit",
          fen: "rnbqk1nr/ppp2ppp/4p3/3p4/1b1PP3/2N5/PPP1NPPP/R1BQKB1R",
        },
        {
          name: "French Defense: Winawer Variation, Delayed Exchange Variation",
          fen: "rnbqk1nr/ppp2ppp/4p3/3P4/1b1P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Exchange Variation, Canal Attack",
          fen: "rnbqk2r/ppp1nppp/8/3p3Q/1b1P4/2NB4/PPP2PPP/R1B1K1NR",
        },
        {
          name: "French Defense: Winawer Variation, Fingerslip Variation",
          fen: "rnbqk1nr/ppp2ppp/4p3/3p4/1b1PP3/2N5/PPPB1PPP/R2QKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Fingerslip Variation, Kunin Double Gambit",
          fen: "rnb1k1nr/ppp2ppp/4p3/8/1b1qp1Q1/2N5/PPPB1PPP/R3KBNR",
        },
        {
          name: "French Defense: Winawer Variation, Fingerslip Variation, Main Line",
          fen: "rnbqk1r1/ppp2p1p/4pn1Q/8/1b1Pp3/2N5/PPPB1PPP/R3KBNR",
        },
        {
          name: "French Defense: Winawer Variation, Fingerslip Variation, Schwarz's Line",
          fen: "rnbqk2r/ppp1nppp/4p3/3p4/1b1PP3/8/PPPB1PPP/RN1QKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Kondratiyev Variation",
          fen: "rnb1k1nr/pp3ppp/4p3/2pq4/1b1P4/2NB4/PPPB1PPP/R2QK1NR",
        },
        {
          name: "French Defense: Winawer Variation, Winckelmann-Riemer Gambit",
          fen: "rnbqk1nr/ppp2ppp/4p3/3p4/1b1PP3/P1N5/1PP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation",
          fen: "rnbqk1nr/ppp2ppp/4p3/3pP3/1b1P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Petrosian Variation",
          fen: "rnb1k1nr/pppq1ppp/4p3/3pP3/1b1P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P4/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P4/P1N5/1PP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/3pP3/1P6/2p2N2/1PP2PPP/R1BQKB1R",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation, Moscow Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P2Q1/2N5/PPP2PPP/R1B1KBNR",
        },
        {
          name: "French Defense: Winawer Variation, Bogoljubov Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/2ppP3/1b1P4/2N5/PPPB1PPP/R2QKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Bogoljubov Variation, Icelandic Defense",
          fen: "rnbqk2r/pp2nppp/4p3/2ppP3/1b1P1P2/2N5/PPPB2PP/R2QKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Mar\xf3czy-Wallis Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/3pP3/1P6/2p5/1PP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Retreat Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/b1ppP3/3P4/P1N5/1PP2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Retreat Variation, Armenian Line",
          fen: "rnbqk1nr/pp3ppp/4p3/b2pP3/1P1p4/P1N5/2P2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation",
          fen: "rnbqk1nr/pp3ppp/4p3/2ppP3/3P4/P1P5/2P2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Classical Variation",
          fen: "rnb1k1nr/ppq2ppp/4p3/2ppP3/3P4/P1P5/2P2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Portisch-Hook Variation",
          fen: "rnb1k1nr/pp3ppp/4p3/q1ppP3/3P4/P1P5/2P2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation",
          fen: "rnbqk2r/pp2nppp/4p3/2ppP3/3P4/P1P5/2P2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Advance Variation",
          fen: "rnbqk2r/pp2nppp/4p3/2ppP3/P2P4/2P5/2P2PPP/R1BQKBNR",
        },
        {
          name: "French Defense: Winawer Variation, Poisoned Pawn Variation",
          fen: "rnbqk2r/pp2nppp/4p3/2ppP3/3P2Q1/P1P5/2P2PPP/R1B1KBNR",
        },
        {
          name: "French Defense: Winawer Variation, Poisoned Pawn Variation, Main Line",
          fen: "rnb1k1r1/ppq1np1Q/4p3/3pP3/3p4/P1P5/2P1NPPP/R1B1KB1R",
        },
        {
          name: "French Defense: Winawer Variation, Poisoned Pawn Variation, Paoli Variation",
          fen: "rnb1k1r1/ppq1np1Q/4p3/3pP3/3p4/P1P5/2P2PPP/R1BK1BNR",
        },
        {
          name: "French Defense: Winawer Variation, Positional Variation",
          fen: "rnbqk2r/pp2nppp/4p3/2ppP3/3P4/P1P2N2/2P2PPP/R1BQKB1R",
        },
        {
          name: "Barnes Opening: Walkerling",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2B1P3/5P2/PPPP2PP/RNBQK1NR",
        },
        {
          name: "Bongcloud Attack",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPPKPPP/RNBQ1BNR",
        },
        {
          name: "Center Game",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "English Opening: The Whale",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: Alapin Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPPNPPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Bavarian Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/2P1P3/8/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: Beyer Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: Clam Variation, King's Gambit Reversed",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/4P3/3P4/PPP2PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: Clam Variation, Radisch Gambit",
          fen: "rnbqk2r/pppp1ppp/5n2/2b1p3/4PP2/3P4/PPP3PP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: King's Head Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/5P2/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: King's Head Opening",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/2N2P2/PPPP2PP/R1BQKBNR",
        },
        {
          name: "King's Pawn Game: Leonardis Variation",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/3P4/PPP2PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: MacLeod Attack",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/2P5/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: MacLeod Attack, Lasa Gambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/4P3/2P5/PP1P1PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: MacLeod Attack, Norwalde Gambit",
          fen: "rnbqk1nr/ppp2ppp/3b4/3pp2Q/4P3/2P5/PP1P1PPP/RNB1KBNR",
        },
        {
          name: "King's Pawn Game: Mengarini's Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/P7/1PPP1PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: Napoleon Attack",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/5Q2/PPPP1PPP/RNB1KBNR",
        },
        {
          name: "King's Pawn Game: Philidor Gambit",
          fen: "rn1qkbnr/pppb1ppp/3p4/4P3/4P3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Game: Tortoise Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/3B4/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "King's Pawn Game: Wayward Queen Attack",
          fen: "rnbqkbnr/pppp1ppp/8/4p2Q/4P3/8/PPPP1PPP/RNB1KBNR",
        },
        {
          name: "King's Pawn Game: Wayward Queen Attack, Kiddie Countergambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p2Q/4P3/8/PPPP1PPP/RNB1KBNR",
        },
        {
          name: "King's Pawn Game: Wayward Queen Attack, Mellon Gambit",
          fen: "r1bqkb1r/ppp4p/2n2ppn/3pp3/2B1P3/3P1Q2/PPP1NPPP/RNB1K2R",
        },
        {
          name: "King's Pawn Game: Weber Gambit",
          fen: "r1bqkbnr/pp3ppp/2n5/4p3/8/3P4/PPP2PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/1P6/P1PP1PPP/RNBQKBNR",
        },
        {
          name: "King's Pawn Opening: Speers",
          fen: "rnbqkb1r/pppp1ppp/5n2/4pQ2/4P3/8/PPPP1PPP/RNB1KBNR",
        },
        {
          name: "King's Pawn Opening: Van Hooydoon Gambit",
          fen: "r1bqk2r/pppp1ppp/5n2/2b5/3nP3/5N2/PP2QPPP/RNB1KB1R",
        },
        {
          name: "Portuguese Opening",
          fen: "rnbqkbnr/pppp1ppp/8/1B2p3/4P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Portuguese Opening: Miguel Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/1Bb1p3/1P2P3/8/P1PP1PPP/RNBQK1NR",
        },
        {
          name: "Portuguese Opening: Portuguese Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/1B2p3/3PP3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Center Game",
          fen: "rnbqkbnr/pppp1ppp/8/8/3QP3/8/PPP2PPP/RNB1KBNR",
        },
        {
          name: "Center Game Accepted",
          fen: "rnbqkbnr/pppp1ppp/8/8/3pP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Center Game: Halasz-McDonnell Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/3pPP2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "Center Game: Halasz-McDonnell Gambit, Crocodile Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b5/3pPP2/2P2N2/PP4PP/RNBQKB1R",
        },
        {
          name: "Center Game: Kieseritzky Variation",
          fen: "rnbqkbnr/pppp1ppp/8/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Center Game: Kieseritzky Variation",
          fen: "rnbqkbnr/pp1p1ppp/8/2p5/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Center Game: Kieseritzky Variation",
          fen: "rnbqkbnr/pp1p1ppp/8/2p5/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Center Game: Kieseritzky Variation",
          fen: "rnbqkbnr/p2p1ppp/8/1pp5/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Center Game: Lanc-Arnold Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/2b5/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Center Game: Lanc-Arnold Gambit, Schippler Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/2b5/2B1P3/2p2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Center Game: Ross Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/3pP3/3B4/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Center Game: von der Lasa Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/2BpP3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Danish Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Danish Gambit Accepted",
          fen: "rnbqkbnr/pppp1ppp/8/8/2B1P3/8/PB3PPP/RN1QK1NR",
        },
        {
          name: "Danish Gambit Accepted: Chigorin Defense",
          fen: "rnb1kbnr/ppppqppp/8/8/2B1P3/8/PB3PPP/RN1QK1NR",
        },
        {
          name: "Danish Gambit Accepted: Classical Defense",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/2B1P3/8/PB3PPP/RN1QK1NR",
        },
        {
          name: "Danish Gambit Accepted: Copenhagen Defense",
          fen: "rnbqk1nr/pppp1ppp/8/8/1bB1P3/8/PB3PPP/RN1QK1NR",
        },
        {
          name: "Danish Gambit Accepted: Schlechter Defense",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/2B1P3/8/PB3PPP/RN1QK1NR",
        },
        {
          name: "Danish Gambit Accepted: Svenonius Defense",
          fen: "rnbqkb1r/ppppnppp/8/8/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Danish Gambit Declined: Sorensen Defense",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/3pP3/2P5/PP3PPP/RNBQKBNR",
        },
        {
          name: "Center Game: Berger Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/8/4P3/4Q3/PPP2PPP/RNB1KBNR",
        },
        {
          name: "Center Game: Charousek Variation",
          fen: "r1bqk1nr/ppppbppp/2n5/8/4P3/2P1Q3/PP3PPP/RNB1KBNR",
        },
        {
          name: "Center Game: Hall Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/2Q1P3/8/PPP2PPP/RNB1KBNR",
        },
        {
          name: "Center Game: Kupreichik Variation",
          fen: "r1bqr1k1/ppp2ppp/2np1n2/8/1bB1P3/2N1Q2N/PPPB1PPP/2KR3R",
        },
        {
          name: "Center Game: Normal Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/3QP3/8/PPP2PPP/RNB1KBNR",
        },
        {
          name: "Center Game: Paulsen Attack Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/4P3/4Q3/PPP2PPP/RNB1KBNR",
        },
        {
          name: "Center Game: l'Hermet Variation",
          fen: "r1bqkbnr/pppp2pp/2n5/5p2/4P3/4Q3/PPP2PPP/RNB1KBNR",
        },
        {
          name: "Bishop's Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Anderssen Gambit",
          fen: "rnbqkbnr/p2p1ppp/2p5/1B2p3/4P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Boi Variation",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Calabrese Countergambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Calabrese Countergambit, Jaenisch Variation",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/2B1P3/3P4/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Four Pawns Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/8/2BPP2b/5N2/P1P4p/RNBQ1R1K",
        },
        {
          name: "Bishop's Opening: Khan Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Lewis Countergambit",
          fen: "rnbqk1nr/ppp2ppp/8/2bpp3/2B1P3/2P5/PP1P1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Lewis Countergambit",
          fen: "rnbqk2r/ppp2ppp/5n2/2bBp3/4P3/2P5/PP1P1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Lewis Countergambit, Walker Variation",
          fen: "rnbqk2r/ppp2ppp/5n2/2bBp3/3PP3/2P5/PP3PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Lewis Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/2BPP3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Lisitsyn Variation",
          fen: "r2qkbnr/pp3ppp/8/3pn3/8/8/PPP1NPPP/RNBQK2R",
        },
        {
          name: "Bishop's Opening: Lopez Gambit",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1PP2/2P5/PP1PQ1PP/RNB1K1NR",
        },
        {
          name: "Bishop's Opening: Lopez Variation",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/2B1P3/8/PPPPQPPP/RNB1K1NR",
        },
        {
          name: "Bishop's Opening: Lopez Variation, Lopez Gambit",
          fen: "rnbqk2r/pppp1ppp/5n2/2b1p3/2B1PP2/8/PPPPQ1PP/RNB1K1NR",
        },
        {
          name: "Bishop's Opening: McDonnell Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/1PB1P3/8/P1PP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: McDonnell Gambit, La Bourdonnais-Denker Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/4p3/1bB1P3/2P5/P2P1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: McDonnell Gambit, McDonnell Double Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/4p3/1bB1PP2/8/P1PP2PP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Philidor Counterattack",
          fen: "rnbqkbnr/pp1p1ppp/2p5/4p3/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Philidor Variation",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/2B1P3/2P5/PP1P1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Pratt Variation",
          fen: "rnbq1rk1/ppp2ppp/5P2/2b4Q/2pp4/2P5/PP3PPP/RNB1K1NR",
        },
        {
          name: "Bishop's Opening: Stein Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/2B1PP2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Thorold Gambit",
          fen: "rnbqkbnr/p1pp2pp/8/1B2pp2/4P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: del Rio Variation",
          fen: "rnb1k1nr/pppp1ppp/8/2b1p1q1/2B1P3/2P5/PP1P1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Berlin Defense",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2B1P3/8/PPPP1PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Berlin Defense, Greco Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2B1PP2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Kitchener Folly",
          fen: "rnbq1rk1/ppppbppp/5n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Bishop's Opening: Krejcik Gambit",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/1PB1P3/5P2/P1PPN1PP/RNBQK2R",
        },
        {
          name: "Bishop's Opening: Pachman Gambit",
          fen: "rnbqkb1r/pppp1ppp/8/4p3/2B1n3/2N5/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Bishop's Opening: Ponziani Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2BPP3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Bishop's Opening: Urusov Gambit, Panov Variation",
          fen: "rnb1k2r/ppp1qppp/5n2/3P4/1bBp4/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Bishop's Opening: Vienna Hybrid",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/2NP4/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Bishop's Opening: Warsaw Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/2BpP3/2P5/PP3PPP/RNBQK1NR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4PP2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Cunningham Defense",
          fen: "r1bqk1nr/ppppbppp/2n5/8/4Pp2/2N2N2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Hamppe-Allgaier Gambit",
          fen: "r1bqkbnr/pppp1p1p/2n5/6N1/4PppP/2N5/PPPP2P1/R1BQKB1R",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Hamppe-Allgaier Gambit, Alapin Variation",
          fen: "r1bqkbnr/ppp2p1p/2np4/6N1/4PppP/2N5/PPPP2P1/R1BQKB1R",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Hamppe-Allgaier Gambit, Thorold Variation",
          fen: "r1bq1bnr/pppp1k2/2n4p/8/3PPppP/2N5/PPP3P1/R1BQKB1R",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Hamppe-Muzio Gambit",
          fen: "r1bqkbnr/pppp1p1p/2n5/8/2B1Pp2/2N2p2/PPPP2PP/R1BQ1RK1",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Knight Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/4Pp2/2N2N2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Pierce Gambit",
          fen: "r1bqkbnr/pppp1p1p/2n5/6p1/3PPp2/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Quelle Gambit",
          fen: "r1bqk1nr/ppp2ppp/2np4/2b1P3/4P3/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Steinitz Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/3PPp2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Steinitz Gambit, Fraser-Minckwitz Defense",
          fen: "r1b1kbnr/p1pp1ppp/1pn5/8/3PPp1q/2N5/PPP1K1PP/R1BQ1BNR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Steinitz Gambit, Main Line",
          fen: "r1b1kbnr/pppp1ppp/2n5/8/3PPp1q/2N5/PPP1K1PP/R1BQ1BNR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Steinitz Gambit, Paulsen Defense",
          fen: "r1b1kbnr/ppp2ppp/2np4/8/3PPp1q/2N5/PPP1K1PP/R1BQ1BNR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Steinitz Gambit, S\xf6rensen Defense",
          fen: "r1b1kbnr/pppp1p1p/2n5/6p1/3PPp1q/2N5/PPP1K1PP/R1BQ1BNR",
        },
        {
          name: "Vienna Gambit, with Max Lange Defense: Steinitz Gambit, Zukertort Defense",
          fen: "r1b1kbnr/ppp2ppp/2n5/3p4/3PPp1q/2N5/PPP1K1PP/R1BQ1BNR",
        },
        {
          name: "Vienna Game",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Anderssen Defense",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Fyfe Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Giraffe Attack",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/4P1Q1/2N5/PPPP1PPP/R1B1KBNR",
        },
        {
          name: "Vienna Game: Hamppe-Meitner Variation",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/N3P3/8/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Hamppe-Muzio Gambit",
          fen: "r1bqkbnr/pppp1p1p/2n5/8/2B1Ppp1/2N2N2/PPPP2PP/R1BQ1RK1",
        },
        {
          name: "Vienna Game: Hamppe-Muzio, Dubois Variation",
          fen: "r1b1kbnr/pppp1p1p/5q2/4n3/2B1PQ2/2N5/PPPP2PP/R1B2RK1",
        },
        {
          name: "Vienna Game: Max Lange Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Omaha Gambit",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/4PP2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Paulsen Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/2N3P1/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Vienna Game: Paulsen Variation",
          fen: "r1bqk2r/ppp2ppp/2n2n2/2bpp3/4P3/2N3P1/PPPPNPBP/R1BQK2R",
        },
        {
          name: "Vienna Game: Paulsen Variation, Mariotti Gambit",
          fen: "r1bqk1nr/pppp1pp1/2n5/2b1p3/4P2p/2N2NP1/PPPP1PBP/R1BQK2R",
        },
        {
          name: "Vienna Game: Philidor Countergambit",
          fen: "r1bqkbnr/pppp2pp/2n5/4pp2/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Pierce Gambit, Rushmere Attack",
          fen: "r2qkbnr/ppp2p1p/2P5/8/2BP1pb1/2N2p2/PPP3PP/R1BQ1RK1",
        },
        {
          name: "Vienna Game: Stanley Variation, Meitner-Mieses Gambit",
          fen: "r1b1k1nr/pppp1ppp/2n2q2/2bNp3/2B1P1Q1/8/PPPP1PPP/R1B1K1NR",
        },
        {
          name: "Vienna Game: Zhuravlev Countergambit",
          fen: "rnbqk2r/pppp1ppp/5n2/4p3/1b2P1Q1/2N5/PPPP1PPP/R1B1KBNR",
        },
        {
          name: "Bishop's Opening: Horwitz Gambit",
          fen: "rnbqkb1r/p1pp1ppp/5n2/1p2p3/2B1P3/2N5/PPPP1PPP/R1BQK1NR",
        },
        {
          name: "Bishop's Opening: Vienna Hybrid, Spielmann Attack",
          fen: "rnbqk2r/pppp1ppp/5n2/2b1p3/2B1P3/2NP4/PPP2PPP/R1BQK1NR",
        },
        {
          name: "Vienna Game: Falkbeer Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/2N5/PPPP1PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Mengarini Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/P1N5/1PPP1PPP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Mieses Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/2N3P1/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Vienna Game: Mieses Variation, Erben Gambit",
          fen: "rnbqkb1r/pp3ppp/2p2n2/3Pp3/8/2N3P1/PPPP1P1P/R1BQKBNR",
        },
        {
          name: "Vienna Game: Paulsen Variation, Pollock Gambit",
          fen: "r1bqk2r/ppp2ppp/2n2n2/2bPp3/8/2N3P1/PPPPNPBP/R1BQK2R",
        },
        {
          name: "Vienna Game: Stanley Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2B1P3/2N5/PPPP1PPP/R1BQK1NR",
        },
        {
          name: "Vienna Game: Stanley Variation, Eifel Gambit",
          fen: "rnbqk2r/p1pp1ppp/5n2/1pb1p3/2B1P3/2N5/PPPPNPPP/R1BQK2R",
        },
        {
          name: "Vienna Game: Stanley Variation, Reversed Spanish",
          fen: "rnbqk2r/pppp1ppp/5n2/4p3/1bB1P3/2N5/PPPP1PPP/R1BQK1NR",
        },
        {
          name: "Bishop's Opening: Boden-Kieseritzky Gambit",
          fen: "rnbqkb1r/pppp1ppp/8/4p3/2B1n3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Bishop's Opening: Boden-Kieseritzky Gambit, Lichtenhein Defense",
          fen: "rnbqkb1r/ppp2ppp/8/3pp3/2B1n3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Vienna Game: Adams' Gambit",
          fen: "r1bqkb1r/pppp1ppp/2nn4/4p2Q/3P4/1BN5/PPP2PPP/R1B1K1NR",
        },
        {
          name: "Vienna Game: Frankenstein-Dracula Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4p3/2B1n3/2N5/PPPP1PPP/R1BQK1NR",
        },
        {
          name: "Vienna Game: Stanley Variation, Alekhine Variation",
          fen: "r1bqk2r/ppppbppp/2nn4/4N2Q/8/1BN5/PPPP1PPP/R1B1K2R",
        },
        {
          name: "Vienna Game: Stanley Variation, Frankenstein-Dracula Variation",
          fen: "N1bk1b1r/p2pq2p/1pnn2p1/3Qpp2/8/1B6/PPPP1PPP/R1B1K1NR",
        },
        {
          name: "Vienna Game: Stanley Variation, Monster Declined",
          fen: "rnbqk2r/ppppbppp/3n4/4p2Q/8/1BN5/PPPP1PPP/R1B1K1NR",
        },
        {
          name: "Bishop's Opening: Vienna Hybrid, Hrom\xe1dka Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/4p3/1bB1P3/2NP4/PPP1NPPP/R1BQK2R",
        },
        {
          name: "Vienna Game: Stanley Variation, Bronstein Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n5/4p3/2B1nP2/2N2N2/PPPP2PP/R1BQK2R",
        },
        {
          name: "Vienna Game: Stanley Variation, Three Knights Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/2N5/PPPP1PPP/R1BQK1NR",
        },
        {
          name: "Vienna Game: Heyde Variation",
          fen: "rnbqkb1r/ppp3pp/8/3pPp2/3Pn3/2N2Q2/PPP3PP/R1B1KBNR",
        },
        {
          name: "Vienna Game: Vienna Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4PP2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Vienna Gambit, Bardeleben Variation",
          fen: "rnbqkb1r/ppp3pp/8/3pPp2/4n3/2N2Q2/PPPP2PP/R1B1KBNR",
        },
        {
          name: "Vienna Game: Vienna Gambit, Breyer Variation",
          fen: "rnbqk2r/ppp1bppp/8/3pP3/4n3/2N2N2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "Vienna Game: Vienna Gambit, Kaufmann Variation",
          fen: "rn1qkb1r/ppp2ppp/8/3pP3/4n1b1/2N2N2/PPPPQ1PP/R1B1KB1R",
        },
        {
          name: "Vienna Game: Vienna Gambit, Main Line",
          fen: "rnbqkb1r/ppp2ppp/5n2/3pp3/4PP2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Vienna Gambit, Modern Variation",
          fen: "rnbqkb1r/ppp2ppp/8/3pP3/4n3/2NP4/PPP3PP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Vienna Gambit, Paulsen Attack",
          fen: "rnbqkb1r/ppp2ppp/8/3pP3/4n3/2N2Q2/PPPP2PP/R1B1KBNR",
        },
        {
          name: "Vienna Game: Vienna Gambit, Steinitz Variation",
          fen: "rnbqkb1r/ppp2ppp/5n2/3pp3/4PP2/2NP4/PPP3PP/R1BQKBNR",
        },
        {
          name: "Vienna Game: Vienna Gambit, Wurzburger Trap",
          fen: "rnb1kb1r/ppp2ppp/8/3NP2q/8/3P1Nn1/PPP4P/R1BQKB1R",
        },
        {
          name: "King's Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Classical Variation",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Classical Variation",
          fen: "rnbqk1nr/ppp2ppp/3p4/2b1p3/4PP2/2P2N2/PP1P2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Classical Variation, Euwe Attack",
          fen: "rn1qk1nr/ppp2ppp/8/2b1p3/Q3P1b1/2P2N2/PP1P2PP/RNB1KB1R",
        },
        {
          name: "King's Gambit Declined: Classical Variation, Rotlewi Countergambit",
          fen: "rnbqk1nr/ppp2ppp/3p4/2b1p3/1P2PP2/5N2/P1PP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Classical Variation, Rubinstein Countergambit",
          fen: "rnbqk1nr/ppp3pp/3p4/2b1pp2/4PP2/2P2N2/PP1P2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Classical, Hanham Variation",
          fen: "r1bqk1nr/pppn1ppp/3p4/2b1p3/4PP2/2N2N2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "King's Gambit Declined: Classical, R\xe9ti Variation",
          fen: "rnbqk1nr/ppp3pp/8/2b2p2/2BpP3/2P2N2/PP4PP/RNBQK2R",
        },
        {
          name: "King's Gambit Declined: Classical, Soldatenkov Variation",
          fen: "rnbqk1nr/ppp2ppp/3p4/2b1P3/4P3/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Classical, Svenonius Variation",
          fen: "r2qk2r/ppp2ppp/2np1n2/2b5/2B1Pp2/2NP1Q1P/PPP3P1/R1B1K2R",
        },
        {
          name: "King's Gambit Declined: Hobbs-Zilbermints Gambit",
          fen: "r1bqkbnr/pppp1p2/2n4p/4p1P1/4P3/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Keene Defense",
          fen: "rnb1kbnr/ppppqppp/8/4p3/4PP2/6P1/PPPP3P/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Keene's Defense",
          fen: "rnb1kbnr/pppp1ppp/8/4p3/4PP1q/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Keene's Defense",
          fen: "rnb1kbnr/pppp1ppp/8/4p3/4PP1q/6P1/PPPP3P/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Mafia Defense",
          fen: "rnbqkbnr/pp1p1ppp/8/2p1p3/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Miles Defense",
          fen: "r1bqkbnr/pppp2pp/2n5/4pp2/4PP2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Norwalde Variation",
          fen: "rnb1kbnr/pppp1ppp/5q2/4p3/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Norwalde Variation, B\xfccker Gambit",
          fen: "rnb1k1nr/pppp1ppp/8/4p3/1bB1Pq2/2N2N2/PPPP2PP/R1BQK2R",
        },
        {
          name: "King's Gambit Declined: Norwalde Variation, Schubert Variation",
          fen: "rnb1kbnr/pppp1ppp/8/4p3/3PPq2/2N5/PPP3PP/R1BQKBNR",
        },
        {
          name: "King's Gambit Declined: Panteldakis Countergambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Panteldakis Countergambit, Greco Variation",
          fen: "rnb1kbnr/pppp2pp/8/4pP2/5P1q/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Panteldakis Countergambit, Pawn Sacrifice Line",
          fen: "rnb1kbnr/ppppq2p/6P1/7Q/5p2/8/PPPP2PP/RNBK1BNR",
        },
        {
          name: "King's Gambit Declined: Panteldakis Countergambit, Schiller's Defense",
          fen: "rnbqk1nr/pppp2pp/8/2b1pP2/5P2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Panteldakis Countergambit, Shirazi Line",
          fen: "rnbq1bnr/ppppk1pp/8/5P1Q/5p2/8/PPPP2PP/RNB1KBNR",
        },
        {
          name: "King's Gambit Declined: Panteldakis Countergambit, Symmetrical Variation",
          fen: "rnbqk1nr/ppp3pp/3b4/3p1P2/3P1p2/3B1N2/PPP3PP/RNBQK2R",
        },
        {
          name: "King's Gambit Declined: Petrov's Defense",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Queen's Knight Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Senechaud Countergambit",
          fen: "rnbqk1nr/pppp1p1p/8/2b1p1p1/4PP2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Soller-Zilbermints Gambit",
          fen: "r1bqkbnr/pppp2pp/2n2p2/4P3/4P3/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Zilbermints Double Countergambit",
          fen: "rnbqkbnr/pppp1p1p/8/4p1p1/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Zilbermints Double Gambit",
          fen: "r1bqkbnr/pppp1p1p/2n5/4p1p1/4PP2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/4PP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit Accepted",
          fen: "rnbqkbnr/ppp2ppp/8/3Pp3/5P2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Anderssen Attack",
          fen: "rnbqkbnr/ppp2ppp/8/1B1P4/4pP2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Blackburne Attack",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/4PP2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3P4/4pP2/3P4/PPP3PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Gambit, Morphy Defense",
          fen: "rnbqk2r/ppp2ppp/5n2/3P4/1b3P2/2NPp3/PPPB2PP/R2QKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Hinrichsen Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/3PPP2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Miles Gambit",
          fen: "rnbqk1nr/ppp2ppp/8/2bPp3/5P2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Milner-Barry Variation",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/4PP2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Modern Transfer",
          fen: "rnbqkbnr/ppp2ppp/8/3P4/5p2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Nimzowitsch-Marshall Countergambit",
          fen: "rnbqkbnr/pp3ppp/2p5/3Pp3/5P2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Pickler Gambit",
          fen: "rnbqk1nr/pp3ppp/2P5/2b1p3/5P2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Rubinstein Variation",
          fen: "rnbqkb1r/ppp2ppp/5n2/3P4/4pP2/2N5/PPPPQ1PP/R1B1KBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Staunton Line",
          fen: "rnbqkbnr/ppp2ppp/8/3P4/4pP2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "Van Geet Opening: Gr\xfcnfeld Defense, Steiner Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/4NP2/8/PPPP2PP/R1BQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Alapin Variation",
          fen: "rnb1k2r/ppp2ppp/8/3q4/4nP2/8/PPPNQbPP/RNBK1B1R",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Gambit",
          fen: "rnbqkb1r/ppp2ppp/8/3P4/4nP2/8/PPP1Q1PP/RNB1KBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Gambit Accepted",
          fen: "rnbqkb1r/ppp2ppp/5n2/3P4/4PP2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Gambit, Keres Variation",
          fen: "rnbqkb1r/ppp2ppp/5n2/3P4/4pP2/3P4/PPPN2PP/R1BQKBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Gambit, Main Line",
          fen: "rn1qk2r/ppp2ppp/8/2bP1b2/4nP2/5N2/PPP1Q1PP/RNB1KB1R",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Gambit, Old Line",
          fen: "rnbqkb1r/ppp2ppp/5n2/3P4/4pP2/3P4/PPP1Q1PP/RNB1KBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Charousek Variation",
          fen: "rnb1kb1r/ppp3pp/8/3q1p2/4nPP1/8/PPPNQ2P/R1B1KBNR",
        },
        {
          name: "King's Gambit Declined: Falkbeer Countergambit, Tarrasch Variation",
          fen: "rn1q1rk1/ppp2ppp/8/2bP1b2/4nPP1/5N2/PPP1Q2P/RNB1KB1R",
        },
        {
          name: "King's Gambit Accepted",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/8/PPPP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Accepted: Basman Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/8/PPPPQ1PP/RNB1KBNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Anderssen Defense",
          fen: "rnbqkbnr/pppp1p1p/8/6p1/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Anderssen Variation",
          fen: "rnbqkbnr/pp3ppp/2p5/3B4/4Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Bledow Countergambit",
          fen: "rnbqkb1r/ppp2ppp/5n2/3B4/4Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Bledow Variation",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Boden Variation",
          fen: "r1b1kbnr/pppp1ppp/2n5/8/2B1Pp1q/8/PPPP2PP/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Bogoljubov Defense",
          fen: "rnbqkb1r/pp1p1ppp/2p2n2/8/2B1Pp2/2N5/PPPP2PP/R1BQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Bogoljubov Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/2B1Pp2/2N5/PPPP2PP/R1BQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Boren-Svenonius Variation",
          fen: "rnb1k1nr/ppp2ppp/3b4/3B4/4Pp1q/8/PPPP2PP/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Bryan Countergambit",
          fen: "rnb1kbnr/p1pp1ppp/8/1p6/2B1Pp1q/8/PPPP2PP/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Chigorin's Attack",
          fen: "rnb1kbnr/ppp2p1p/8/3B2p1/4Pp1q/6P1/PPPP3P/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Classical Defense",
          fen: "rnb1k2r/ppppnpbp/8/6p1/2BPPp1q/2N5/PPP3PP/R1BQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Classical Defense, Cozio Attack",
          fen: "rnb1kbnr/pppp1p1p/8/6p1/2B1Pp1q/5Q2/PPPP2PP/RNB2KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Cozio Defense",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Cozio Variation",
          fen: "rnb1kbnr/ppp2ppp/3p4/8/2B1Pp1q/8/PPPP2PP/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, First Jaenisch Variation",
          fen: "rnb1kb1r/pppp1ppp/5n2/8/2B1Pp1q/8/PPPP2PP/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Fraser Variation",
          fen: "rnb1k1nr/pppp1pbp/8/6p1/2B1P2q/2N2Qp1/PPPP3P/R1B2KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Gianutio Gambit",
          fen: "rnbqkbnr/pppp2pp/8/5p2/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Greco Variation",
          fen: "rnb1k1nr/pppp1ppp/8/2b5/2B1Pp1q/8/PPPP2PP/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Grimm Attack",
          fen: "rnb1k1nr/ppp2pbp/3p4/4P1p1/2BP1p1q/2N5/PPP3PP/R1BQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Kieseritzky Gambit",
          fen: "rnbqkbnr/p1pp1ppp/8/1p6/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Lopez Defense",
          fen: "rnbqkbnr/pp1p1ppp/2p5/8/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Lopez Variation",
          fen: "rnb1kbnr/pppp1p1p/8/6p1/2B1Pp1q/8/PPPP2PP/RNBQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Maurian Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, McDonnell Attack",
          fen: "rnb1k2r/ppppnpbp/8/6p1/2BPPp1q/2N3P1/PPP4P/R1BQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, McDonnell Attack",
          fen: "rnb1k1nr/pppp1pbp/8/6p1/2B1Pp1q/2N3P1/PPPP3P/R1BQ1KNR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Paulsen Attack",
          fen: "rnbqk2r/pppp1ppp/5n2/4P3/1bB2p2/2N5/PPPP2PP/R1BQK1NR",
        },
        {
          name: "King's Gambit Accepted: Bishop's Gambit, Steinitz Defense",
          fen: "rnbqkb1r/ppppnppp/8/8/2B1Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Breyer Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/5Q2/PPPP2PP/RNB1KBNR",
        },
        {
          name: "King's Gambit Accepted: Carrera Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/7Q/4Pp2/8/PPPP2PP/RNB1KBNR",
        },
        {
          name: "King's Gambit Accepted: Dodo Variation",
          fen: "rnbqkbnr/pppp1ppp/8/8/4PpQ1/8/PPPP2PP/RNB1KBNR",
        },
        {
          name: "King's Gambit Accepted: Eisenberg Variation",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/7N/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Gaga Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/6P1/PPPP3P/RNBQKBNR",
        },
        {
          name: "King's Gambit Accepted: Lopez-Gianutio Countergambit, Hein Variation",
          fen: "rnbk1bnr/pppp2pp/8/8/2B1pp1q/2N5/PPPPQ1PP/R1BK2NR",
        },
        {
          name: "King's Gambit Accepted: Mason-Keres Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/2N5/PPPP2PP/R1BQKBNR",
        },
        {
          name: "King's Gambit Accepted: Orsini Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/1P6/P1PP2PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Accepted: Paris Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/8/PPPPN1PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Polerio Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/3PPp2/8/PPP3PP/RNBQKBNR",
        },
        {
          name: "King's Gambit Accepted: Schurig Gambit, with Bb5",
          fen: "rnbqkbnr/pppp1ppp/8/1B6/4Pp2/8/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Schurig Gambit, with Bd3",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/3B4/PPPP2PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Stamma Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp1P/8/PPPP2P1/RNBQKBNR",
        },
        {
          name: "King's Gambit Accepted: Tartakower Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/8/PPPPB1PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Tartakower Gambit, Weiss Defense",
          fen: "rnbqkbnr/ppp3pp/3p4/5P2/5p2/8/PPPPB1PP/RNBQK1NR",
        },
        {
          name: "King's Gambit Accepted: Tumbleweed",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/8/PPPP1KPP/RNBQ1BNR",
        },
        {
          name: "King's Gambit Accepted: Becker Defense",
          fen: "rnbqkbnr/pppp1pp1/7p/8/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Bonsch-Osmolovsky Variation",
          fen: "rnbqkb1r/ppppnppp/8/8/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Fischer Defense",
          fen: "rnbqkbnr/ppp2ppp/3p4/8/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Fischer Defense, Schulder Gambit",
          fen: "rnbqkbnr/ppp2ppp/3p4/8/1P2Pp2/5N2/P1PP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Fischer Defense, Spanish Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/8/3PPp2/3B1N2/PPP3PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Gianutio Countergambit",
          fen: "rnbqkbnr/pppp2pp/8/5p2/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Greco Gambit",
          fen: "rnbqk1nr/ppp2pb1/3p3p/6p1/2BPPp1P/5N2/PPP3P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: King's Knight's Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/6p1/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: King's Knight's Gambit",
          fen: "rnbqkbnr/pppp1ppp/8/8/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: MacLeod Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Schallopp Defense",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Schallopp Defense, Tashkent Attack",
          fen: "rnbqkb1r/pppp1ppp/8/4P2n/5pP1/5N2/PPPP3P/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Wagenbach Defense",
          fen: "rnbqkbnr/pppp1pp1/8/7p/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Cunningham Defense",
          fen: "rnbqk1nr/ppppbppp/8/8/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Cunningham Defense, Bertin Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/8/2B1Pp1b/5NP1/PPPP3P/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Cunningham Defense, Bertin Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/8/2B1P2b/5N2/PPPP3p/RNBQ1R1K",
        },
        {
          name: "King's Gambit Accepted: Cunningham Defense, McCormick Defense",
          fen: "rnbqk2r/ppppbppp/5n2/8/2B1Pp2/5N2/PPPP2PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Abbazia Defense",
          fen: "rnbqkb1r/ppp2ppp/5n2/3P4/5p2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Abbazia Defense, Main Line",
          fen: "rnbqkb1r/p4ppp/2p5/3n4/2B2p2/5N2/PPPP2PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Modern Defense",
          fen: "rnbqkbnr/ppp2ppp/8/3p4/4Pp2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Modern Defense",
          fen: "rnbqkbnr/ppp2ppp/8/3P4/5p2/5N2/PPPP2PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Australian Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/8/2B1PppP/5N2/PPPP2P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Blachly Gambit",
          fen: "r1bqkbnr/pppp1p1p/2n5/6p1/2B1Pp2/5N2/PPPP2PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Double Muzio Gambit",
          fen: "rnb1kbnr/pppp1B1p/8/4q3/5p2/5Q2/PPPP2PP/RNB2RK1",
        },
        {
          name: "King's Gambit Accepted: Double Muzio Gambit, Baldwin Gambit",
          fen: "rnb1kbnr/pppp1p1p/8/3N4/2q1Pp2/5Q2/PPPP2PP/R1B2R1K",
        },
        {
          name: "King's Gambit Accepted: Double Muzio Gambit, Bello Gambit",
          fen: "rnb1kbnr/pppp1p1p/5q2/8/2B1Pp2/2N2Q2/PPPP2PP/R1B2RK1",
        },
        {
          name: "King's Gambit Accepted: Double Muzio Gambit, Paulsen Defense",
          fen: "r1b1k2r/ppppnp1p/2n4b/4q3/2B2p2/2NP1Q2/PPPB2PP/4RRK1",
        },
        {
          name: "King's Gambit Accepted: Double Muzio Gambit, Young Gambit",
          fen: "rnb2bnr/pppp1k1p/5q2/8/4P3/2N1pQ2/PPP3PP/R4RK1",
        },
        {
          name: "King's Gambit Accepted: Ghulam-Kassim Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/8/2BPPpp1/5N2/PPP3PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Ghulam-Kassim Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/8/2BPPp2/5Q2/PPP3PP/RNB1K2R",
        },
        {
          name: "King's Gambit Accepted: King's Knight's Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/6p1/2B1Pp2/5N2/PPPP2PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Kotov Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/8/2BPPB2/5p2/PPP3PP/RN1QK2R",
        },
        {
          name: "King's Gambit Accepted: Lolli Gambit",
          fen: "rnbqkbnr/pppp1B1p/8/8/4Ppp1/5N2/PPPP2PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Lolli Gambit, Young Variation",
          fen: "rnb2bnr/pppp1k1p/5q2/8/4Pp2/2N1BQ2/PPP3PP/R4RK1",
        },
        {
          name: "King's Gambit Accepted: McDonnell Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/8/2B1Ppp1/2N2N2/PPPP2PP/R1BQK2R",
        },
        {
          name: "King's Gambit Accepted: Middleton Countergambit",
          fen: "rn1qkbnr/ppp2p2/3p4/6p1/2B1Ppp1/5N2/PPPP2P1/RNBQ1RK1",
        },
        {
          name: "King's Gambit Accepted: Muzio Gambit Accepted, From's Defense",
          fen: "rnb1kbnr/ppppqp1p/8/8/2B1Pp2/5Q2/PPPP2PP/RNB2RK1",
        },
        {
          name: "King's Gambit Accepted: Muzio Gambit, Brentano Defense",
          fen: "rnbqkbnr/ppp2p1p/8/3p4/2B1Ppp1/5N2/PPPP2PP/RNBQ1RK1",
        },
        {
          name: "King's Gambit Accepted: Muzio Gambit, Holloway Defense",
          fen: "r1bqkbnr/pppp1p1p/2n5/8/2B1Pp2/5Q2/PPPP2PP/RNB2RK1",
        },
        {
          name: "King's Gambit Accepted: Muzio Gambit, Kling and Horwitz Counterattack",
          fen: "rnb1kbnr/ppppqp1p/8/8/2B1Ppp1/5N2/PPPP2PP/RNBQ1RK1",
        },
        {
          name: "King's Gambit Accepted: Muzio Gambit, Sarratt Defense",
          fen: "rnb1kbnr/pppp1p1p/5q2/8/2B1Pp2/5Q2/PPPP2PP/RNB2RK1",
        },
        {
          name: "King's Gambit Accepted: Muzio Gambit, Wild Muzio Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/8/2B1Ppp1/5N2/PPPP2PP/RNBQ1RK1",
        },
        {
          name: "King's Gambit Accepted: Quade Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/6p1/4Pp2/2N2N2/PPPP2PP/R1BQKB1R",
        },
        {
          name: "King's Gambit Accepted: Rosentreter Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/6p1/3PPp2/5N2/PPP3PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Rosentreter Gambit, Bird Gambit",
          fen: "rnb1kbnr/pppp1p1p/8/4N3/3PPppq/6P1/PPP4P/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Rosentreter Gambit, S\xf6rensen Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/8/3PPpp1/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "King's Gambit Accepted: Rosentreter Gambit, Testa Variation",
          fen: "rnbqkbnr/pppp1p1p/8/8/3PPBp1/5N2/PPP3PP/RN1QKB1R",
        },
        {
          name: "King's Gambit Accepted: Salvio Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/4N3/2B1Ppp1/8/PPPP2PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Salvio Gambit, Anderssen Counterattack",
          fen: "rnb1kb1r/ppp2p1p/3p3n/4N3/2BPPppq/8/PPP3PP/RNBQ1K1R",
        },
        {
          name: "King's Gambit Accepted: Salvio Gambit, Cochrane Gambit",
          fen: "rnb1kbnr/pppp1p1p/8/4N3/2B1P1pq/5p2/PPPP2PP/RNBQ1K1R",
        },
        {
          name: "King's Gambit Accepted: Salvio Gambit, Santa Maria Defense",
          fen: "rnb1kb1r/pppp1p1p/5n2/4N3/2B1Pppq/8/PPPP2PP/RNBQ1K1R",
        },
        {
          name: "King's Gambit Accepted: Salvio Gambit, Silberschmidt Defense",
          fen: "rnb1kb1r/pppp1p1p/7n/4N3/2B1Pppq/8/PPPP2PP/RNBQ1K1R",
        },
        {
          name: "King's Gambit Accepted: Salvio Gambit, Viennese Variation",
          fen: "r1b1kbnr/pppp1p1p/2n5/4N3/2B1Pppq/8/PPPP2PP/RNBQ1K1R",
        },
        {
          name: "King's Gambit Accepted: Silberschmidt Gambit",
          fen: "rnb1kb1r/pppp1p1p/7n/4N3/2BPP1pq/5p2/PPP3PP/RNBQ1K1R",
        },
        {
          name: "King's Gambit Accepted: S\xf6rensen Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/4N3/3PPpp1/8/PPP3PP/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Greco Gambit",
          fen: "rnbqk1nb/pp3p2/2pp4/4N1p1/2BPPp2/2N5/PPP3P1/R1BQK3",
        },
        {
          name: "King's Gambit Accepted: Hanstein Gambit",
          fen: "rnbqk1nr/pppp1pbp/8/6p1/2B1Pp2/5N2/PPPP2PP/RNBQ1RK1",
        },
        {
          name: "King's Gambit Accepted: Mayet Gambit",
          fen: "rnbqk1nr/ppp2pbp/3p4/6p1/2BPPp2/2P2N2/PP4PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Philidor Gambit",
          fen: "rnbqk1nr/pppp1pbp/8/6p1/2B1Pp1P/5N2/PPPP2P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Philidor Gambit, Schultz Variation",
          fen: "rnbqk1nr/ppp2pb1/3p3p/6p1/2BPPp1P/3Q1N2/PPP3P1/RNB1K2R",
        },
        {
          name: "King's Gambit Accepted: Traditional Variation",
          fen: "rnbqk1nr/pppp1pbp/8/6p1/2B1Pp2/5N2/PPPP2PP/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Allgaier Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/6N1/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Allgaier Gambit, Thorold Attack",
          fen: "rnbq1bnr/pppp1k2/7p/8/3PPppP/8/PPP3P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Allgaier Gambit, Urusov Attack",
          fen: "rnbq1bnr/pppp1k2/7p/8/2B1PppP/8/PPPP2P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Allgaier, Blackburne Gambit",
          fen: "rnbq1bnr/pppp1k2/7p/8/4PppP/2N5/PPPP2P1/R1BQKB1R",
        },
        {
          name: "King's Gambit Accepted: Allgaier, Cook Variation",
          fen: "rnbq1bnr/ppp3k1/7p/4B3/2BPp1pP/8/PPP3P1/RN1QK2R",
        },
        {
          name: "King's Gambit Accepted: Allgaier, Horny Defense",
          fen: "rnbq3r/pppp1k2/3b1n1p/8/4PQ1P/8/PPPP2P1/RNB1KB1R",
        },
        {
          name: "King's Gambit Accepted: Allgaier, Schlechter Defense",
          fen: "rnbqkb1r/pppp1p1p/5n2/6N1/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Allgaier, Urusov Attack",
          fen: "rnbq1bnr/ppp3k1/7p/3B4/3PPppP/8/PPP3P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/4N3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Anderssen Defense",
          fen: "rnbqk2r/ppp2p1p/3b1n2/3PN3/2B2ppP/8/PPPP2P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Anderssen-Cordel Gambit",
          fen: "rnbqk2r/ppp2p1p/3b4/3PN3/2BP1npP/8/PPP3P1/RN1QK2R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Berlin Defense",
          fen: "rnbqkb1r/pppp1p1p/5n2/4N3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Berlin Defense, Rubinstein Variation",
          fen: "rnbqkb1r/pppp1p1p/5n2/4N3/3PPppP/8/PPP3P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Berlin Defense, de Riviere Variation",
          fen: "rnbqkb1r/ppp2p1p/5n2/3p4/4PpNP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Brentano Defense",
          fen: "rnbqkbnr/ppp2p1p/8/3pN3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Brentano Defense",
          fen: "rnbqkb1r/ppp2p1p/5n2/3pN3/3PPBpP/8/PPP3P1/RN1QKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Brentano Defense, Caro Variation",
          fen: "rnbqkb1r/ppp2p1p/8/3pN3/3PnBpP/8/PPPN2P1/R2QKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Cotter Gambit",
          fen: "rnbqkbnr/pppp1N2/7p/8/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Kolisch Defense",
          fen: "rnbqkbnr/ppp2p1p/3p4/4N3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Long Whip",
          fen: "rnbqkbnr/pppp1p2/8/4N2p/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Neumann Defense",
          fen: "r1bqkbnr/pppp1p1p/2n5/4N3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Paulsen Defense",
          fen: "rnbqk1nr/pppp1pbp/8/4N3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Paulsen Defense Deferred",
          fen: "rnbqk2r/ppp2pbp/5n2/3PN3/2B2ppP/8/PPPP2P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Rice Gambit",
          fen: "rnbqk2r/ppp2p1p/5n2/3Pb3/2B2ppP/8/PPPP2P1/RNBQ1RK1",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky Gambit, Rosenthal Defense",
          fen: "rnb1kbnr/ppppqp1p/8/4N3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky, Long Whip Defense, Jaenisch Variation",
          fen: "rnbqk1n1/pppp1p1r/7b/4N2p/2BPPppP/2N5/PPP3P1/R1BQK2R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky, Polerio Defense",
          fen: "rnbqk1nr/ppppbp1p/8/4N3/4PppP/8/PPPP2P1/RNBQKB1R",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky, Rice Gambit",
          fen: "rnbqk2r/ppp2p1p/3b1n2/3PN3/2B2ppP/8/PPPP2P1/RNBQ1RK1",
        },
        {
          name: "King's Gambit Accepted: Kieseritzky, Salvio Defense, Cozio Variation",
          fen: "rnb1kbnr/ppppq2p/8/4Np2/2BPPppP/8/PPP3P1/RNBQK2R",
        },
        {
          name: "King's Gambit Accepted: King's Knight's Gambit",
          fen: "rnbqkbnr/pppp1p1p/8/6p1/4Pp1P/5N2/PPPP2P1/RNBQKB1R",
        },
        {
          name: "Elephant Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Elephant Gambit: Mar\xf3czy Gambit",
          fen: "rnbqk1nr/ppp2ppp/3b4/3Pp3/8/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Elephant Gambit: Paulsen Countergambit",
          fen: "rnbqkbnr/ppp2ppp/8/3P4/4p3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Elephant Gambit: Wasp Variation",
          fen: "rnb1kbnr/ppp2ppp/8/4N1q1/2B1p3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Gunderam Defense",
          fen: "rnb1kbnr/ppppqppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Knight Opening",
          fen: "rnbqkbnr/pppp1ppp/8/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Busch-Gass Gambit",
          fen: "rnbqk1nr/pppp1ppp/8/2b1p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Busch-Gass Gambit, Chiodini Gambit",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1N3/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Damiano Defense",
          fen: "rnbqkbnr/pppp2pp/5p2/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Damiano Defense, Damiano Gambit",
          fen: "rnb1kbnQ/ppppq2p/6p1/8/4P3/8/PPPP1PPP/RNB1KB1R",
        },
        {
          name: "King's Pawn Game: Damiano Defense, Damiano Gambit, Chigorin Gambit",
          fen: "rnb1kbnr/ppp1q1pp/5p2/3p4/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Gunderam Defense, Gunderam Gambit",
          fen: "rnb1kbnr/ppppq1pp/8/4pp2/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "King's Pawn Game: Gunderam Gambit",
          fen: "rnbqkbnr/pp1p1ppp/2p5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: La Bourdonnais Gambit",
          fen: "rnb1kbnr/pppp1ppp/6q1/4p3/2B1P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "King's Pawn Game: McConnell Defense",
          fen: "rnb1kbnr/pppp1ppp/5q2/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit Accepted",
          fen: "rnbqkbnr/pppp2pp/8/4pP2/8/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit Accepted: Bilguer Variation",
          fen: "rnb1kbnr/ppp3pp/3p1q2/5p2/2NPP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit Accepted: Bronstein Attack",
          fen: "rnb1kbnr/ppp3pp/3p1q2/8/2NPp3/8/PPP1BPPP/RNBQK2R",
        },
        {
          name: "Latvian Gambit Accepted: Bronstein Gambit",
          fen: "rnb1kbnr/ppp4p/3p1qp1/8/2NPp3/8/PPP1QPPP/RNB1KB1R",
        },
        {
          name: "Latvian Gambit Accepted: Foltys Variation",
          fen: "rnb1kbnr/pppp2pp/5q2/8/2N1p3/3P4/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit Accepted: Foltys-Leonhardt Variation",
          fen: "rnb1kbnr/pppp2pp/5q2/5p2/2N1P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit Accepted: Leonhardt Variation",
          fen: "rnb1kbnr/pppp2pp/5q2/8/2N1p3/2N5/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Latvian Gambit Accepted: Main Line",
          fen: "rnb1kbnr/pppp2pp/5q2/4Np2/3PP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit Accepted: Nimzowitsch Attack",
          fen: "rnb1kbnr/ppp3pp/3p1q2/8/3Pp3/4N3/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit: Behting Variation",
          fen: "rnb1kb1N/ppp3pp/5n2/3p4/2B1p3/8/PPPP1PqP/RNBQKR2",
        },
        {
          name: "Latvian Gambit: Corkscrew Countergambit",
          fen: "rnbqkb1r/pppp2pp/5n2/4N3/2B1p3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Latvian Gambit: Corkscrew Gambit",
          fen: "rnb1kb1N/ppp1q1pp/5n2/3p4/2B1p3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Latvian Gambit: Diepstraten Countergambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit: Fraser Defense",
          fen: "r1bqkbnr/pppp2pp/2n5/4Np2/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit: Greco Variation",
          fen: "rnb1kbnr/ppppq1pp/8/4Np2/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit: Lobster Gambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/4P1P1/5N2/PPPP1P1P/RNBQKB1R",
        },
        {
          name: "Latvian Gambit: Mason Countergambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Latvian Gambit: Mayet Attack",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Latvian Gambit: Mayet Attack, Morgado Defense",
          fen: "rnbqkb1r/pppp2pp/5n2/4pp2/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Latvian Gambit: Mayet Attack, Poisoned Pawn Variation",
          fen: "rnb1kbnr/pppp2pp/8/4N3/2BPp3/8/PPP2PqP/RNBQK2R",
        },
        {
          name: "Latvian Gambit: Mayet Attack, Polerio-Svedenborg Variation",
          fen: "rnbqkbnr/ppp3pp/8/3pN3/2B1p3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Latvian Gambit: Mayet Attack, Strautins Gambit",
          fen: "rnbqkbnr/p1pp2pp/8/1p2pp2/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Latvian Gambit: Mlotkowski Variation",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Latvian Gambit: Senechaud Gambit",
          fen: "rnbqkbnr/pppp2pp/8/4pp2/1P2P3/5N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense",
          fen: "rnbqkbnr/ppp2ppp/3p4/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense",
          fen: "rnbqk1nr/ppp1bppp/3p4/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Albin-Blackburne Gambit",
          fen: "r2qkbnr/pppn1ppp/3p4/4P3/4P1b1/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Berger Variation",
          fen: "r2q1rk1/pp2bppp/2npbn2/2p3B1/4P3/2N2N2/PPP1BPPP/R2QR1K1",
        },
        {
          name: "Philidor Defense: Bird Gambit",
          fen: "rnbqkbnr/ppp2ppp/3p4/8/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Boden Variation",
          fen: "rn1qkbnr/pppb1ppp/3p4/8/3QP3/5N2/PPP2PPP/RNB1KB1R",
        },
        {
          name: "Philidor Defense: Exchange Variation",
          fen: "rnbqkbnr/ppp2ppp/3p4/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Exchange Variation",
          fen: "rnbqkbnr/ppp2ppp/3p4/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Exchange Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Hanham Variation",
          fen: "r1bqkbnr/pppn1ppp/3p4/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Hanham Variation, Delmar Variation",
          fen: "r1bqkbnr/pp1n1ppp/2pp4/4p3/2BPP3/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Hanham Variation, Krause Variation",
          fen: "r1bqkbnr/pp1n1ppp/2pp4/4p3/2BPP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Philidor Defense: Hanham Variation, Schlechter Variation",
          fen: "r1bqkbnr/pp1n1ppp/2pp4/4p3/2BPP3/2N2N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Philidor Defense: Hanham Variation, Sharp Variation",
          fen: "r1bqkbnr/ppp2ppp/1n1p4/4p3/2BPP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Hanham Variation, Steiner Variation",
          fen: "r1bqk1nr/pp1nbppp/2pp4/4P3/2B1P3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Philidor Defense: Hanham, Kmoch Variation",
          fen: "r1bqkbnr/pp1n1ppp/2pp4/4p1N1/2BPP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Larsen Variation",
          fen: "rnbqkbnr/ppp2p1p/3p2p1/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Lion Variation",
          fen: "r1bqkb1r/pppn1ppp/3p1n2/4p3/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Philidor Defense: Lion Variation, Bishop Sacrifice",
          fen: "r1bqk2r/pppnbBpp/3p1n2/4p3/3PP3/2N2N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Philidor Defense: Lion Variation, Delayed Bishop Sacrifice",
          fen: "r1bqk2r/pppnbBpp/5n2/4p3/4P3/2N2N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Philidor Defense: Lion Variation, Forcing Line",
          fen: "r1bq2k1/pppnbrpp/3pNn2/4p3/3PP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Philidor Defense: Lion Variation, Lion's Claw, with Bc4 and h6",
          fen: "r1bqk2r/pppnbpp1/3p1n1p/4p3/2BPP3/2N2N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Philidor Defense: Lion Variation, Lion's Claw, with Be2 and c6",
          fen: "r1bqk2r/pp1nbppp/2pp1n2/4p3/3PP3/2N2N2/PPP1BPPP/R1BQ1RK1",
        },
        {
          name: "Philidor Defense: Lion Variation, Shirov Gambit",
          fen: "r1bqkb1r/pppn1ppp/3p1n2/4p3/3PP1P1/2N2N2/PPP2P1P/R1BQKB1R",
        },
        {
          name: "Philidor Defense: Lion Variation, Sozin Variation",
          fen: "r1bq1rk1/pp1nbppp/2pp1n2/8/P1BpP3/2N2N2/1PP1QPPP/R1B2RK1",
        },
        {
          name: "Philidor Defense: Lopez Countergambit",
          fen: "rnbqkbnr/ppp3pp/3p4/4pp2/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Lopez Countergambit, Jaenisch Variation",
          fen: "rnbqkb1r/ppp3pN/3p3n/5p2/2BpP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Morphy Gambit",
          fen: "rnbqkbnr/ppp2ppp/3p4/8/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Nimzowitsch Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Nimzowitsch Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/4P3/4P3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Nimzowitsch Variation, Klein Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/4p3/2BPP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Philidor Defense: Nimzowitsch Variation, Rellstab Variation",
          fen: "rnbqkb1r/ppp2ppp/3p4/3QP3/4n3/5N2/PPP2PPP/RNB1KB1R",
        },
        {
          name: "Philidor Defense: Nimzowitsch Variation, Sokolsky Variation",
          fen: "rnbqkb1r/ppp2ppp/3p4/4P3/4n3/5N2/PPPN1PPP/R1BQKB1R",
        },
        {
          name: "Philidor Defense: Nimzowitsch, Larobok Variation",
          fen: "r1bq1rk1/pppnbBpp/3p1n2/4p1N1/3PP3/2N5/PPP2PPP/R1BQK2R",
        },
        {
          name: "Philidor Defense: Nimzowitsch, Locock Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/4p1N1/3PP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Paulsen Attack",
          fen: "rnbqkbnr/ppp2ppp/8/3P4/3N4/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Philidor Countergambit",
          fen: "rnbqkbnr/ppp3pp/3p4/4pp2/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Philidor Countergambit, Berger Variation",
          fen: "rnbqk1nr/ppp3pp/4P3/2bp2N1/4p3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Philidor Defense: Philidor Countergambit, Zukertort Variation",
          fen: "rnbqkbnr/ppp3pp/3p4/4pp2/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Philidor Defense: Philidor Countergambit, del Rio Attack",
          fen: "rnbqkbnr/ppp3pp/4P3/3p2N1/4p3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Philidor Gambit",
          fen: "rn1qkbnr/pppb1ppp/3p4/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Philidor Defense: Steinitz Variation",
          fen: "rnbqk1nr/ppp1bppp/3p4/4p3/2B1P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Russian Game",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game",
          fen: "rnbqkb1r/pppp1ppp/5n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/8/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game",
          fen: "rnbqkb1r/ppp2ppp/3p4/8/4n3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Classical Attack",
          fen: "rnbqkb1r/ppp2ppp/3p4/8/3Pn3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Classical Attack, Berger Variation",
          fen: "r2qk2r/ppp1b1pp/2n5/3p1p2/3Pn1b1/2PB1N2/PP1N1PPP/R1BQR1K1",
        },
        {
          name: "Russian Game: Classical Attack, Chigorin Variation",
          fen: "r1bqk2r/ppp1bppp/2n5/3p4/3Pn3/3B1N2/PPP2PPP/RNBQR1K1",
        },
        {
          name: "Russian Game: Classical Attack, Chigorin Variation, Browne Attack",
          fen: "r1bqk2r/ppp1bppp/8/3P4/1n1Pn3/3B1N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Russian Game: Classical Attack, Chigorin Variation, Main Line",
          fen: "r1bqk2r/ppp1bppp/8/3p4/1nPPn3/5N2/PP2BPPP/RNBQ1RK1",
        },
        {
          name: "Russian Game: Classical Attack, Closed Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/8/3P4/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Classical Attack, Jaenisch Variation",
          fen: "r1bqk2r/ppp1bppp/2n5/3p4/2PPn3/3B1N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Russian Game: Classical Attack, Krause Variation",
          fen: "r2qk2r/ppp1b1pp/2n5/3p1p2/2PPn1b1/3B1N2/PP3PPP/RNBQR1K1",
        },
        {
          name: "Russian Game: Classical Attack, Marshall Trap",
          fen: "rn1q1rk1/ppp3pp/8/3P1p2/3Pn1b1/3B1N2/PP3PPb/RNBQR1K1",
        },
        {
          name: "Russian Game: Classical Attack, Marshall Variation",
          fen: "rnbqk2r/ppp2ppp/3b4/3p4/3Pn3/3B1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Classical Attack, Marshall Variation, Chinese Gambit",
          fen: "rn1q1rk1/pp3ppp/2pb4/3p4/2PPn1b1/3B1N2/PP3PPP/RNBQR1K1",
        },
        {
          name: "Russian Game: Classical Attack, Mar\xf3czy Variation",
          fen: "r2qk2r/ppp3pp/2n5/3p1p2/2PPn1bb/3B1N2/PP3PPP/RNBQR1K1",
        },
        {
          name: "Russian Game: Classical Attack, Mason Variation",
          fen: "rnbq1rk1/ppp1bppp/8/3p4/3Pn3/3B1N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Russian Game: Classical Attack, Mason-Showalter Variation",
          fen: "r1bqkb1r/ppp2ppp/2n5/3p4/3Pn3/3B1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Classical Attack, Staunton Variation",
          fen: "rnbq1rk1/pp3ppp/2pb4/3p4/2PPn3/3B1N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Russian Game: Classical Attack, Tarrasch Variation",
          fen: "rn1q1rk1/ppp2ppp/3b4/3p4/2PPn1b1/3B1N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Russian Game: Cochrane Gambit",
          fen: "rnbqkb1r/ppp2Npp/3p1n2/8/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Cochrane Gambit, Bishop Check Line",
          fen: "rnbq1b1r/ppp2kpp/3p1n2/8/2B1P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Cochrane Gambit, Center Variation",
          fen: "rnbq1b1r/ppp2kpp/3p1n2/8/3PP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Cozio Attack",
          fen: "rnbqkb1r/ppp2ppp/3p4/8/4n3/5N2/PPPPQPPP/RNB1KB1R",
        },
        {
          name: "Russian Game: Damiano Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4N3/4n3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Damiano Variation, Kholmov Gambit",
          fen: "rnb1kb1r/ppppqppp/8/4N3/4n3/8/PPPPQPPP/RNB1KB1R",
        },
        {
          name: "Russian Game: French Attack",
          fen: "rnbqkb1r/ppp2ppp/3p4/8/4n3/3P1N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Italian Variation",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Karklins-Martinovsky Variation",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/8/4P3/3N4/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Kaufmann Attack",
          fen: "rnbqkb1r/ppp2ppp/3p4/8/2P1n3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Millennium Attack",
          fen: "rnbqkb1r/ppp2ppp/3p4/8/4n3/3B1N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Moody Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/3PP3/5N2/PPP1QPPP/RNB1KB1R",
        },
        {
          name: "Russian Game: Nimzowitsch Attack",
          fen: "rnbqkb1r/ppp2ppp/3p4/8/4n3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Russian Game: Paulsen Attack",
          fen: "rnbqkb1r/ppp2ppp/3p1n2/8/2N1P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Stafford Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4N3/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Stafford Gambit",
          fen: "r1bqkb1r/ppp2ppp/2p2n2/8/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Three Knights Game",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Bishop's Opening: Urusov Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Bishop's Opening: Urusov Gambit, Keidansky Gambit",
          fen: "rnbqkb1r/pppp1ppp/8/8/2BQn3/5N2/PPP2PPP/RNB1K2R",
        },
        {
          name: "Russian Game: Modern Attack",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Modern Attack",
          fen: "rnbqkb1r/pppp1ppp/5n2/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Modern Attack, Bardeleben Variation",
          fen: "r1bqkb1r/pppp1ppp/2n5/2n1P3/3N4/8/PPP1QPPP/RNB1KB1R",
        },
        {
          name: "Russian Game: Modern Attack, Center Attack",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/3Qn3/5N2/PPP2PPP/RNB1KB1R",
        },
        {
          name: "Russian Game: Modern Attack, Center Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4p3/3Pn3/3B1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Modern Attack, Murrey Variation",
          fen: "r1bqkb1r/pppp1ppp/2n5/4p3/3Pn3/3B1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Modern Attack, Steinitz Variation",
          fen: "rnbqkb1r/pppp1ppp/8/4P3/3pn3/5N2/PPP1QPPP/RNB1KB1R",
        },
        {
          name: "Russian Game: Modern Attack, Symmetrical Variation",
          fen: "rnbqkb1r/ppp2ppp/5n2/3pp3/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Russian Game: Modern Attack, Tal Gambit",
          fen: "rnbqkb1r/pppp1ppp/8/1B2P3/3pn3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Russian Game: Modern Attack, Trifunovic Variation",
          fen: "rnbq1rk1/ppp2ppp/8/3pb3/2PPn3/3B4/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Dresden Opening: The Goblin",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4N3/2P1P3/8/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Irish Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/4N3/4P3/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Knight Opening: Konstantinopolsky",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5NP1/PPPP1P1P/RNBQKB1R",
        },
        {
          name: "King's Knight Opening: Normal Variation",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Dresden Opening",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/2P1P3/5N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Pachman Wing Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/1P2P3/5N2/P1PP1PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Schulze-M\xfcller Gambit",
          fen: "r1bqkbnr/pppp1ppp/8/4n3/3PP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "King's Pawn Game: Tayler Opening",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/5N2/PPPPBPPP/RNBQK2R",
        },
        {
          name: "King's Pawn Game: Tayler Opening",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/3PP3/5N2/PPP1BPPP/RNBQK2R",
        },
        {
          name: "King's Pawn Game: Tayler Opening, Basman Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4P3/3p4/5N2/PPP1BPPP/RNBQK2R",
        },
        {
          name: "King's Pawn Game: Tayler Opening, Inverted Hanham",
          fen: "r1bqkb1r/ppp2ppp/2n2n2/3pp3/4P3/3P1N2/PPPNBPPP/R1BQK2R",
        },
        {
          name: "Latvian Gambit: Clam Gambit",
          fen: "r1bqkbnr/pppp2pp/2n5/4pP2/8/3P1N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Ponziani Opening",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Ponziani Opening: Caro Gambit",
          fen: "r2qkbnr/pppb1ppp/2n5/3pp3/Q3P3/2P2N2/PP1P1PPP/RNB1KB1R",
        },
        {
          name: "Ponziani Opening: Jaenisch Counterattack",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Ponziani Opening: Leonhardt Variation",
          fen: "r1bqkb1r/ppp2ppp/2n2n2/3pp3/Q3P3/2P2N2/PP1P1PPP/RNB1KB1R",
        },
        {
          name: "Ponziani Opening: Neumann Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ponziani Opening: Ponziani Countergambit",
          fen: "r1bqkbnr/pppp2pp/2n5/4pp2/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Ponziani Opening: Ponziani Countergambit, Schmidt Attack",
          fen: "r1bqkbnr/ppp3pp/2np4/3Ppp2/4P3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Ponziani Opening: Romanishin Variation",
          fen: "r1bqk1nr/ppppbppp/2n5/4p3/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Ponziani Opening: R\xe9ti Variation",
          fen: "r1bqkb1r/ppppnppp/2n5/4p3/4P3/2P2N2/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Ponziani Opening: Spanish Variation",
          fen: "r1bqkbnr/ppp2ppp/2n5/1B1pp3/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ponziani Opening: Spanish Variation, Harrwitz Attack, Nikitin Gambit",
          fen: "r1b1kbnr/ppp2ppp/2n5/1B1qN3/Q3p3/2P5/PP1P1PPP/RNB1K2R",
        },
        {
          name: "Ponziani Opening: Steinitz Variation",
          fen: "r1bqkbnr/ppp3pp/2n2p2/3pp3/Q3P3/2P2N2/PP1P1PPP/RNB1KB1R",
        },
        {
          name: "Ponziani Opening: Vukovic Gambit",
          fen: "r1bqk2r/pppp1ppp/2n5/2bPp3/4n3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/3PP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/3pP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Benima Defense",
          fen: "r1bqk1nr/ppppbppp/2n5/8/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Cochrane Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/b3P3/2B5/2P2N2/P4PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Cochrane-Shumov Defense",
          fen: "r1bq3r/ppp2k1p/2n3p1/2Qp4/3pP3/8/PPP2PPP/RNB1K2R",
        },
        {
          name: "Scotch Game: G\xf6ring Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: G\xf6ring Gambit, Bardeleben Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/8/1bB1P3/2N2N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Scotch Game: G\xf6ring Gambit, Double Pawn Sacrifice",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/2B1P3/2p2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: G\xf6ring Gambit, Main Line",
          fen: "r1bqk1nr/pppp1ppp/2n5/8/1b2P3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Scotch Game: Hanneken Variation",
          fen: "r1bq1rk1/pppp1ppp/5n2/4n1N1/1bB5/8/PB3PPP/RN1Q1RK1",
        },
        {
          name: "Scotch Game: Haxo Gambit",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b5/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Lolli Variation",
          fen: "r1bqkbnr/pppp1ppp/8/4p3/3nP3/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Napoleon Gambit",
          fen: "r1bqkbnr/pppp1ppp/8/8/2BpP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Relfsson Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/1B6/3pP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Scotch Gambit",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Scotch Gambit, Advance Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4P3/2Bp4/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Scotch Gambit, Cochrane-Anderssen Variation",
          fen: "r2qk1nr/ppp2ppp/2np4/2b5/2BpP1b1/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Scotch Game: Scotch Gambit, Dubois R\xe9ti Defense",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/8/2BpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Scotch Gambit, G\xf6ring Gambit Declined",
          fen: "r1bqkbnr/ppp2ppp/2n5/3p4/3pP3/2P2N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Scotch Gambit, Kingside Variation",
          fen: "r1bqkb1r/pppp1ppp/2n5/4P3/2Bp2n1/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Scotch Gambit, London Defense",
          fen: "r1bqk1nr/pppp1ppp/2n5/8/1bBpP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Scotch Gambit, Sarratt Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b3N1/2BpP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Scotch Game: Sea-Cadet Mate",
          fen: "r2q1bnr/ppp1kBpp/3p4/3NN3/4P3/8/PP3PPP/R1Bb1RK1",
        },
        {
          name: "Scotch Game: Vitzthum Attack",
          fen: "r1bqk2r/pppp1ppp/2n4n/2b3NQ/2BpP3/8/PPP2PPP/RNB1K2R",
        },
        {
          name: "Scotch Game",
          fen: "r1bqkbnr/pppp1ppp/2n5/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game",
          fen: "r1b1k1nr/pppp1ppp/2n5/1N6/1b2P2q/8/PPPB1PPP/RN1QKB1R",
        },
        {
          name: "Scotch Game: Alekhine Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4P3/3N4/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Blumenfeld Attack",
          fen: "r1b1k1nr/pppp1ppp/2n2q2/1Nb5/4P3/4B3/PPP2PPP/RN1QKB1R",
        },
        {
          name: "Scotch Game: Braune Variation",
          fen: "r1b1kbnr/pppp1ppp/2n5/8/3NP2q/4B3/PPP2PPP/RN1QKB1R",
        },
        {
          name: "Scotch Game: Classical Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b5/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Classical Variation, Blackburne Attack",
          fen: "r1b1k2r/ppppnppp/2n2q2/2b5/3NP3/2P1B3/PP1Q1PPP/RN2KB1R",
        },
        {
          name: "Scotch Game: Classical Variation, Intermezzo Variation",
          fen: "r1b1k1nr/pppp1ppp/2N2q2/2b5/4P3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Classical Variation, Millennium Variation",
          fen: "r1b1k1nr/pppp1ppp/2n3q1/2b5/3NP3/2P1B3/PP3PPP/RN1QKB1R",
        },
        {
          name: "Scotch Game: Fraser Variation",
          fen: "r1b1kbnr/pppp1ppp/2n5/8/4P2q/5N2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Ghulam-Kassim Variation",
          fen: "r1bqkbnr/ppp2ppp/3p4/8/3QP3/3B4/PPP2PPP/RNB1K2R",
        },
        {
          name: "Scotch Game: Gottschall Variation",
          fen: "1rb2rk1/pp3ppp/5q2/3P4/1n6/2P1Q3/PP3PPP/RN2KB1R",
        },
        {
          name: "Scotch Game: Horwitz Attack",
          fen: "r1b1kbnr/pppp1ppp/2n5/1N6/4P2q/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Horwitz Attack, Blackburne Variation",
          fen: "r1bk2nr/pppp1ppp/2n5/1N6/4q3/8/PPPQBPPP/RN3RK1",
        },
        {
          name: "Scotch Game: Malaniuk Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/8/1b1NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Meitner Variation",
          fen: "r1b1k2r/ppppnppp/2n2q2/2b5/4P3/2P1B3/PPN2PPP/RN1QKB1R",
        },
        {
          name: "Scotch Game: Mieses Variation",
          fen: "r1bqkb1r/p1pp1ppp/2p2n2/4P3/8/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Modern Defense",
          fen: "r1b1k1nr/pppp1ppp/2n5/8/1b1NP2q/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scotch Game: Paulsen Attack",
          fen: "r1b1k2r/ppppnppp/2n2q2/1Bb5/3NP3/2P1B3/PP3PPP/RN1QK2R",
        },
        {
          name: "Scotch Game: Paulsen Variation",
          fen: "r1b1kbnr/pppp1ppp/2n5/5N2/4P2q/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Paulsen, Gunsberg Defense",
          fen: "r1bnk2r/ppppnppp/5q2/1Bb5/3NP3/2P1B3/PP3PPP/RN1QK2R",
        },
        {
          name: "Scotch Game: Potter Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b5/4P3/1N6/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Romanishin Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/8/1b2P3/1N6/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Rosenthal Variation",
          fen: "r1bk2nr/pppp1ppp/2n3q1/1N6/8/8/PPPNBPPP/R2Q1RK1",
        },
        {
          name: "Scotch Game: Schmidt Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/8/3NP3/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Steinitz Variation",
          fen: "r1b1kbnr/pppp1ppp/2n5/8/3NP2q/8/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Scotch Game: Steinitz Variation",
          fen: "r1b1kbnr/pppp1ppp/2n5/8/3NP2q/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Scotch Game: Tartakower Variation",
          fen: "r1bqkb1r/p1pp1ppp/2p2n2/8/4P3/8/PPPN1PPP/R1BQKB1R",
        },
        {
          name: "Three Knights Opening",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Three Knights Opening",
          fen: "r1bqk1nr/pppp1ppp/2n5/4p3/1b2P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Three Knights Opening: Schlechter Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/3Np3/1b2P3/5N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Three Knights Opening: Steinitz Defense",
          fen: "r1bqkbnr/pppp1p1p/2n3p1/4p3/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Three Knights Opening: Steinitz-Rosenthal Variation",
          fen: "r1bqkbnr/pppp1p1p/2n3p1/3N4/3pP3/5N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Three Knights Opening: Winawer Defense",
          fen: "r1bqkbnr/pppp2pp/2n5/4pp2/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/4P3/2N2N2/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Gunsberg Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/4P3/P1N2N2/1PPP1PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Halloween Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4N3/4P3/2N5/PPPP1PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Halloween Gambit, Oldtimer Variation",
          fen: "r1bqk1nr/pppp2pp/6n1/4Pp2/1bBP4/2N2Q2/PPP2PPP/R1B1K2R",
        },
        {
          name: "Four Knights Game: Halloween Gambit, Plasma Variation",
          fen: "1rb1kbnr/pp1p1ppp/3P1qn1/1N6/5P2/8/PPP3PP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Italian Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Italian Variation, Noa Gambit",
          fen: "r1bqkb1r/pppp1Bpp/2n5/4p3/4n3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Scotch Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/3PP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Scotch Variation Accepted",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/8/3pP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Scotch Variation, Belgrade Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/3N4/3pP3/5N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Scotch Variation, Belgrade Gambit, Modern Defense",
          fen: "r1bqkb1r/pppp2pp/2n5/3N1p2/3pn3/5N2/PPP1QPPP/R1B1KB1R",
        },
        {
          name: "Four Knights Game: Scotch Variation, Krause Gambit",
          fen: "r1bqk2r/pppp1ppp/2n2n2/4N3/1b1PP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Scotch Variation, Krause Gambit, Leonhardt Defense",
          fen: "r1b1k2r/ppppqppp/2n2n2/4N3/1b1PP3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Scotch Variation, Oxford Gambit",
          fen: "r1bqk2r/pppp1ppp/5n2/3Pp3/1b1nP3/2N2N2/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Scotch Variation, Schmid Defense",
          fen: "r1bqkb1r/pppp1ppp/2n5/8/3Nn3/2N5/PPP2PPP/R1BQKB1R",
        },
        {
          name: "Four Knights Game: Bardeleben Variation",
          fen: "r1bq1rk1/pppp1ppp/2n2n2/1B2P3/1b1P1P2/2N5/PPP3PP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Marshall Variation",
          fen: "r1bq1rk1/pppp1ppp/5n2/1Bb1N3/3nP3/2N5/PPPP1PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Ranken Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1B2n2/4p3/4P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Rubinstein Countergambit",
          fen: "r1bqkb1r/pppp1ppp/5n2/4p3/3nP3/2N2N2/PPPPBPPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Rubinstein Countergambit, Henneberger Variation",
          fen: "r1bqkb1r/pppp1ppp/5n2/1B2p3/3nP3/2N2N2/PPPP1PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Rubinstein Countergambit, Mar\xf3czy Variation",
          fen: "r1bq1rk1/ppp2ppp/1b1p1n2/4p3/N3P3/3P1B2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Spanish Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Spanish Variation, Classical Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/1Bb1p3/4P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Spanish Variation, Classical Variation, Marshall Gambit",
          fen: "r1bq1rk1/pppp1ppp/5n2/2b1N3/B2nP3/2N5/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Spanish Variation, Rubinstein Variation",
          fen: "r1bqkb1r/pppp1ppp/5n2/1B2p3/3nP3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Spanish Variation, Rubinstein Variation",
          fen: "r1b1kb1r/ppppqppp/5n2/1B2N3/3nPP2/2N5/PPPP2PP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Spanish Variation, Rubinstein Variation Accepted",
          fen: "r1bqkb1r/pppp1ppp/5n2/1B2p3/3NP3/2N5/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Spielmann Variation",
          fen: "r3kb1r/1pp2ppp/p1p1b3/3q4/3PN3/8/PPP2PPP/R1BQR1K1",
        },
        {
          name: "Four Knights Game: Alatortsev Variation",
          fen: "r1b2rk1/ppp1qppp/2n2n2/1B1pp3/1b2P3/3P1N2/PPP1NPPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Double Spanish",
          fen: "r1bqk2r/pppp1ppp/2n2n2/1B2p3/1b2P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Four Knights Game: Double Spanish",
          fen: "r1bq1rk1/pppp1ppp/2n2n2/1B2p3/1b2P3/2NP1N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Gunsberg Counterattack",
          fen: "r1bq1rk1/pppp1ppp/2n5/1B1P4/1b2p3/5N2/PPPP1PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Janowski Variation",
          fen: "r1bq1rk1/ppp2ppp/2np1n2/1B2p3/4P3/2PP1N2/P1P2PPP/R1BQR1K1",
        },
        {
          name: "Four Knights Game: Nimzowitsch Variation",
          fen: "r1bq1rk1/pppp1ppp/2B2n2/4p3/1b2P3/2N2N2/PPPP1PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Spanish Variation",
          fen: "r1bq1rk1/pppp1ppp/2n2n2/1B2p3/4P3/2bP1N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Spanish Variation, Symmetrical Variation",
          fen: "r1bq1rk1/ppp2ppp/2np1n2/1B2p3/1b2P3/2NP1N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Spanish Variation, Symmetrical Variation",
          fen: "r2n1rk1/ppp1qppp/3p1n2/1B2p1B1/3PP1b1/2P2N2/P1P2PPP/R2QR1K1",
        },
        {
          name: "Four Knights Game: Spanish Variation, Symmetrical Variation",
          fen: "r1bq1rk1/ppp1nppp/3p1n2/1B2p1B1/1b2P3/2NP1N2/PPP2PPP/R2Q1RK1",
        },
        {
          name: "Four Knights Game: Spanish Variation, Symmetrical Variation",
          fen: "r1bq1rk1/ppp2ppp/2np1n2/1B2p3/1b2P3/3P1N2/PPP1NPPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Svenonius Variation",
          fen: "r1bq1rk1/ppp2ppp/2n2n2/1B1pp3/4P3/2PP1N2/P1P2PPP/R1BQ1RK1",
        },
        {
          name: "Four Knights Game: Symmetrical, Blake Variation",
          fen: "r1b2rk1/pp2nppp/2pq1n2/3pp1B1/1b2P2N/1BNP4/PPP2PPP/R2Q1RK1",
        },
        {
          name: "Four Knights Game: Symmetrical, Metger Unpin",
          fen: "r1b2rk1/ppp1qppp/2np1n2/1B2p1B1/4P3/2PP1N2/P1P2PPP/R2Q1RK1",
        },
        {
          name: "Four Knights Game: Symmetrical, Tarrasch Variation",
          fen: "r2q1rk1/ppp2ppp/2npbn2/1B2p1B1/1b2P3/2NP1N2/PPP2PPP/R2Q1RK1",
        },
        {
          name: "Four Knights Game: Italian Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Italian Game",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Anti-Fried Liver Defense",
          fen: "r1bqkbnr/pppp1pp1/2n4p/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Blackburne-Kostić Gambit",
          fen: "r1bqkbnr/pppp1ppp/8/4p3/2BnP3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Albin Gambit",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2P2N2/PP1P1PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Deutz Gambit",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2BPP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Giuoco Pianissimo",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Giuoco Pianissimo, Canal Variation",
          fen: "r1bqk2r/ppp2ppp/2np1n2/2b1p1B1/2B1P3/2NP1N2/PPP2PPP/R2QK2R",
        },
        {
          name: "Italian Game: Giuoco Pianissimo, Dubois Variation",
          fen: "r1bqk1nr/pppp2pp/2n5/2b1p1N1/2B1Pp2/3P4/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Giuoco Pianissimo, Italian Four Knights Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2NP1N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Italian Game: Giuoco Pianissimo, Lucchini Gambit",
          fen: "r1bqk1nr/pppp2pp/2n5/2b1pp2/2B1P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Giuoco Pianissimo, Normal",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Giuoco Piano",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Hungarian Defense",
          fen: "r1bqk1nr/ppppbppp/2n5/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Hungarian Defense, Tartakower Variation",
          fen: "r1bqk2r/ppppbppp/2n5/4P3/2Bpn3/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Jerome Gambit",
          fen: "r1bqk1nr/pppp1Bpp/2n5/2b1p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Paris Defense",
          fen: "r1bqkbnr/ppp2ppp/2np4/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Rosentreter Gambit",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1p3/2BPP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Rousseau Gambit",
          fen: "r1bqkbnr/pppp2pp/2n5/4pp2/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1p3/1PB1P3/5N2/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit",
          fen: "r2qk1nr/ppp2ppp/1bnp4/8/2BPP1b1/2N2N2/P4PPP/R1BQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit Accepted",
          fen: "r1bqk1nr/pppp1ppp/2n5/4p3/1bB1P3/5N2/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined",
          fen: "r1bqk1nr/pppp1ppp/1bn5/4p3/1PB1P3/5N2/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined",
          fen: "r1bqk1nr/pppp1ppp/1bn5/4p3/PPB1P3/5N2/2PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined, Cordel Variation",
          fen: "r1bqk1nr/pppp1ppp/1bn5/4p3/1PB1P3/5N2/PBPP1PPP/RN1QK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined, Hicken Variation",
          fen: "r1bk2nr/pppp1Qpp/1b6/nP2q3/2B1P3/8/PBPP1PPP/RN2K2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined, Hirschbach Variation",
          fen: "r1b1k1nr/pppp1ppp/1b6/nP2N1q1/2B1P3/8/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined, Lange Variation",
          fen: "r1bqk2r/pppp1ppp/1b5n/nP2N3/2B1P3/8/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined, Pavlov Variation",
          fen: "r1b3r1/ppp2k1p/1b6/nP2B1q1/3PP3/8/P1PN1PPP/R2QK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined, Showalter Variation",
          fen: "r1bqk1nr/1ppp1ppp/pbn5/4p3/PPB1P3/2N2N2/2PP1PPP/R1BQK2R",
        },
        {
          name: "Italian Game: Evans Gambit Declined, Vasquez Variation",
          fen: "r1b3nr/ppppkBpp/1b6/nP2N1qQ/4P3/8/P1PP1PPP/RNB1K2R",
        },
        {
          name: "Italian Game: Evans Gambit, Anderssen Variation",
          fen: "r1bqk1nr/ppppbppp/2n5/4p3/2B1P3/2P2N2/P2P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Anderssen Variation, Cordel Line",
          fen: "r1bqk1nr/ppppbppp/8/n3p3/2BPP3/2P2N2/P4PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Fontaine Countergambit",
          fen: "r1bqk1nr/p1pp1ppp/2n5/1pb1p3/1PB1P3/5N2/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Fraser Attack",
          fen: "r2qk1nr/ppp2ppp/1bnp4/8/Q1BPP1b1/2N2N2/P4PPP/R1B2RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Fraser-Mortimer Attack",
          fen: "r2q1knr/pppb1Bpp/1b1p4/n7/3PP3/2N2N2/P1Q2PPP/R1B2RK1",
        },
        {
          name: "Italian Game: Evans Gambit, G\xf6ring Attack",
          fen: "r1bqk1nr/ppp2ppp/1b1p4/n5B1/2BPP3/2N2N2/P4PPP/R2Q1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Harding Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/8/1bBPP3/5N2/P2B1PPP/RN1QK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Hein Countergambit",
          fen: "r1bqk1nr/ppp2ppp/2n5/2bpp3/1PB1P3/5N2/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Mayet Defense",
          fen: "r1bqkbnr/pppp1ppp/2n5/4p3/2B1P3/2P2N2/P2P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, McDonnell Defense",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/2P2N2/P2P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, McDonnell Defense, Main Line",
          fen: "r1bqk1nr/ppp2ppp/1bnp4/8/2BPP3/5N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Morphy Attack",
          fen: "r1bqk1nr/ppp2ppp/1bnp4/8/2BPP3/2N2N2/P4PPP/R1BQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Mortimer-Evans Gambit",
          fen: "r2q2nr/pppb1kpp/1b1p4/n7/3PP3/2N2N2/P1Q2PPP/R1B2RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Paulsen Variation",
          fen: "r1bqk2r/ppp1nppp/1b1p4/n2P4/2B1P3/5N2/PB3PPP/RN1Q1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Steinitz Variation",
          fen: "r1bqk1nr/ppp3pp/1b1p1p2/n7/2BPP3/2N1BN2/P4PPP/R2Q1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Stone-Ware Variation",
          fen: "r1bqk1nr/pppp1ppp/2nb4/4p3/2B1P3/2P2N2/P2P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Ulvestad Variation",
          fen: "r1bqk1nr/ppp2ppp/1b1p4/n2P4/2B1P3/5N2/PB3PPP/RN1Q1RK1",
        },
        {
          name: "Italian Game: Evans Gambit",
          fen: "r1bqk1nr/ppp2ppp/2np4/b3p3/2B1P3/2P2N2/P2P1PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Alapin-Steinitz Variation",
          fen: "r2qk1nr/ppp2ppp/2np4/b3p3/2BPP1b1/2P2N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Anderssen Defense",
          fen: "r1bqk2r/pppp1ppp/2n2n2/b7/2BpP3/2P2N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Bronstein Defense",
          fen: "r1bqk1nr/ppp2ppp/2np4/b3p3/2BPP3/2P2N2/P4PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Compromised Defense",
          fen: "r1bqk1nr/pppp1ppp/2n5/b7/2B1P3/2p2N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Compromised Defense, Main Line",
          fen: "r1b1k2r/ppppnppp/2n3q1/b3P3/2B5/BQN2N2/P4PPP/R4RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Compromised Defense, Potter Variation",
          fen: "r1b1k2r/ppppnppp/2n3q1/b3P3/2B5/1QN2N2/P4PPP/R1BR2K1",
        },
        {
          name: "Italian Game: Evans Gambit, Dufresne Defense",
          fen: "r1bqk1nr/pppp1ppp/2n5/b7/2B1P3/2Pp1N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Johner Defense",
          fen: "r1bqk1nr/p1pp1ppp/2n5/bp6/2BpP3/2P2N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Laroche Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/b3p3/2BPP3/2P2N2/P4PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Lasker Defense",
          fen: "r1bqk1nr/ppp2ppp/1bnp4/4p3/2BPP3/2P2N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Leonhardt Countergambit",
          fen: "r1bqk1nr/p1pp1ppp/2n5/bp2p3/2BPP3/2P2N2/P4PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Levenfish Variation",
          fen: "r1b1k1nr/pppq1ppp/1b6/n3N3/2B1P3/BQP5/P4PPP/RN3RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Main Line",
          fen: "r1bqk1nr/pppp1ppp/2n5/b3p3/2B1P3/2P2N2/P2P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Mieses Defense",
          fen: "r1bqk2r/ppppnppp/2n5/b7/2BpP3/2P2N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Pierce Defense",
          fen: "r1bqk1nr/pppp1ppp/2n5/b7/2BpP3/2P2N2/P4PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Richardson Attack",
          fen: "r1bq1rk1/pppp1ppp/2n2n2/b3N3/2BPP3/2P5/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Sanders-Alapin Variation",
          fen: "r2qk1nr/pppb1ppp/2np4/b3p3/2BPP3/2P2N2/P4PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Slow Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/b3p3/2B1P3/2P2N2/P2P1PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Evans Gambit, Sokolsky Variation",
          fen: "r1bqk1nr/ppp2ppp/2np4/b3p1B1/2BPP3/2P2N2/P4PPP/RN1QK2R",
        },
        {
          name: "Italian Game: Evans Gambit, Tartakower Attack",
          fen: "r1bqk1nr/ppp2ppp/2np4/b3p3/2BPP3/1QP2N2/P4PPP/RNB1K2R",
        },
        {
          name: "Italian Game: Evans Gambit, Waller Attack",
          fen: "r1bqk1nr/ppp2ppp/2np4/b7/2BpP3/1QP2N2/P4PPP/RNB2RK1",
        },
        {
          name: "Italian Game: Bird's Attack",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/1PB1P3/2P2N2/P2P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/2b1p3/2B1P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Alexandre Gambit",
          fen: "r1bqk1nr/pppp2pp/2n5/2b1pp2/2B1P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Center Attack",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2BPP3/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Center Holding Variation",
          fen: "r1b1k1nr/ppppqppp/1bn5/4p3/2BPP3/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Closed Variation",
          fen: "r1b1k1nr/ppppqppp/2n5/2b1p3/2B1P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Giuoco Pianissimo",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/2PP1N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Giuoco Pianissimo, Main Line",
          fen: "r1bq1rk1/bpp2ppp/p1np1n2/4p3/4P3/1BPP1N1P/PP3PP1/RNBQR1K1",
        },
        {
          name: "Italian Game: Classical Variation, Greco Gambit",
          fen: "r1bqk2r/ppp2ppp/2n2n2/2bpP3/2Bp4/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Greco Gambit, Anderssen Variation",
          fen: "r1bqk2r/ppp2ppp/2n5/1B1pP3/1b1Pn3/5N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, La Bourdonnais Variation",
          fen: "r1bqk1nr/ppp2ppp/1bnp4/8/2BPP3/5N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Classical Variation, Tarrasch Variation",
          fen: "r1b1k2r/1pp1qppp/pbnp1n2/4p3/P1BPP3/2P2N1P/1P3PP1/RNBQR1K1",
        },
        {
          name: "Italian Game: Giuoco Piano, Eisinger Variation",
          fen: "rnb1k1nr/ppppqppp/1b1P4/4p3/2B1P3/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Giuoco Piano, Ghulam-Kassim Variation",
          fen: "r1bqk2r/pppp1ppp/2n5/2bBP3/8/2p2NK1/PP4PP/RNBQ3R",
        },
        {
          name: "Italian Game: Giuoco Piano, Mestel Variation",
          fen: "r1b1k1nr/ppppqppp/1bn5/4p1B1/2BPP3/2P2N2/PP3PPP/RN1QK2R",
        },
        {
          name: "Italian Game: Scotch Gambit, Walbrodt-Baird Gambit",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b5/2BpP3/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Classical Variation, Greco Gambit, Greco Variation",
          fen: "r1bqk2r/pppp1ppp/2n5/8/1bBP4/2n2N2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Italian Game: Classical Variation, Greco Gambit, Main Line",
          fen: "r1bqk2r/pppp1ppp/2n5/8/2BPn3/2b2N2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Italian Game: Classical Variation, Greco Gambit, Moeller-Bayonet Attack",
          fen: "r1bqk2r/ppp1nppp/3p1b2/3P4/2B1R1P1/5N2/PP3P1P/R1BQ2K1",
        },
        {
          name: "Italian Game: Classical Variation, Greco Gambit, Moeller-Therkatz Attack",
          fen: "r1bqk2r/pppp1ppp/2n5/3P4/2B1n3/2b2N2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Italian Game: Classical Variation, Greco Gambit, Traditional Line",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b5/2BPP3/5N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Giuoco Piano, Aitken Variation",
          fen: "r1bqk2r/pppp1ppp/2n5/8/2BP4/B1b2N2/P4PPP/R2Q1RK1",
        },
        {
          name: "Italian Game: Giuoco Piano, Bernstein Variation",
          fen: "r1bqk2r/ppp2ppp/2n5/3p4/2BP4/1Qb2N2/P4PPP/R1B2RK1",
        },
        {
          name: "Italian Game: Giuoco Piano, Cracow Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/8/1bBPP3/5N2/PP3PPP/RNBQ1K1R",
        },
        {
          name: "Italian Game: Giuoco Piano, Greco's Attack",
          fen: "r1bqk2r/pppp1ppp/2n2n2/8/1bBPP3/2N2N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Italian Game: Giuoco Piano, Krause Variation",
          fen: "r1bq3r/ppp3pp/5k2/3pN3/1n1Pn3/1Q3P2/PP4PP/RN2K2R",
        },
        {
          name: "Italian Game: Giuoco Piano, Steinitz Variation",
          fen: "r1bqk2r/ppp2ppp/2n5/3p4/2BPn3/B1P2N2/P4PPP/R2Q1RK1",
        },
        {
          name: "Italian Game: Giuoco Piano, Therkatz-Herzog Variation",
          fen: "r1bq1rk1/ppp1nppN/3p4/3P4/2B1R3/8/PP3PPP/R2Q2K1",
        },
        {
          name: "Italian Game: Giuoco Piano",
          fen: "r1bqk2r/ppp2ppp/3p1n2/4p1B1/2BnP3/8/PPP2PPP/RN1Q1RK1",
        },
        {
          name: "Italian Game: Giuoco Piano, Holzhausen Attack",
          fen: "r1b1k2r/ppp1qppp/5n2/4p1B1/2BnP3/2N5/PPP3PP/R2Q1RK1",
        },
        {
          name: "Italian Game: Giuoco Piano, Rosentreter Variation",
          fen: "r1bqk2r/pppp1p2/5n1p/4p1p1/2BnPP1B/8/PPP3PP/RN1Q1RK1",
        },
        {
          name: "Italian Game: Scotch Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/8/2BpP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Scotch Gambit, Janowski Defense",
          fen: "r1bqkb1r/ppp2ppp/2np1n2/8/2BpP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Scotch Gambit, Max Lange Attack",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b5/2BpP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Scotch Gambit, Max Lange Attack Accepted",
          fen: "r2qk2r/ppp2pPp/2n1b3/2b5/2pp4/5N2/PPP2PPP/RNBQR1K1",
        },
        {
          name: "Italian Game: Scotch Gambit, Max Lange Attack, Long Variation",
          fen: "r3k2r/ppp2ppp/2n1bP2/2b2qN1/2ppN3/8/PPP2PPP/R1BQR1K1",
        },
        {
          name: "Italian Game: Scotch Gambit, Max Lange Attack, Spielmann Defense",
          fen: "r1bqk2r/pppp1ppp/2n5/2b1P3/2Bp2n1/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Scotch Gambit, de Riviere Defense",
          fen: "r1bqk2r/ppppbppp/2n2n2/8/2BpP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Scotch Invitation Declined",
          fen: "r1bqkb1r/ppp2ppp/2np1n2/4p3/2BPP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense",
          fen: "r1bqkb1r/pppp1ppp/2n5/4p3/2BPn3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Keidansky Variation",
          fen: "r1b1k2r/ppp2ppp/2N5/1B1pP3/4n2q/8/PPP2bPP/RNBQ1K1R",
        },
        {
          name: "Italian Game: Two Knights Defense, Max Lange Attack",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1P3/2Bp4/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Two Knights Defense, Max Lange Attack, Berger Variation",
          fen: "2kr3r/ppp2ppp/1bn1bPq1/6N1/2ppNPP1/8/PPP4P/R1BQR1K1",
        },
        {
          name: "Italian Game: Two Knights Defense, Max Lange Attack, Krause Variation",
          fen: "r1bqk2r/pppp1ppp/2n5/2b1P3/2Bp2n1/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Two Knights Defense, Max Lange Attack, Loman Defense",
          fen: "r2qk2r/ppp2p1p/2n1bPp1/2b3N1/2pp4/8/PPP2PPP/RNBQR1K1",
        },
        {
          name: "Italian Game: Two Knights Defense, Max Lange Attack, Rubinstein Variation",
          fen: "r3kb1r/ppp2ppp/2n1bP2/5qN1/2ppN3/8/PPP2PPP/R1BQR1K1",
        },
        {
          name: "Italian Game: Two Knights Defense, Modern Bishop's Opening",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Open Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p3/2BPP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Perreux Variation",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/6N1/2BpP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Scotch Gambit, Anderssen Attack",
          fen: "r1b1kb1r/ppp2ppp/2n5/3q4/3pn3/2N2N2/PPP2PPP/R1BQR1K1",
        },
        {
          name: "Italian Game: Scotch Gambit, Anderssen Attack, Main Line",
          fen: "r3kb1r/ppp2ppp/2n1b3/3q2B1/3pN3/5N2/PPP2PPP/R2QR1K1",
        },
        {
          name: "Italian Game: Scotch Gambit, Canal Variation",
          fen: "r1bqkb1r/ppp2ppp/2n5/3p4/2Bpn3/2N2N2/PPP2PPP/R1BQR1K1",
        },
        {
          name: "Italian Game: Scotch Gambit, Double Gambit Accepted",
          fen: "r1bqkb1r/pppp1ppp/2n5/8/2Bpn3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Italian Game: Scotch Gambit, Nakhmanson Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n5/8/2Bpn3/2N2N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Italian Game: Two Knights Defense, Yurdansky Attack",
          fen: "r4b1r/ppp1kp2/2n1bN1p/q5p1/1P1p3B/5N2/P1P2PPP/R2QR1K1",
        },
        {
          name: "Italian Game: Two Knights Defense, Fegatello Attack, Leonhardt Variation",
          fen: "r1bq1b1r/ppn3pp/2p1k3/3np3/2BPQ3/P1N5/1PP2PPP/R1B1K2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Fried Liver Attack",
          fen: "r1bqkb1r/ppp2Npp/2n5/3np3/2B5/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Fritz Variation",
          fen: "r1bqkb1r/ppp2ppp/5n2/3Pp1N1/2Bn4/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Fritz, Gruber Variation",
          fen: "r1bqkb1r/p1p2ppp/8/1p1np3/3nN3/2P5/PP1P1PPP/RNBQKB1R",
        },
        {
          name: "Italian Game: Two Knights Defense, Kloss Gambit",
          fen: "r1bqkb1r/ppp2ppp/5n2/3Pp1N1/1nB5/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Knight Attack",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/4p1N1/2B1P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Knight Attack, Normal Variation",
          fen: "r1bqkb1r/ppp2ppp/2n2n2/3pp1N1/2B1P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Lolli Attack",
          fen: "r1bqkb1r/ppp2ppp/2n5/3np1N1/2BP4/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Pincus Variation",
          fen: "r1bqk2r/ppp2ppp/2n5/3np1N1/1bBP4/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Ponziani-Steinitz Gambit",
          fen: "r1bqkb1r/pppp1ppp/2n5/4p1N1/2B1n3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Traxler Counterattack",
          fen: "r1bqk2r/pppp1ppp/2n2n2/2b1p1N1/2B1P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Traxler Counterattack, Bishop Sacrifice Line",
          fen: "r1bqk2r/pppp1Bpp/2n2n2/2b1p1N1/4P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Traxler Counterattack, King March Line",
          fen: "r1bqk2r/pppp1Npp/2n5/4p3/2B1n3/4K3/PPPP2PP/RNBQ3R",
        },
        {
          name: "Italian Game: Two Knights Defense, Traxler Counterattack, Knight Sacrifice Line",
          fen: "r1bqk2r/pppp1Npp/2n2n2/2b1p3/2B1P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Traxler Variation, Trencianske-Teplice Gambit",
          fen: "r1bq3r/ppppkBpp/2n2n2/2b1p1N1/3PP3/8/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Ulvestad Variation",
          fen: "r1bqkb1r/p1p2ppp/2n2n2/1p1Pp1N1/2B5/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Ulvestad Variation, Kurkin Gambit",
          fen: "r1bqkb1r/p1p2Np1/2n2n1p/1p1Pp3/8/8/PPPP1PPP/RNBQKB1R",
        },
        {
          name: "Italian Game: Two Knights Defense",
          fen: "r1bqkb1r/p4ppp/2p2n2/n3p1N1/8/8/PPPPBPPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Blackburne Variation",
          fen: "r1bqkb1r/p4ppp/5n2/np2p1N1/8/5Q2/PPPP1PPP/RNB1K2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Colman Variation",
          fen: "1rbqkb1r/p4ppp/2p2n2/nB2p1N1/8/5Q2/PPPP1PPP/RNB1K2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Mar\xf3czy Variation",
          fen: "r1bqk2r/ppp1bpp1/5n1p/3P4/2P1p3/5N2/PPP1QPPP/RNB1K2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Paoli Variation",
          fen: "r1b1kb1r/p1q2ppp/2p2n2/n3p1N1/8/3B1Q2/PPPP1PPP/RNB1K2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Polerio Defense",
          fen: "r1bqkb1r/ppp2ppp/5n2/n2Pp1N1/2B5/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Polerio Defense, Bishop Check Line",
          fen: "r1bqkb1r/ppp2ppp/5n2/nB1Pp1N1/8/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Polerio Defense, Bogoljubov Variation",
          fen: "r1bqkb1r/p4ppp/2p2n2/nB2p1N1/8/5Q2/PPPP1PPP/RNB1K2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Polerio Defense, Kieseritzky Variation",
          fen: "r1bqkb1r/ppp2ppp/5n2/n2Pp1N1/2B5/3P4/PPP2PPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Polerio Defense, Yankovich Variation",
          fen: "r1bqk2r/ppp2pp1/5n1p/2bP4/2P1p3/8/PPPNQPPP/RNB1K2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Knorre Variation",
          fen: "r1b1k2r/p1q2pp1/2pb1n1p/n3N3/3Pp3/8/PPPBBPPP/RN1QK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Polerio Defense, G\xf6ring Variation",
          fen: "r1b1kb1r/p1q2pp1/2p2n1p/n3N3/4p3/8/PPPPBPPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Polerio Defense, Suhle Defense",
          fen: "r1bqkb1r/p4pp1/2p2n1p/n3p1N1/8/8/PPPPBPPP/RNBQK2R",
        },
        {
          name: "Italian Game: Two Knights Defense, Steinitz Variation",
          fen: "r1bqkb1r/p4pp1/2p2n1p/n3p3/8/7N/PPPPBPPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez",
          fen: "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Alapin Defense",
          fen: "r1bqk1nr/pppp1ppp/2n5/1B2p3/1b2P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Alapin Defense, Alapin Gambit",
          fen: "r1bqk1nr/ppp2ppp/2p5/b3p3/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Brentano Gambit",
          fen: "r1bqkbnr/pppp1p1p/2n5/1B2p1p1/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Bulgarian Variation",
          fen: "r1bqkbnr/1ppp1ppp/2n5/pB2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Cozio Defense",
          fen: "r1bqkb1r/ppppnppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Cozio Defense, Paulsen Variation",
          fen: "r1bqkb1r/ppppnp1p/2n3p1/1B2p3/4P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Cozio Defense, Tartakower Gambit",
          fen: "r1bq1rk1/ppp1npbp/2n3p1/1B1p4/3NP3/2N1B3/PPPQ1PPP/R3K2R",
        },
        {
          name: "Ruy Lopez: Fianchetto Defense",
          fen: "r1bqkbnr/pppp1p1p/2n3p1/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Fianchetto Defense, Kevitz Gambit",
          fen: "r1bqkbnr/pppp3p/2n3p1/1B2pp2/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Lucena Variation",
          fen: "r1bqk1nr/ppppbppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: N\xfcrnberg Variation",
          fen: "r1bqkbnr/pppp2pp/2n2p2/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Pollock Defense",
          fen: "r1bqkbnr/pppp1ppp/8/nB2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Retreat Variation",
          fen: "rnbqkbnr/pppp1ppp/8/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Rotary-Albany Gambit",
          fen: "r1bqkbnr/p1pp1ppp/1pn5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Spanish Countergambit",
          fen: "r1bqkbnr/ppp2ppp/2n5/1B1pp3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Spanish Countergambit, Harding Countergambit, Fricke Gambit",
          fen: "r1b1kbnr/ppp2ppp/2n5/1B1pN1q1/4P3/8/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Spanish Countergambit, Harding Gambit",
          fen: "r1b1kbnr/ppp2ppp/2N5/1B1p2q1/4P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Vinogradov Variation",
          fen: "r1b1kbnr/ppppqppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Bird Variation",
          fen: "r1bqkbnr/pppp1ppp/8/1B2p3/3nP3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Bird Variation, Paulsen Variation",
          fen: "r1bqkb1r/ppppnppp/8/1B6/3pP3/8/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Old Steinitz Defense, Semi-Duras Variation",
          fen: "r2qkbnr/pppb1ppp/2np4/1B2p3/2PPP3/5N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Steinitz Defense",
          fen: "r1bqkbnr/ppp2ppp/2np4/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Steinitz Defense, Center Gambit",
          fen: "r1bqkbnr/ppp2ppp/2np4/1B6/3pP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Steinitz Defense, Nimzowitsch Attack",
          fen: "r2qkb1r/pppb1ppp/2Bp1n2/4p3/3PP3/2N2N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense",
          fen: "r1bqkbnr/pppp2pp/2n5/1B2pp2/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, Classical Variation",
          fen: "r1b1kbnr/ppp3pp/2N5/1B4q1/4p3/8/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, Dyckhoff Variation",
          fen: "r1bqkbnr/pppp2pp/2n5/1B2pp2/4P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, Exchange Variation",
          fen: "r1bqkbnr/pppp2pp/2B5/4pp2/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, Jaenisch Gambit Accepted",
          fen: "r1bqkbnr/pppp2pp/2n5/1B2pP2/8/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, Kostić Defense",
          fen: "r1bqk1nr/ppppb1pp/2n5/1B2p3/4N3/5N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, M\xf6hring Variation",
          fen: "r1b1kbnr/ppp3pp/2N5/1B1q4/4p3/8/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, Sch\xf6nemann Attack",
          fen: "r1bqkbnr/pppp2pp/2n5/1B2pp2/3PP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Schliemann Defense, Tartakower Variation",
          fen: "r1bqkb1r/pppp2pp/2n2n2/1B2p3/4N3/5N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Classical Defense, Benelux Variation",
          fen: "r1bq1rk1/pppp1ppp/1bn2n2/1B2p3/3PP3/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Classical Defense, Boden Variation",
          fen: "r1b1k1nr/ppppqppp/2n5/1Bb1p3/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Classical Defense, Zaitsev Variation",
          fen: "r1bqk1nr/pppp1ppp/8/1Bb1p3/1P1nP3/5N2/P1PP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Classical Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/1Bb1p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Classical Variation, Central Variation",
          fen: "r1bqk1nr/pppp1ppp/2n5/1Bb1p3/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Classical Variation, Charousek Variation",
          fen: "r1bqk1nr/pppp1ppp/1bn5/1B2p3/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Classical Variation, Cordel Gambit",
          fen: "r1bqk1nr/pppp2pp/2n5/1Bb1pp2/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Classical Variation, Konikowski Gambit",
          fen: "r1bqk1nr/ppp2ppp/2n5/1Bbpp3/4P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Classical Variation, Modern Main Line",
          fen: "r1bq1rk1/pppp1ppp/1bn2n2/1B2p1B1/3PP3/2P2N2/PP3PPP/RN1Q1RK1",
        },
        {
          name: "Ruy Lopez: Classical Variation, Spanish Wing Gambit",
          fen: "r1bqk1nr/pppp1ppp/2n5/1Bb1p3/1P2P3/5N2/P1PP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Anderssen Variation",
          fen: "r1bqkb1r/ppp2ppp/2Bp1n2/4p3/4P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Beverwijk Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/1Bb1p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Duras Variation",
          fen: "r1bqkb1r/ppp2ppp/2np1n2/1B2p3/2P1P3/3P1N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Fishing Pole Variation",
          fen: "r1bqkb1r/pppp1ppp/2n5/1B2p3/4P1n1/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Kaufmann Variation",
          fen: "r1bqk2r/pppp1ppp/2n2n2/1Bb1p3/4P3/3PBN2/PPP2PPP/RN1QK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Mortimer Trap",
          fen: "r1bqkb1r/pp1pnppp/2p2n2/1B2N3/4P3/3P4/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Mortimer Variation",
          fen: "r1bqkb1r/ppppnppp/5n2/1B2p3/4P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Nyholm Attack",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/1B6/3pP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Classical Variation, Zukertort Gambit",
          fen: "r1bqk2r/pppp1ppp/2n2n2/1Bb1p3/4P3/2P2N2/PP1P1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Halloween Attack",
          fen: "r1bqkb1r/pppp1ppp/2n2n2/1B2N3/4P3/8/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Closed Bernstein Variation",
          fen: "r2qk2r/pppbbppp/2np1n2/1B2p1B1/3PP3/2N2N2/PPP2PPP/R2Q1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Closed Showalter Variation",
          fen: "r2qk2r/pppbbppp/2Bp1n2/4p3/3PP3/2N2N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Closed Wolf Variation",
          fen: "r2qkb1r/pppb1ppp/2np1n2/1B6/3pP3/2N2N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Hedgehog Variation",
          fen: "r2qk2r/pppbbppp/2np1n2/1B2p3/3PP3/2N2N2/PPP2PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Improved Steinitz Defense",
          fen: "r1bqkb1r/ppp2ppp/2np1n2/1B2p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Tarrasch Trap",
          fen: "r2q1rk1/pppbbppp/2np1n2/1B2p3/3PP3/2N2N2/PPP2PPP/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Closed Berlin Defense, Chigorin Variation",
          fen: "r1bqkb1r/pppn1ppp/2np4/1B2p3/3PP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Berlin Wall",
          fen: "r2k1b1r/pppb1ppp/2p5/4Pn2/8/2N2N2/PPP2PPP/R1B2RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Cordel Variation",
          fen: "r1bqk2r/p1ppbppp/2p5/4Pn2/8/5N2/PPP1QPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Minckwitz Variation",
          fen: "r1bqk2r/ppppbppp/2n5/1B2P3/4n3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Pillsbury Variation",
          fen: "r1bqk2r/pnppbppp/2p5/4P3/8/1P3N2/P1P1QPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Rio Gambit Accepted",
          fen: "r1bqkb1r/pppp1ppp/2n5/1B2p3/4n3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Rio de Janeiro Variation",
          fen: "r1bqk2r/ppppbppp/2n5/1B2p3/3Pn3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Rio de Janeiro Variation",
          fen: "r1bq1rk1/p1ppbppp/8/2p1P3/3B4/2N5/PPP1QPPP/R3R1K1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Rosenthal Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1n5/1B2p3/3Pn3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Trifunovic Variation",
          fen: "r1bqk2r/ppp1bppp/2n5/1B1pp3/3Pn3/5N2/PPP1QPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Winawer Attack",
          fen: "r1bqk2r/pnppbppp/2p5/4P3/3N4/8/PPP1QPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, Zukertort Variation",
          fen: "r1bqk2r/pnppbppp/2p5/4P3/2P5/5N2/PP2QPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, l'Hermet Variation",
          fen: "r1bqkb1r/pppp1ppp/2nn4/1B2p3/3P4/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, l'Hermet Variation, Berlin Wall Defense",
          fen: "r1bk1b1r/ppp2ppp/2p5/4Pn2/8/5N2/PPP2PPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Berlin Defense, l'Hermet Variation, Westerinen Line",
          fen: "r1bqkb1r/ppp2ppp/2p5/4P3/4n3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open Berlin Defense, Showalter Variation",
          fen: "r1bqkb1r/pppp1ppp/2nn4/4p3/B2P4/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open Berlin Defense, l'Hermet Variation",
          fen: "r1bqkb1r/pppp1ppp/2nn4/1B2P3/8/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Exchange Variation",
          fen: "r1bqkbnr/1ppp1ppp/p1B5/4p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Alekhine Variation",
          fen: "r1b1k1nr/1pp2ppp/p1pb4/8/3NP3/8/PPP2PPP/RNB1K2R",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Keres Variation",
          fen: "r1bqkbnr/1pp2ppp/p1p5/4p3/4P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Lutikov Variation",
          fen: "r1bqkbnr/2pp1ppp/p1p5/4p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Romanovsky Variation",
          fen: "r1bqkbnr/1pp3pp/p1p2p2/4p3/4P3/2NP1N2/PPP2PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Exchange, Alekhine Variation",
          fen: "r3kbnr/1ppb1ppp/p1p5/8/3NP3/8/PPP2PPP/RNB1K2R",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Alapin Gambit",
          fen: "r2qkbnr/1pp2pp1/p1p5/4p2p/4P1b1/5N1P/PPPP1PP1/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Bronstein Variation",
          fen: "r1b1kbnr/1pp2ppp/p1pq4/4p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Gligoric Variation",
          fen: "r1bqkbnr/1pp3pp/p1p2p2/4p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Exchange Variation, King's Bishop Variation",
          fen: "r1bqk1nr/1pp2ppp/p1pb4/4p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Exchange Variation, Normal Variation",
          fen: "r1bqkbnr/1pp2ppp/p1p5/4p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Bird's Defense Deferred",
          fen: "r1bqkbnr/1ppp1ppp/p7/4p3/B2nP3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense",
          fen: "r1bqkbnr/1ppp1ppp/p1n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Alapin's Defense Deferred",
          fen: "r1bqk1nr/1ppp1ppp/p1n5/4p3/Bb2P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Caro Variation",
          fen: "r1bqkbnr/2pp1ppp/p1n5/1p2p3/B3P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Classical Defense Deferred",
          fen: "r1bqk1nr/1ppp1ppp/p1n5/2b1p3/B3P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Cozio Defense",
          fen: "r1bqkb1r/1pppnppp/p1n5/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Fianchetto Defense Deferred",
          fen: "r1bqkbnr/1ppp1p1p/p1n3p1/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Graz Variation",
          fen: "r1bqk1nr/2pp1ppp/p1n5/1pb1p3/4P3/1B3N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Norwegian Variation",
          fen: "r1bqkbnr/2pp1ppp/p7/np2p3/4P3/1B3N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Norwegian Variation, Nightingale Gambit",
          fen: "r1bqkbnr/2pp1Bpp/p7/np2p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Schliemann Defense Deferred",
          fen: "r1bqkbnr/1ppp2pp/p1n5/4pp2/B3P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Schliemann Defense Deferred, Jaenisch Gambit Deferred",
          fen: "r1bqkbnr/1ppp2pp/p1n5/4pP2/B7/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r1bqkbnr/1pp2ppp/p1np4/4p3/B3P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r1bqkbnr/1pp2ppp/p1np4/4p3/B3P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r1bqkbnr/1pp2ppp/p1np4/4p3/B1P1P3/5N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Noah's Ark Trap",
          fen: "r1bqkbnr/5ppp/p2p4/1pp5/3QP3/1B6/PPP2PPP/RNB1K2R",
        },
        {
          name: "Ruy Lopez: Closed, Kecskemet Variation",
          fen: "r2qbrk1/1pp1bppp/p1np1n2/4p3/B2PP3/2P2N2/PP1N1PPP/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r1bqkbnr/1pp2ppp/p1np4/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r1bqkbnr/2p2ppp/p1pp4/4p3/3PP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r1bqkbnr/2p3pp/p1pp1p2/4p3/3PP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r1bqkbnr/1pp2ppp/p1np4/4p3/B3P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r2qkbnr/1pp3pp/p1np4/4pb2/B7/2P2N2/PP1P1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense, Siesta Variation",
          fen: "r1bqkbnr/1pp3pp/p1np4/4pp2/B3P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r2qkbnr/1ppb1ppp/p1np4/4p3/B3P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense",
          fen: "r2qkb1r/1ppbnppp/p1np4/4p3/B2PP3/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Modern Steinitz Defense, Fianchetto Variation",
          fen: "r2qkbnr/1ppb1p1p/p1np2p1/4p3/B2PP3/2P2N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Anderssen Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/3P1N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Bayreuth Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1B2n2/4p3/4P3/5N2/PPPP1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Duras Variation",
          fen: "r1bqkb1r/1pp2ppp/p1np1n2/4p3/B1P1P3/3P1N2/PP3PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Jaffe Gambit",
          fen: "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/2P2N2/PP1P1PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Mackenzie Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B2PP3/5N2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Tarrasch Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/2N2N2/PPPP1PPP/R1BQK2R",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Wormald Attack",
          fen: "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPPQPPP/RNB1K2R",
        },
        {
          name: "Ruy Lopez: Wormald Attack, Gr\xfcnfeld Variation",
          fen: "r2qk2r/2p1bppp/p1np1n2/1p2p3/3PP1b1/1BP2N2/PP2QPPP/RNB1K2R",
        },
        {
          name: "Ruy Lopez: Brix Variation",
          fen: "r1bqkb1r/1ppp1p1p/p1n2np1/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Central Countergambit",
          fen: "r1bqkb1r/1pp2ppp/p1n2n2/3pp3/B3P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense",
          fen: "r1bqkb1r/1ppp1ppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense",
          fen: "r1bqkb1r/2p2ppp/p1np1n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Arkhangelsk Variation",
          fen: "r2qkb1r/1bpp1ppp/p1n2n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Neo-Arkhangelsk Variation",
          fen: "r1bqk2r/1ppp1ppp/p1n2n2/2b1p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Wing Attack",
          fen: "r1bqk2r/2ppbppp/p1n2n2/1p2p3/P3P3/1B3N2/1PPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Rabinovich Variation",
          fen: "r1bq1k1r/2p2ppp/p4n2/1pbPR1N1/3n4/1B6/PPPP1PPP/RNBQ2K1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Steinitz Deferred",
          fen: "r1bqkb1r/1pp2ppp/p1np1n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Steinitz Deferred",
          fen: "r1bqkb1r/2p2ppp/p1pp4/4p3/3Pn3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Steinitz Defense Deferred, Boleslavsky Variation",
          fen: "r1bqkb1r/2p3pp/p1p5/3pPp2/4n3/2N2N2/PPP2PPP/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Steinitz Defense Deferred, Lipnitsky Variation",
          fen: "r2qkb1r/2p2ppp/p1pp1n2/4p3/3PP1b1/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Morphy Defense, Tartakower Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1n5/4p3/B3n3/5N2/PPPPQPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Open",
          fen: "r1bqkb1r/1ppp1ppp/p1n5/4p3/B3n3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open",
          fen: "r1bqkb1r/1ppp1ppp/p1n5/4p3/B2Pn3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open",
          fen: "r1bqkb1r/2pp1ppp/p1n5/1p2p3/3Pn3/1B3N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open",
          fen: "r1bqkb1r/2p2ppp/p1n5/1p1pP3/4n3/1B3N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Berger Variation",
          fen: "r1bqkb1r/2p2ppp/p7/1p1p4/P2pn3/1BN5/1PP2PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Bernstein Variation",
          fen: "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1B3N2/PPPN1PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Bernstein Variation, Luther Line",
          fen: "r2qk2r/2p2ppp/p1n1b3/1pbpP3/4n3/1B3N2/PPPN1PPP/R1B1QRK1",
        },
        {
          name: "Ruy Lopez: Open, Friess Attack",
          fen: "r1bqkb1r/2pp1ppp/p1n5/1p2N3/B2Pn3/8/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Harksen Gambit",
          fen: "r1bqkb1r/2p2ppp/p1n5/1p1pp3/2PPn3/1B3N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Karpov Gambit",
          fen: "r2qkb1r/2p2ppp/p1n1b3/1pn1P1N1/3p4/1BP5/PP1N1PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Knorre Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1n5/4p3/B3n3/2N2N2/PPPP1PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Main Line",
          fen: "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1B3N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Richter Variation",
          fen: "r1bqkb1r/2pp1ppp/p1n5/1p1Pp3/B3n3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Riga Variation",
          fen: "r1bqkb1r/1ppp1ppp/p1n5/8/B2pn3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Schlechter Defense",
          fen: "r1bqkb1r/2p2ppp/p7/1p1pp3/P2nn3/1B3N2/1PP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Skipworth Gambit",
          fen: "r1bqkb1r/1pp2ppp/p1n5/3pp3/B3n3/5N2/PPPP1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Open, Zukertort Variation",
          fen: "r1bqkb1r/2p1nppp/p7/1p1pP3/4n3/1B3N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Howell Attack",
          fen: "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1B3N2/PPP1QPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Open, Howell Attack",
          fen: "r2qk2r/2p1bppp/p1n1b3/1p1pP3/2P1n3/1B3N2/PP2QPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Open, Howell Attack, Ekstrom Variation",
          fen: "r4rk1/2pqbppp/p1n1b3/3pP3/2B1n3/5N2/PP2QPPP/RNBR2K1",
        },
        {
          name: "Ruy Lopez: Open",
          fen: "r2qkb1r/2p2ppp/p1n1b3/1p1pP3/4n3/1BP2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Berlin Variation",
          fen: "r2qkb1r/2p2ppp/p1n1b3/1pnpP3/8/1BP2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Dilworth Variation",
          fen: "r2q1rk1/2p2ppp/p1n1b3/1pbpP3/8/2P2N2/PPBN1nPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Italian Variation",
          fen: "r2qk2r/2p2ppp/p1n1b3/1pbpP3/4n3/1BP2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Motzko Attack",
          fen: "r2qk2r/2p2ppp/p1n1b3/1pbpP3/4n3/1BPQ1N2/PP3PPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Open, Motzko Attack, Nenarokov Variation",
          fen: "r2qk2r/2p1nppp/p3b3/1pbpP3/4n3/1BPQ1N2/PP3PPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Open, St. Petersburg Variation",
          fen: "r2qk2r/2p2ppp/p1n1b3/1pbpP3/4n3/1BP2N2/PP1N1PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Breslau Variation",
          fen: "r2q1rk1/2p1bppp/p3b3/1p1pn3/3Nn3/1BP5/PP3PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Open, Classical Defense",
          fen: "r2qk2r/2p1bppp/p1n1b3/1p1pP3/4n3/1BP2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Open, Classical Defense, Main Line",
          fen: "r2qk2r/2p1bppp/p1n1b3/1p1pP3/4n3/1BP2N2/PP3PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Open, Malkin Variation",
          fen: "r2q1rk1/2p1bppp/p1n1b3/1p1pP3/4n3/1BP2N2/PP1NQPPP/R1B2RK1",
        },
        {
          name: "Ruy Lopez: Open, Tarrasch Trap",
          fen: "r4rk1/2pqb1pp/p1n1p3/1p1pP3/4R3/1BP5/PP3PPP/RNBQ2K1",
        },
        {
          name: "Ruy Lopez: Closed",
          fen: "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Closed, Basque Gambit",
          fen: "r1bqk2r/1pppbppp/p1n5/4P3/B2pn3/2P2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Closed, Center Attack",
          fen: "r1bqk2r/1pppbppp/p1n2n2/4p3/B2PP3/5N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Closed, Center Attack, Basque Gambit",
          fen: "r1bqk2r/1pppbppp/p1n5/4P3/B3n3/2p2N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Closed, Martinez Variation",
          fen: "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/3P1N2/PPP2PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Closed, Morphy Attack",
          fen: "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/2N2N2/PPPP1PPP/R1BQ1RK1",
        },
        {
          name: "Ruy Lopez: Closed, Delayed Exchange",
          fen: "r1bqk2r/1pppbppp/p1B2n2/4p3/4P3/5N2/PPPP1PPP/RNBQ1RK1",
        },
        {
          name: "Ruy Lopez: Closed, Worrall Attack",
          fen: "r1bqk2r/1pppbppp/p1n2n2/4p3/B3P3/5N2/PPPPQPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Closed, Worrall Attack, Castling Line",
          fen: "r1bq1rk1/2ppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPPQPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Closed, Worrall Attack, Delayed Castling Line",
          fen: "r1bqk2r/2p1bppp/p1np1n2/1p2p3/4P3/1B3N2/PPPPQPPP/RNB2RK1",
        },
        {
          name: "Ruy Lopez: Closed, Averbakh Variation",
          fen: "r1bqk2r/1pp1bppp/p1np1n2/4p3/B3P3/5N2/PPPP1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed",
          fen: "r1bqk2r/2ppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed",
          fen: "r1bq1rk1/2ppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Alekhine Gambit",
          fen: "r4rk1/2q1bppp/p2p1n2/npp1p3/3PP3/2P1NQ2/PPB2PPP/R1B1R1K1",
        },
        {
          name: "Ruy Lopez: Closed, Anti-Marshall",
          fen: "r1bq1rk1/2ppbppp/p1n2n2/1p2p3/P3P3/1B3N2/1PPP1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Balla Variation",
          fen: "r1b1k2r/2q1bppp/p2p1n2/npp1p3/P2PP3/2P2N2/1PB2PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Leonhardt Variation",
          fen: "rnb1k2r/2q1bp1p/p2p1n2/1ppPp1p1/4P3/2P2N1P/PPBN1PP1/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Rosen Attack",
          fen: "r1bqk2r/2p1bppp/p1np1n2/1p2p3/3PP3/1B3N2/PPP2PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Trajkovic Counterattack",
          fen: "r2qk2r/1bppbppp/p1n2n2/1p2p3/4P3/1B3N2/PPPP1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Noah's Ark Trap",
          fen: "r1bqk2r/4bppp/p2p1n2/1pp5/3QP3/1B6/PPP2PPP/RNB1R1K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack",
          fen: "r1bq1rk1/2p1bppp/p1n2n2/1p1pp3/4P3/1BP2N2/PP1P1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack, Main Line",
          fen: "r1bq1rk1/4bppp/p1p5/1p1nR3/3P4/1BP5/PP3PPP/RNBQ2K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack, Main Line, Spassky Variation",
          fen: "5rk1/5ppp/p1pbr3/1p1n3q/P2P2b1/1BPQB1P1/1P1N1P1P/R3R1K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack, Modern Main Line",
          fen: "r1b2rk1/5ppp/p1pb4/1p1n4/3P4/1BP3Pq/PP3P1P/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack, Modern Variation",
          fen: "r1bq1rk1/4bppp/p1p5/1p1nR3/8/1BP5/PP1P1PPP/RNBQ2K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack, Original Marshall Attack",
          fen: "r1bq1rk1/2p1bppp/p4n2/1p2R3/8/1BP5/PP1P1PPP/RNBQ2K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack, Re3 Variation",
          fen: "r1bq1rk1/5ppp/p2b4/1p1p4/3P4/2P1R3/PP3PPP/RNBQ2K1",
        },
        {
          name: "Ruy Lopez: Marshall Attack, Steiner Variation",
          fen: "r1bq1rk1/2p1bppp/p1n2n2/1p1P4/4p3/1BP2N2/PP1P1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed",
          fen: "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/4P3/1BP2N2/PP1P1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Lutikov Variation",
          fen: "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/4P3/2P2N2/PPBP1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Pilnik Variation",
          fen: "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/4P3/1BPP1N2/PP3PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Suetin Variation",
          fen: "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/4P3/PBP2N2/1P1P1PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Bogoljubov Variation",
          fen: "r2q1rk1/2p1bppp/p1np1n2/1p2p3/3PP1b1/1BP2N2/PP3PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Yates Variation",
          fen: "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/3PP3/1BP2N2/PP3PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Yates Variation, Short Attack",
          fen: "r2q1rk1/2p1bppp/p1np1n2/1p2p3/P2PP1b1/1BP2N2/1P3PPP/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed",
          fen: "r1bq1rk1/2p1bppp/p1np1n2/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Flohr System",
          fen: "r2q1rk1/1bp1bppp/p1np1n2/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Karpov Variation",
          fen: "r1bq1rk1/2pnbppp/p1np4/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Kholmov Variation",
          fen: "r2q1rk1/2p1bppp/p1npbn2/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Smyslov-Breyer-Zaitsev Hybrid",
          fen: "r2qrbk1/1bp2pp1/p1np1n1p/1p2p3/3PP3/PBP2N1P/1P1N1PP1/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Zaitsev System",
          fen: "r1bqr1k1/2p1bppp/p1np1n2/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Smyslov Defense",
          fen: "r1bq1rk1/2p1bpp1/p1np1n1p/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Breyer Defense",
          fen: "rnbq1rk1/2p1bppp/p2p1n2/1p2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Breyer Defense, Quiet Variation",
          fen: "rnbq1rk1/2p1bppp/p2p1n2/1p2p3/4P3/1BPP1N1P/PP3PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Breyer",
          fen: "rnbq1rk1/2p1bppp/p2p1n2/1p2p3/3PP3/1BP2N1P/PP3PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Breyer Defense",
          fen: "r2q1rk1/1b1nbppp/p2p1n2/1pp1p3/3PP3/2P2N1P/PPBN1PP1/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Breyer Defense",
          fen: "r1bq1rk1/2pnbppp/p2p1n2/1p2p3/3PP2N/1BP4P/PP3PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Breyer Defense, Zaitsev Hybrid",
          fen: "r1bq1rk1/2pnbppp/p2p1n2/1p2p3/3PP3/1BP2N1P/PP3PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Borisenko Variation",
          fen: "r1bq1rk1/4bppp/p1np1n2/1pp1p3/3PP3/2P2N1P/PPB2PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin Defense",
          fen: "r1bq1rk1/2p1bppp/p2p1n2/np2p3/4P3/2P2N1P/PPBP1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin Defense",
          fen: "r1bq1rk1/4bppp/p2p1n2/npp1p3/4P3/2P2N1P/PPBP1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Keres Defense",
          fen: "r1bq1rk1/3nbppp/p2p4/npp1p3/3PP3/2P2N1P/PPB2PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Rossolimo Defense",
          fen: "r1b2rk1/2q1bppp/p1pp1n2/np2p3/3PP3/2P2N1P/PPB2PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin Defense",
          fen: "r1bq1rk1/2p1bppp/p2p1n2/np2p3/4P3/1BP2N1P/PP1P1PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin Defense",
          fen: "r1b2rk1/2q1bppp/p2p1n2/npp1p3/3PP3/2P2N1P/PPB2PP1/RNBQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin, Yugoslav System",
          fen: "r3r1k1/2qbbp1p/p2p1np1/npp1p3/3PP3/2P1NN1P/PPB2PP1/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin Defense",
          fen: "r1b2rk1/2q1bppp/p1np1n2/1pp1p3/3PP3/2P2N1P/PPBN1PP1/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin Defense",
          fen: "r1b2rk1/2q1bppp/p1np1n2/1pP1p3/4P3/2P2N1P/PPBN1PP1/R1BQR1K1",
        },
        {
          name: "Ruy Lopez: Closed, Chigorin Defense, Panov System",
          fen: "r1b2rk1/2q1bppp/p2p1n2/np2p3/3PP3/5N1P/PPBN1PP1/R1BQR1K1",
        },
        {
          name: "Amazon Attack",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P4/3Q4/PPP1PPPP/RNB1KBNR",
        },
        {
          name: "Blackmar-Diemer Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3PP3/8/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/3P4/2N2p2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Bogoljubow Defense",
          fen: "rnbqkb1r/ppp1pp1p/5np1/8/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Bogoljubow Defense, Kloss Attack",
          fen: "rnbq1rk1/ppp1ppbp/5np1/8/2BP4/2N2N2/PPP3PP/R1BQ1R1K",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Bogoljubow Defense, Mad Dog Attack",
          fen: "rnbqk2r/ppp1ppbp/5np1/8/2BP3P/2N2N2/PPP3P1/R1BQK2R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Bogoljubow Defense, Nimzowitsch Attack",
          fen: "rnbqk2r/ppp1ppbp/5np1/4N3/2BP4/2N5/PPP3PP/R1BQK2R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Bogoljubow Defense, Studier Attack",
          fen: "rnbq1rk1/ppp1ppbp/5np1/8/2BP4/2N2N2/PPP3PP/R1B1QRK1",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Euwe Defense",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Euwe Defense, Zilbermints Gambit",
          fen: "r1bqk2r/ppp1bppp/4pn2/6B1/3n4/2NB1N2/PPP3PP/R2Q1R1K",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Gunderam Defense",
          fen: "rn1qkb1r/ppp1pppp/5n2/5b2/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Gunderam Defense, Stader Variation",
          fen: "rn1qkb1r/ppp2ppp/4pn2/4N3/3Pb1P1/2N5/PPP4P/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Holwell Defense",
          fen: "rnb1kb1r/ppp1pppp/3q1n2/8/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Kaulich Defense",
          fen: "rnbqkb1r/pp2pppp/5n2/2p5/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Pietrowsky Defense",
          fen: "r1bqkb1r/ppp1pppp/2n2n2/8/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Ritter Defense",
          fen: "rnbqkb1r/p1p1pppp/1p3n2/8/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Ryder Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/3P4/2N2Q2/PPP3PP/R1B1KBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Schlutter Defense",
          fen: "r1bqkb1r/pppnpppp/5n2/8/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Teichmann Defense",
          fen: "rn1qkb1r/ppp1pppp/5n2/8/3P2b1/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Teichmann Defense, Ciesielski Variation",
          fen: "rn1qkb1r/pp2pppp/2p2n2/8/3P4/2N4P/PPP2QP1/R1B1KB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Teichmann Defense, Classical Variation",
          fen: "rn1qkb1r/pp2pppp/2p2n2/8/3P4/2N1BQ1P/PPP3P1/R3KB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Teichmann Defense, Seidel-Hall Attack",
          fen: "rn1qkb1r/pp2pppp/2p2n2/8/3P2P1/2N2Q1P/PPP5/R1B1KB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Accepted: Ziegler Defense",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/3P4/2N2N2/PPP3PP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: Brombacher Countergambit",
          fen: "rnbqkb1r/pp2pppp/5n2/2p5/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: Elbert Countergambit",
          fen: "rnbqkb1r/ppp2ppp/5n2/4p3/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: Gedult Defense",
          fen: "rnbqkb1r/1pp1pppp/p4n2/8/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: Lamb Defense",
          fen: "r1bqkb1r/ppp1pppp/2n2n2/8/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: Langeheinicke Defense",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/3P4/2N1pP2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: O'Kelly Defense",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: Vienna Defense",
          fen: "rn1qkb1r/ppp1pppp/5n2/5b2/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit Declined: Weinsbach Defense",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/3Pp3/2N2P2/PPP3PP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Blackmar Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/8/3Pp3/5P2/PPP3PP/RNBQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Diemer-Rosenberg Attack",
          fen: "rnbqkbnr/ppp1pppp/8/8/3Pp3/4B3/PPP2PPP/RN1QKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Fritz Attack",
          fen: "rnbqkbnr/ppp1pppp/8/8/2BPp3/8/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Blackmar-Diemer Gambit: Lemberger Countergambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Lemberger Countergambit, Endgame Variation",
          fen: "rnbqkbnr/ppp2ppp/8/4P3/4p3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Lemberger Countergambit, Lange Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/3PN3/8/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Lemberger Countergambit, Rasmussen Attack",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/3Pp3/2N5/PPP1NPPP/R1BQKB1R",
        },
        {
          name: "Blackmar-Diemer Gambit: Lemberger Countergambit, Sneiders Attack",
          fen: "rnbqkbnr/ppp2ppp/8/4p2Q/3Pp3/2N5/PPP2PPP/R1B1KBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Lemberger Countergambit, Soller Attack",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/3Pp3/2N1B3/PPP2PPP/R2QKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Netherlands Variation",
          fen: "rnbqkbnr/ppp1p1pp/8/5p2/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Rasa-Studier Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/3Pp3/2N1B3/PPP2PPP/R2QKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Reversed Albin Countergambit",
          fen: "rnbqkbnr/pp2pppp/8/2p5/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Zeller Defense",
          fen: "rn1qkbnr/ppp1pppp/8/5b2/3Pp3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: Zeller Defense, Soller Attack",
          fen: "rn1qkb1r/ppp1pppp/5n2/5b2/2BPp3/2N2P2/PPP3PP/R1BQK1NR",
        },
        {
          name: "Blackmar-Diemer Gambit: von Popiel Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/6B1/3Pp3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "Blackmar-Diemer Gambit: von Popiel Gambit, Zilbermints Variation",
          fen: "rn1qk2r/ppp2ppp/5pb1/1Q6/1b1Pp1P1/2N5/PPP2P1P/R3KBNR",
        },
        {
          name: "Queen's Pawn Game",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P4/4P3/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/4P3/PPP2PPP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game: Accelerated London System",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P1B2/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Queen's Pawn Game: Accelerated London System, Steinitz Countergambit",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/3P1B2/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Queen's Pawn Game: Accelerated London System, Steinitz Countergambit Accepted",
          fen: "rnbqkbnr/pp2pppp/8/2Pp4/5B2/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Queen's Pawn Game: Accelerated London System, Steinitz Countergambit, Morris Countergambit",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/3PPB2/8/PPP2PPP/RN1QKBNR",
        },
        {
          name: "Queen's Pawn Game: Accelerated London System, Steinitz Countergambit, Morris Countergambit Accepted",
          fen: "rnbqkbnr/pp2pppp/8/2p5/3PpB2/8/PPP2PPP/RN1QKBNR",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation, Alburt Defense",
          fen: "rn1qkbnr/ppp1pppp/8/3p1b2/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation, Anti-Veresov",
          fen: "rn1qkbnr/ppp1pppp/8/3p4/3P2b1/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation, Fianchetto Defense",
          fen: "rnbqk1nr/ppp1ppbp/6p1/3p4/3P4/2N2N2/PPP1PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation, Irish Gambit",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation, Shaviliuk Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation, Shropshire Defense",
          fen: "rnbqkbnr/ppp1ppp1/8/3p3p/3P4/2N5/PPP1PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: H\xfcbsch Gambit",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3PP3/2N5/PPP2PPP/R1BQKBNR",
        },
        {
          name: "Queen's Pawn Game: Levitsky Attack",
          fen: "rnbqkbnr/ppp1pppp/8/3p2B1/3P4/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Queen's Pawn Game: Levitsky Attack, Welling Variation",
          fen: "rn1qkbnr/ppp1pppp/8/3p2B1/3P2b1/8/PPP1PPPP/RN1QKBNR",
        },
        {
          name: "Queen's Pawn Game: Mason Attack",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P1P2/8/PPP1P1PP/RNBQKBNR",
        },
        {
          name: "Queen's Pawn Game: Stonewall Attack",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/3BP3/PPP2PPP/RNBQK1NR",
        },
        {
          name: "Queen's Pawn Game: Zurich Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P2P1/8/PPP1PP1P/RNBQKBNR",
        },
        {
          name: "Rapport-Jobava System",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P1B2/2N5/PPP1PPPP/R2QKBNR",
        },
        {
          name: "Richter-Veresov Attack",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p2B1/3P4/2N5/PPP1PPPP/R2QKBNR",
        },
        {
          name: "Richter-Veresov Attack",
          fen: "rn1qkb1r/ppp1pppp/5n2/3p1bB1/3P4/2N5/PPP1PPPP/R2QKBNR",
        },
        {
          name: "Richter-Veresov Attack: Boyce Defense",
          fen: "rnbqkb1r/ppp1pppp/8/3p2B1/3Pn3/2N5/PPP1PPPP/R2QKBNR",
        },
        {
          name: "Richter-Veresov Attack: Malich Gambit",
          fen: "rnbqkb1r/pp2pp1p/5p2/2pP4/4p3/2N5/PPP2PPP/R2QKBNR",
        },
        {
          name: "Richter-Veresov Attack: Richter Variation",
          fen: "rn1qkb1r/ppp1pppp/5n2/3p1bB1/3P4/2N2P2/PPP1P1PP/R2QKBNR",
        },
        {
          name: "Richter-Veresov Attack: Two Knights System",
          fen: "r1bqkb1r/pppnpppp/5n2/3p2B1/3P4/2N2N2/PPP1PPPP/R2QKB1R",
        },
        {
          name: "Richter-Veresov Attack: Two Knights System, Gr\xfcnfeld Defense",
          fen: "r1bqkb1r/pppnpp1p/5np1/3p2B1/3P4/2N2N2/PPP1PPPP/R2QKB1R",
        },
        {
          name: "Richter-Veresov Attack: Veresov Variation",
          fen: "rn1qkb1r/ppp1pppp/5B2/3p1b2/3P4/2N5/PPP1PPPP/R2QKBNR",
        },
        {
          name: "London System: Poisoned Pawn Variation",
          fen: "rnb1kb1r/pp2pppp/1q3n2/2pp4/3P1B2/2N1PN2/PPP2PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Baltic Defense, Pseudo-Slav",
          fen: "rn1qkbnr/pp3ppp/2p1p3/3p1b2/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Pawn Game: Anti-Torre",
          fen: "rn1qkbnr/ppp1pppp/8/3p4/3P2b1/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Chandler Gambit",
          fen: "rnbqkbnr/pp2pppp/8/3p4/3p4/5NP1/PPP1PPBP/RNBQK2R",
        },
        {
          name: "Queen's Pawn Game: Chigorin Variation",
          fen: "r1bqkbnr/ppp1pppp/2n5/3p4/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Krause Variation",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Levitsky Attack, Euwe Variation, Modern Line",
          fen: "rnb1kbnr/pp2ppp1/1qp4p/3p4/3P3B/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: London System",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P1B2/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: London System, Pterodactyl Variation",
          fen: "rnb1k1nr/pp1pppbp/6p1/q7/3P1B2/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: Symmetrical Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Symmetrical Variation, Pseudo-Catalan",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/5NP1/PPP1PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Zilbermints Countergambit",
          fen: "rnbqkb1r/p1p1pppp/5n2/1p1p4/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Zukertort Variation",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/3P4/5N2/PPP1PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Torre Attack",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p2B1/3P4/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: Torre Attack, Gossip Variation",
          fen: "rnbqkb1r/ppp1pppp/8/3p2B1/3Pn3/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: Torre Attack, Gr\xfcnfeld Variation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p2B1/3P4/5N2/PPP1PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Pawn Game: Colle System",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/3P4/4PN2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Colle System, Anti-Colle",
          fen: "rn1qkb1r/ppp1pppp/5n2/3p1b2/3P4/4PN2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Colle System, Gr\xfcnfeld Formation",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p4/3P4/3BPN2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Queen's Pawn Game: Colle System",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/3P4/4PN2/PPP2PPP/RNBQKB1R",
        },
        {
          name: "Queen's Pawn Game: Colle System",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/3P4/3BPN2/PPP2PPP/RNBQK2R",
        },
        {
          name: "Queen's Pawn Game: Colle System, Traditional Colle",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pp4/3P4/2PBPN2/PP3PPP/RNBQK2R",
        },
        {
          name: "Queen's Pawn Game: Zukertort Variation",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pp4/3P4/1P2PN2/P1PN1PPP/R1BQKB1R",
        },
        {
          name: "Rubinstein Opening",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pp4/3P4/1P1BPN2/P1P2PPP/RNBQK2R",
        },
        {
          name: "Rubinstein Opening: Bogoljubov Defense",
          fen: "r1bq1rk1/pp3ppp/2nbpn2/2pp4/3P4/1P1BPN2/PBP2PPP/RN1Q1RK1",
        },
        {
          name: "Rubinstein Opening: Classical Defense",
          fen: "r1bq1rk1/pp2bppp/2n1pn2/2pp4/3P4/1P1BPN2/PBP2PPP/RN1Q1RK1",
        },
        {
          name: "Rubinstein Opening: Semi-Slav Defense",
          fen: "r1bq1rk1/pppn1ppp/3bpn2/3p4/3P4/1P1BPN2/PBP2PPP/RN1Q1RK1",
        },
        {
          name: "Queen's Gambit",
          fen: "rnbqkbnr/ppp1pppp/8/3p4/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Austrian Attack, Salvio Countergambit",
          fen: "rnbqkbnr/pp2pppp/8/2P5/2Pp4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Austrian Defense",
          fen: "rnbqkbnr/pp2pppp/8/2pp4/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Austrian Defense, Gusev Countergambit",
          fen: "rnbqkb1r/pp2pppp/5n2/2pP4/3P4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Austrian Defense, Haberditz Variation",
          fen: "rnb1kb1r/pp2pppp/8/q1PP4/4n3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Baltic Defense",
          fen: "rn1qkbnr/ppp1pppp/8/3p1b2/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Baltic Defense, Argentinian Gambit",
          fen: "r2qkbnr/pp2pppp/2n5/8/Q2P4/8/PP2PPPP/RbB1KBNR",
        },
        {
          name: "Queen's Gambit Declined: Baltic Defense, Pseudo-Chigorin",
          fen: "r2qkbnr/ppp2ppp/2n1p3/3p1b2/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Baltic Defense, Queen Attack",
          fen: "rn1qkbnr/ppp1pppp/8/3p1b2/2PP4/1Q6/PP2PPPP/RNB1KBNR",
        },
        {
          name: "Queen's Gambit Declined: Baltic Defense, Queen Attack Deferred",
          fen: "rn1qkbnr/ppp2ppp/4p3/3p1b2/2PP4/1QN5/PP2PPPP/R1B1KBNR",
        },
        {
          name: "Queen's Gambit Declined: Marshall Defense",
          fen: "rnbqkb1r/ppp1pppp/5n2/3p4/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Marshall Defense, Tan Gambit",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3P4/3P4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Zilbermints Gambit",
          fen: "rnbqkbnr/p1p1pppp/8/1p1p4/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense",
          fen: "r1bqkbnr/ppp1pppp/2n5/3p4/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense",
          fen: "r1bqkbnr/ppp1pppp/2n5/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense",
          fen: "r1bqkbnr/ppp1pppp/2n5/8/2pP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Exchange Variation",
          fen: "r1b1kbnr/ppp1pppp/2n5/3q4/3P4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Exchange Variation, Costa's Line",
          fen: "r1b1k1nr/ppp2ppp/2n5/3q4/3p4/2B1P3/PP2NPPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Janowski Variation",
          fen: "r1bqkbnr/ppp1pppp/2n5/8/2pP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Lazard Gambit",
          fen: "r1bqkbnr/ppp2ppp/2n5/3pp3/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Main Line",
          fen: "r2qkbnr/ppp1pppp/2n5/3p4/2PP2b1/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Main Line, Alekhine Variation",
          fen: "r2qkbnr/ppp1pppp/2n5/3p4/Q1PP2b1/5N2/PP2PPPP/RNB1KB1R",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Modern Gambit",
          fen: "r1bqkb1r/ppp1pppp/2n2n2/8/2pP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Chigorin Defense, Tartakower Gambit",
          fen: "r1bqkbnr/ppp2ppp/2n5/3pp3/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit",
          fen: "rnbqkbnr/ppp2ppp/8/3pp3/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Balogh Variation",
          fen: "r1b1kbnr/ppp1qppp/2n5/4P3/2Pp4/5N2/PP1NPPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Janowski Variation",
          fen: "r1bqkbnr/ppp3pp/2n2p2/4P3/2Pp4/5N2/PP1NPPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Krenosz Variation",
          fen: "r3k1nr/ppp1qppp/2n5/4P3/1bPp4/5N1P/PP1BPPP1/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Lasker Trap",
          fen: "rnbqk1nr/ppp2ppp/8/4P3/1bP5/4p3/PP1B1PPP/RN1QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Modern Line",
          fen: "r1bqkbnr/ppp2ppp/2n5/4P3/2Pp4/5N2/PP1NPPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Normal Line",
          fen: "rnbqkbnr/ppp2ppp/8/4P3/2Pp4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Tartakower Defense",
          fen: "rnbqkbnr/pp3ppp/8/2p1P3/2Pp4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Fianchetto Variation",
          fen: "r1bqkbnr/ppp2ppp/2n5/4P3/2Pp4/5NP1/PP2PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Fianchetto Variation, Be6 Line",
          fen: "r2qkbnr/ppp2ppp/2n1b3/4P3/2Pp4/5NP1/PP2PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Fianchetto Variation, Bf5 Line",
          fen: "r2qkbnr/ppp2ppp/2n5/4Pb2/2Pp4/5NP1/PP2PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Albin Countergambit, Fianchetto Variation, Bg4 Line",
          fen: "r2qkbnr/ppp2ppp/2n5/4P3/2Pp2b1/5NP1/PP2PP1P/RNBQKB1R",
        },
        {
          name: "Slav Defense",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Slav Defense",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Slav Defense",
          fen: "rnbqkbnr/pp2pppp/2p5/8/2pP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Slav Defense: Diemer Gambit",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/2PPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Slav Defense: Exchange Variation",
          fen: "rnbqkbnr/pp2pppp/2p5/3P4/3P4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Slav Defense: Exchange Variation, Boor Attack",
          fen: "rnbqkb1r/pp2pppp/5n2/3p4/3P4/2N2P2/PP2P1PP/R1BQKBNR",
        },
        {
          name: "Slav Defense: Slav Gambit, Alekhine Attack",
          fen: "rnbqkbnr/pp2pppp/2p5/8/2pPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Slav Defense: Winawer Countergambit",
          fen: "rnbqkbnr/pp3ppp/2p5/3pp3/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Slav Defense: Winawer Countergambit, Anti-Winawer Gambit",
          fen: "rnbqkbnr/pp3ppp/2p5/3pp3/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Slav Defense: Bonet Gambit",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3p2B1/2PP4/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Slav Defense: Breyer Variation",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3p4/2PP4/5N2/PP1NPPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Modern Line",
          fen: "rnbqkbnr/pp2pppp/2p5/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Slav Defense: Quiet Variation",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3p4/2PP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Slav Defense: Quiet Variation, Pin Defense",
          fen: "rn1qkb1r/pp2pppp/2p2n2/3p4/2PP2b1/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Slav Defense: Quiet Variation, Amsterdam Variation",
          fen: "rn1qkb1r/pp1n1ppp/4p3/3pNb2/3P4/2N1P3/PP3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Quiet Variation, Landau Variation",
          fen: "rnq1kb1r/pp3ppp/4pn2/3p1b2/3P4/NQ2PN2/PP1B1PPP/R3KB1R",
        },
        {
          name: "Slav Defense: Quiet Variation, Schallopp Defense",
          fen: "rn1qkb1r/pp2pppp/2p2n2/3p1b2/2PP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Slav Defense: Exchange Variation",
          fen: "rnbqkb1r/pp2pppp/5n2/3p4/3P4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Slav Defense: Exchange Variation, Schallopp Variation",
          fen: "rn1qkb1r/pp2pppp/5n2/3p1b2/3P4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Exchange Variation, Symmetrical Line",
          fen: "r2qkb1r/pp2pppp/2n2n2/3p1b2/3P1B2/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Slav Defense: Exchange Variation, Trifunovic Variation",
          fen: "r2qk2r/pp3ppp/2n1pn2/3p1b2/1b1P1B2/1QN1PN2/PP3PPP/R3KB1R",
        },
        {
          name: "Slav Defense: Alekhine Variation",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/2pP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Chameleon Variation",
          fen: "rnbqkb1r/1p2pppp/p1p2n2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Chameleon Variation, Advance System",
          fen: "rnbqkb1r/1p2pppp/p1p2n2/2Pp4/3P4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Geller Gambit",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/2pPP3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Geller Gambit",
          fen: "rnbqkb1r/p3pppp/2p2n2/1p2P3/2pP4/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Schlechter Variation",
          fen: "rnbqkb1r/pp2pp1p/2p2np1/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: S\xfcchting Variation",
          fen: "rnb1kb1r/pp2pppp/1qp2n2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Three Knights Variation",
          fen: "rnbqkb1r/pp2pppp/2p2n2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Two Knights Attack",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/2pP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Alapin Variation",
          fen: "rnbqkb1r/pp2pppp/2p2n2/8/P1pP4/2N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Smyslov Variation",
          fen: "r1bqkb1r/pp2pppp/n1p2n2/8/P1pP4/2N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Soultanbeieff Variation",
          fen: "rnbqkb1r/pp3ppp/2p1pn2/8/P1pP4/2N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Steiner Variation",
          fen: "rn1qkb1r/pp2pppp/2p2n2/8/P1pP2b1/2N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation",
          fen: "rn1qkb1r/pp2pppp/2p2n2/5b2/P1pP4/2N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Bled Attack",
          fen: "rn1qkb1r/pp2pppp/2p2n2/5b2/P1pP3N/2N5/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Carlsbad Variation",
          fen: "r3kb1r/ppqn1ppp/2p2n2/4pb2/P1NP4/2N3P1/1P2PP1P/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Carlsbad Variation, Morozevich Variation",
          fen: "r3kb1r/ppqn1p1p/2p5/4nbp1/P1N2B2/2N3P1/1P2PPBP/R2QK2R",
        },
        {
          name: "Slav Defense: Czech Variation, Krause Attack",
          fen: "rn1qkb1r/pp2pppp/2p2n2/4Nb2/P1pP4/2N5/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Krause Attack, Fazekas Gambit",
          fen: "r2qkb1r/pp2pppp/n1p2n2/4Nb2/P1pPP3/2N5/1P3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Wiesbaden Variation",
          fen: "rn1qkb1r/pp3ppp/2p1pn2/4Nb2/P1pP4/2N5/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Wiesbaden Variation, Sharp Line",
          fen: "rn1qk2r/pp3ppp/2p1pn2/4Nb2/PbpPP3/2N2P2/1P4PP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Classical System",
          fen: "rn1qkb1r/pp2pppp/2p2n2/5b2/P1pP4/2N1PN2/1P3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Lasker Variation",
          fen: "r2qkb1r/pp2pppp/n1p2n2/5b2/P1pP4/2N1PN2/1P3PPP/R1BQKB1R",
        },
        {
          name: "Slav Defense: Czech Variation, Classical System, Main Line",
          fen: "rn1q1rk1/pp3ppp/2p1pn2/5b2/PbBP4/2N1PN2/1P2QPPP/R1B2RK1",
        },
        {
          name: "Slav Defense: Czech Variation, Dutch Variation",
          fen: "rn1qk2r/pp3ppp/2p1pn2/5b2/PbBP4/2N1PN2/1P3PPP/R1BQ1RK1",
        },
        {
          name: "Slav Defense: Czech Variation, Dutch Variation, S\xe4misch Variation",
          fen: "rn1q1rk1/pp3ppp/2p1p3/5b2/PbBPn1P1/2N1PN2/1P2QP1P/R1B2RK1",
        },
        {
          name: "Queen's Gambit Accepted",
          fen: "rnbqkbnr/ppp1pppp/8/8/2pP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Accelerated Mannheim Variation",
          fen: "rnbqkbnr/ppp1pppp/8/8/Q1pP4/8/PP2PPPP/RNB1KBNR",
        },
        {
          name: "Queen's Gambit Accepted: Central Variation, Alekhine System",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/2pPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Central Variation, Greco Variation",
          fen: "rnbqkbnr/p1p1pppp/8/1p6/2pPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Central Variation, McDonnell Defense",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/2pPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Central Variation, McDonnell Defense, Somov Gambit",
          fen: "rnbqkbnr/ppp2ppp/8/4p3/2BPP3/8/PP3PPP/RNBQK1NR",
        },
        {
          name: "Queen's Gambit Accepted: Central Variation, Modern Defense",
          fen: "r1bqkbnr/ppp1pppp/2n5/8/2pPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Central Variation, Rubinstein Defense",
          fen: "rnbqkbnr/pp2pppp/8/2p5/2pPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Central Variation, Rubinstein Defense, Yefimov Gambit",
          fen: "rnbqkbnr/p3pppp/8/1ppP4/2p1P3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Linares Variation",
          fen: "rnbqkb1r/p3pppp/5n2/1ppP4/2p1P3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Old Variation",
          fen: "rnbqkbnr/ppp1pppp/8/8/2pP4/4P3/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Old Variation, Billinger Gambit",
          fen: "rnb1kbnr/ppp1qppp/8/8/2Bp4/PQ2P3/1P3PPP/RNB1K1NR",
        },
        {
          name: "Queen's Gambit Accepted: Old Variation, Christensen Gambit",
          fen: "rnb1kbnr/ppp1qppp/8/8/2Bp4/1Q2PN2/PP3PPP/RNB1K2R",
        },
        {
          name: "Queen's Gambit Accepted: Old Variation, Korchnoi Gambit",
          fen: "rnb1kbnr/ppp1qppp/8/8/2Bp4/1Q2P3/PP3PPP/RNB2KNR",
        },
        {
          name: "Queen's Gambit Accepted: Old Variation, Novikov Gambit",
          fen: "rnb1kbnr/ppp1qppp/8/8/2Bp4/1Q2P3/PP1N1PPP/R1B1K1NR",
        },
        {
          name: "Queen's Gambit Accepted: Saduleto Variation",
          fen: "rnbqkbnr/ppp1pppp/8/8/2pPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Schwartz Defense",
          fen: "rnbqkbnr/ppp1p1pp/8/5p2/2pPP3/8/PP3PPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Accepted: Alekhine Defense, Borisenko-Furman Variation",
          fen: "rnbqkbnr/1pp1pppp/p7/8/2pPP3/5N2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Godes Variation",
          fen: "r1bqkbnr/pppnpppp/8/8/2pP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Gunsberg Defense",
          fen: "rnbqkbnr/pp2pppp/8/2p5/2pP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Normal Variation",
          fen: "rnbqkbnr/ppp1pppp/8/8/2pP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Rosenthal Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/8/2pP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Slav Gambit",
          fen: "rnbqkbnr/p1p1pppp/8/1p6/2pP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Alekhine Defense",
          fen: "rnbqkbnr/1pp1pppp/p7/8/2pP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Alekhine Defense, Alatortsev Variation",
          fen: "rn1qkbnr/1pp2ppp/p3p3/3P4/2B3b1/4PN2/PP3PPP/RNBQK2R",
        },
        {
          name: "Queen's Gambit Accepted: Alekhine Defense, Haberditz Variation",
          fen: "rnbqkbnr/2p1pppp/p7/1p6/2pP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/2pP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Mannheim Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/Q1pP4/5N2/PP2PPPP/RNB1KB1R",
        },
        {
          name: "Queen's Gambit Accepted: Bogoljubov Defense",
          fen: "rnbqkb1r/1pp1pppp/p4n2/8/2pPP3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Gunsberg Defense, Prianishenmo Gambit",
          fen: "rnbqkb1r/pp3ppp/5n2/2ppP3/2p5/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Showalter Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/2pP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Janowski-Larsen Variation",
          fen: "rn1qkb1r/ppp1pppp/5n2/8/2pP2b1/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Normal Variation",
          fen: "rnbqkb1r/ppp1pppp/5n2/8/2pP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Smyslov Variation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/8/2pP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Winawer Defense",
          fen: "rn1qkb1r/ppp1pppp/4bn2/8/2pP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense",
          fen: "rnbqkb1r/pp3ppp/4pn2/2p5/2BP4/4PN2/PP3PPP/RNBQK2R",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Normal Line",
          fen: "rnbqkb1r/pp3ppp/4pn2/2p5/2BP4/4PN2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Steinitz Variation, Development Variation",
          fen: "r1bqkb1r/pp3ppp/2n1pn2/2p5/2BP4/4PN2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Steinitz Variation, Exchange Variation",
          fen: "rnbqkb1r/pp3ppp/4pn2/8/2Bp4/4PN2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical, Furman Variation",
          fen: "r1bqk2r/5ppp/p1n1pn2/1pb1P3/2B5/5N2/PP2QPPP/RNB2RK1",
        },
        {
          name: "Queen's Gambit Accepted: Normal Variation, Traditional System",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/2pP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Main Line",
          fen: "rnbqkb1r/1p3ppp/p3pn2/2p5/2BP4/4PN2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Rubinstein Variation",
          fen: "rnbqkb1r/1p3ppp/p3pn2/2p5/P1BP4/4PN2/1P3PPP/RNBQ1RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Russian Gambit",
          fen: "rnbqkb1r/1p3ppp/p3pn2/2p5/2BPP3/5N2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Queen's Gambit Accepted: Furman Variation",
          fen: "rnbqk2r/1p3ppp/p3pn2/2b5/2B5/4PN2/PP3PPP/RNBQ1RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Alekhine System",
          fen: "rnbqkb1r/1p3ppp/p3pn2/2p5/2BP4/4PN2/PP2QPPP/RNB2RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Alekhine System",
          fen: "rnbqkb1r/5ppp/p3pn2/1pp5/2BP4/4PN2/PP2QPPP/RNB2RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical, Flohr Variation",
          fen: "r3kb1r/1bq2ppp/p3pn2/1p1P4/2p5/2N1PN2/PPQ2PPP/R1BR2K1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Alekhine System, Main Line",
          fen: "rn1qkb1r/1b3ppp/p3pn2/1pp5/3P4/1B2PN2/PP2QPPP/RNB2RK1",
        },
        {
          name: "Queen's Gambit Accepted: Classical Defense, Alekhine System, Smyslov Variation",
          fen: "r2qk2r/1b1n1ppp/p2bpn2/1pp5/3P4/1BN1PN2/PP2QPPP/R1BR2K1",
        },
        {
          name: "Queen's Gambit Declined",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Capablanca Variation",
          fen: "rnbqkb1r/ppp2pp1/4pn1p/3p2B1/2PP4/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Capablanca Variation",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p2B1/2PP4/4PN2/PP1N1PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semmering Variation",
          fen: "r1bqkb1r/pp1n1ppp/4pn2/2pp4/2PP4/3BPN2/PP1N1PPP/R1BQK2R",
        },
        {
          name: "Queen's Gambit Declined: Spielmann Variation",
          fen: "rnbqkb1r/pp3p1p/2p1pnp1/3p4/2PP4/4PN2/PP1N1PPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Stonewall Variation",
          fen: "rnbqkb1r/pp4pp/2p1p3/3p1p2/2PPn3/3BPN2/PP1N1PPP/R1BQK2R",
        },
        {
          name: "Queen's Gambit Declined: Tarrasch Defense, Pseudo-Tarrasch",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Tarrasch Defense, Pseudo-Tarrasch Bishop Attack",
          fen: "rnbqkbnr/pp3ppp/8/2pp2B1/3P4/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Traditional Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p2B1/2PP4/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Vienna Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/3p2B1/1bPP4/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Semi-Slav Defense: Quiet Variation",
          fen: "rnbqkb1r/pp3ppp/2p1pn2/3p4/2PP4/4PN2/PP1N1PPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Quiet Variation",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p4/2PP4/4PN2/PP1N1PPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Alapin Variation",
          fen: "rnbqkbnr/p1p2ppp/1p2p3/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Charousek Variation",
          fen: "rnbqk1nr/ppp1bppp/4p3/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Charousek Variation, Miladinovic Gambit",
          fen: "rnbqk1nr/ppp1bppp/4p3/8/2PPp3/2N2P2/PP4PP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Janowski Variation",
          fen: "rnbqkbnr/1pp2ppp/p3p3/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Queen's Knight Variation",
          fen: "rnbqkbnr/ppp2ppp/4p3/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Semi-Slav, Abrahams Variation",
          fen: "rnbqk1nr/5ppp/2p1p3/pp6/PbpP4/2N1PN2/1P1B1PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Slav, Junge Variation",
          fen: "rnb1k1nr/p4ppp/1qp1p3/1p6/PbpP4/2N1PN2/1P1B1PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Slav, Koomen Variation",
          fen: "rnb1k1nr/p3qppp/2p1p3/1p6/PbpP4/2N1PN2/1P1B1PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Uhlmann Variation",
          fen: "rnbq1rk1/ppp1bpp1/4pn1p/8/2pP3B/2N2N2/PP2PPPP/2RQKB1R",
        },
        {
          name: "Semi-Slav Defense: Accelerated Move Order",
          fen: "rnbqkbnr/pp3ppp/2p1p3/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Semi-Slav Defense: Anti-Noteboom, Stonewall Variation, Portisch Gambit",
          fen: "rnbqkbnr/pp4pp/2p1p3/3p1p2/2PP2P1/2N1P3/PP3P1P/R1BQKBNR",
        },
        {
          name: "Semi-Slav Defense: Gunderam Gambit",
          fen: "rnbqkbnr/pp3ppp/2p1p3/8/2PPp3/2N2P2/PP4PP/R1BQKBNR",
        },
        {
          name: "Semi-Slav Defense: Marshall Gambit",
          fen: "rnbqkbnr/pp3ppp/2p1p3/3p4/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Semi-Slav Defense: Marshall Gambit, Forgotten Variation",
          fen: "rnbqk1nr/pp3ppp/2p1p3/8/1bPP4/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Semi-Slav Defense: Marshall Gambit, Main Line",
          fen: "rnbqk1nr/pp3ppp/2p1p3/8/1bPPN3/8/PP1B1PPP/R2QKBNR",
        },
        {
          name: "Semi-Slav Defense: Marshall Gambit, Tolush Variation",
          fen: "rnb1k1nr/pp3ppp/4p3/2B5/2P5/8/PP2BPqP/R2QK1NR",
        },
        {
          name: "Semi-Slav Defense: Noteboom Variation",
          fen: "rnbqkbnr/pp3ppp/2p1p3/8/2pP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Noteboom Variation, Abrahams Variation",
          fen: "rnbqk1nr/p4ppp/4p3/1p6/2pP4/2P1PN2/5PPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Noteboom Variation, Anti-Noteboom Gambit",
          fen: "rnbqkbnr/pp3ppp/2p1p3/8/2pP4/2N2NP1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Noteboom Variation, Anti-Noteboom Variation",
          fen: "rnbqkbnr/pp3ppp/2p1p3/6B1/2pP4/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense: Noteboom Variation, Anti-Noteboom Variation, Belyavsky Line",
          fen: "rnbqkbnr/pp4pp/2p1pp2/6B1/2pP4/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Tarrasch Defense",
          fen: "rnbqkbnr/pp3ppp/8/2pp4/3P4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Tarrasch Defense",
          fen: "rnbqkbnr/pp3ppp/4p3/2pp4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Tarrasch Defense: Gr\xfcnfeld Gambit",
          fen: "r1bqkbnr/p4ppp/2n5/1pP5/N2p4/5N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Tarrasch Defense: Marshall Gambit",
          fen: "rnbqkbnr/pp3ppp/8/2pp4/3PP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "Tarrasch Defense: Schara Gambit",
          fen: "rnbqkbnr/pp3ppp/4p3/3P4/3p4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Tarrasch Defense: Symmetrical Variation",
          fen: "r1bqkb1r/pp3ppp/2n1pn2/2pp4/2PP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Tarrasch Defense: Tarrasch Gambit",
          fen: "rnbqkbnr/p4ppp/8/1pP5/N2p4/8/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Tarrasch Defense: Two Knights Variation",
          fen: "rnbqkbnr/pp3ppp/8/2pp4/3P4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Tarrasch Defense: von Hennig Gambit",
          fen: "r2qkbnr/pp3ppp/2n1b3/3Q4/8/2N5/PP2PPPP/R1B1KBNR",
        },
        {
          name: "Tarrasch Defense: Dubov Tarrasch",
          fen: "r1bqk2r/pp3ppp/2n2n2/2bp4/3N4/2N3P1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Tarrasch Defense: Prague Variation",
          fen: "r1bqkb1r/pp3ppp/2n2n2/2pp4/3P4/2N2NP1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "Tarrasch Defense: Rubinstein System",
          fen: "r1bqkbnr/pp3ppp/2n5/2pp4/3P4/2N2NP1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "Tarrasch Defense: Swedish Variation",
          fen: "r1bqkbnr/pp3ppp/2n5/3p4/2pP4/2N2NP1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "Tarrasch Defense: Swedish Variation, Central Break",
          fen: "r1bqkbnr/pp3ppp/2n5/3p4/2pPP3/2N2NP1/PP3P1P/R1BQKB1R",
        },
        {
          name: "Tarrasch Defense: Wagner Variation",
          fen: "r2qkb1r/pp3ppp/2n2n2/2pp4/3P2b1/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Queen's Gambit Declined: Tarrasch Defense, Stoltz Variation",
          fen: "r2q1rk1/p3bppp/1pn1bn2/2pp2B1/3P4/2N2NP1/PP2PPBP/2RQ1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation",
          fen: "r1bq1rk1/pp2bppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Advance Variation",
          fen: "r1bq1rk1/pp2bppp/2n2n2/3p2B1/2pP4/2N2NP1/PP2PPBP/R2Q1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Bogoljubov Variation",
          fen: "r2q1rk1/pp2bppp/2n1bn2/3p2B1/2pP4/2N2NP1/PP2PPBP/2RQ1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Carlsbad Variation",
          fen: "r1bq1rk1/pp2bppp/2n2n2/2pp2B1/3P4/2N2NP1/PP2PPBP/R2Q1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Chandler Variation",
          fen: "r2qr1k1/pp2bpp1/2n1bn1p/3p4/3N4/2N1B1P1/PP2PPBP/2RQ1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Classical Tarrasch Gambit",
          fen: "r1bq1rk1/pp2bppp/2n2n2/2P5/3p4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Endgame Variation",
          fen: "r2q1rk1/pp2bppp/2n1bn2/2pp2B1/3P4/2N2NP1/PP2PPBP/R2Q1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Main Line",
          fen: "r1bqr1k1/pp2bpp1/2n2n1p/3p4/3N4/2N1B1P1/PP2PPBP/R2Q1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Petursson Variation",
          fen: "r1bqr1k1/pp2bppp/2n2n2/3p2B1/3N4/2N3P1/PP2PPBP/R2Q1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, R\xe9ti Variation",
          fen: "r1bq1rk1/pp3ppp/2n2n2/2bp4/N7/5NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Tarrasch Defense: Classical Variation, Spassky Variation",
          fen: "r2q1rk1/pp2bpp1/2n2n1p/3p4/3N2b1/2N1B1P1/PP2PPBP/R2Q1RK1",
        },
        {
          name: "Tarrasch Defense: Prague Variation, Main Line",
          fen: "r1bqk2r/pp2bppp/2n2n2/2pp4/3P4/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Queen's Gambit Declined: Exchange Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3P4/3P4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Exchange Variation, Chameleon Variation",
          fen: "r1bqrnk1/ppp1bppp/5n2/3p2B1/3P4/2NBP3/PPQ1NPPP/2KR3R",
        },
        {
          name: "Queen's Gambit Declined: Exchange Variation, Positional Variation",
          fen: "rnbqkb1r/ppp2ppp/5n2/3p2B1/3P4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Exchange Variation, Positional Variation",
          fen: "rnbqkb1r/pp3ppp/2p2n2/3p2B1/3P4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Exchange Variation, S\xe4misch Variation",
          fen: "r1bqkb1r/pppn1ppp/5n2/3p4/3P1B2/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP1B2/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Normal Defense",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Exchange Variation, Reshevsky Variation",
          fen: "rnbqkb1r/pp3ppp/2p2n2/3p2B1/3P4/2N5/PPQ1PPPP/R3KBNR",
        },
        {
          name: "Queen's Gambit Declined: Barmen Variation",
          fen: "r1bqkb1r/pppn1ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack",
          fen: "rnbqk2r/ppp1bppp/4pn2/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack",
          fen: "r1b2rk1/pp3ppp/2n1pn2/q1bp4/2P2B2/P1N1PN2/1PQ2PPP/3RKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack",
          fen: "r1b2rk1/pp3ppp/2n1pn2/q1bp4/2P2B2/P1N1PN2/1PQ2PPP/2KR1B1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack, Fianchetto Defense",
          fen: "rnbq1rk1/p1p1bppp/1p2pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack, Main Line",
          fen: "rnbq1rk1/pp3ppp/4pn2/2bp4/2P2B2/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack, Orthodox Defense",
          fen: "rnbq1rk1/pp2bppp/2p1pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack, Two Knights Defense",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Harrwitz Attack, Two Knights Defense, Blockade Line",
          fen: "r1bq1rk1/pppnbppp/4pn2/2Pp4/3P1B2/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Knight Defense, Alekhine Gambit",
          fen: "r1bqkb1r/pppn1pp1/4pn1p/8/2pP3B/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Miles Variation",
          fen: "rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N2N2/PPQ1PPPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Three Knights Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Three Knights, Vienna Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/2pP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Vienna Variation, Quiet Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/2pP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Ragozin Defense",
          fen: "rnbqk2r/ppp2ppp/4pn2/3p4/1bPP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Ragozin Defense, Alekhine Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/3p4/QbPP4/2N2N2/PP2PPPP/R1B1KB1R",
        },
        {
          name: "Queen's Gambit Declined: Westphalian Variation",
          fen: "r1bqk2r/pp1n1ppp/4pn2/2pp2B1/1bPP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Ragozin Defense, Vienna Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/6B1/1bpP4/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pp4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Levenfish Variation",
          fen: "r1b2rk1/pp2qppp/2n1pn2/2bp4/2P1P3/2NB1N2/PP2QPPP/R1B2RK1",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Pillsbury Variation",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pp2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Symmetrical Variation",
          fen: "r1bq1rk1/pp3ppp/2nbpn2/2pp4/2PP4/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pP4/3P4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Exchange Variation",
          fen: "rnbqkb1r/pp3ppp/4p3/2pn4/3PP3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Kmoch Variation",
          fen: "rnbq1rk1/pp3ppp/4p3/1B6/3PP3/5N2/P2Q1PPP/R3K2R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Pillsbury Variation",
          fen: "rnbqkb1r/pp3ppp/4p3/2pn4/3P4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, San Sebastian Variation",
          fen: "rnb1k2r/pp3ppp/4p3/q7/1b1PP3/5N2/P2B1PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Main Line",
          fen: "r1bqkb1r/pp3ppp/2n1p3/2pn4/3P4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Queen's Gambit Declined: Hastings Variation",
          fen: "rnb1kb1r/pp3pp1/2p1pq1p/3p4/2PP4/1QN2N2/PP2PPPP/R3KB1R",
        },
        {
          name: "Semi-Slav Defense",
          fen: "rnbqkb1r/pp3ppp/2p1pn2/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Anti-Moscow Gambit",
          fen: "rnbqkb1r/pp3pp1/2p1pn1p/3p4/2PP3B/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense Accepted",
          fen: "rnbqkb1r/pp3ppp/2p1pn2/6B1/2pP4/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense: Botvinnik Variation",
          fen: "rnbqkb1r/pp3ppp/2p1pn2/6B1/2pPP3/2N2N2/PP3PPP/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense: Botvinnik Variation",
          fen: "rnbqkb1r/p4p2/2p1pn1p/1p2P1N1/2pP3B/2N5/PP3PPP/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense: Botvinnik Variation, Alatortsev System",
          fen: "rnbqkb1r/p4p2/2p1p2p/1p1nP1N1/2pP3B/2N5/PP3PPP/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense: Botvinnik Variation, Ekstrom Variation",
          fen: "rnbqkb1r/p4p2/2p1pP1p/1p2N3/2pP3p/2N5/PP3PPP/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense: Botvinnik Variation, Lilienthal Variation",
          fen: "r1bqkb1r/p2n1p2/2p1pn2/1p2P1B1/2pP4/2N3P1/PP3P1P/R2QKB1R",
        },
        {
          name: "Semi-Slav Defense: Botvinnik Variation, Szabo Variation",
          fen: "r1bqkb1r/p2n1p2/2p1pn2/1p2P1B1/2pP4/2N2Q2/PP3PPP/R3KB1R",
        },
        {
          name: "Semi-Slav Defense: Accelerated Meran Variation",
          fen: "rnbqkb1r/1p3ppp/p1p1pn2/3p4/2PP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Main Line",
          fen: "rnbqkb1r/pp3ppp/2p1pn2/3p4/2PP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Normal Variation",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p4/2PP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Rubinstein System",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3pN3/2PP4/2N1P3/PP3PPP/R1BQKB1R",
        },
        {
          name: "Semi-Slav Defense: Stoltz Variation",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p4/2PP4/2N1PN2/PPQ2PPP/R1B1KB1R",
        },
        {
          name: "Semi-Slav Defense: Stoltz Variation, Center Variation",
          fen: "r1bqk2r/pp1n1ppp/2pbpn2/3p4/2PPP3/2N2N2/PPQ2PPP/R1B1KB1R",
        },
        {
          name: "Semi-Slav Defense: Stoltz Variation, Center Variation, Mikhalchishin Line",
          fen: "r1bqk2r/pp1n1ppp/2pb4/4P3/2P1Q3/5N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Semi-Slav Defense: Stoltz Variation, Shabalov Attack",
          fen: "r1bqk2r/pp1n1ppp/2pbpn2/3p4/2PP2P1/2N1PN2/PPQ2P1P/R1B1KB1R",
        },
        {
          name: "Semi-Slav Defense: Stonewall Defense",
          fen: "rnbqkb1r/pp4pp/2p1p3/3p1p2/2PPn3/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Bogoljubov Variation",
          fen: "r1bqk2r/pp1nbppp/2p1pn2/3p4/2PP4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Chigorin Defense",
          fen: "r1bqk2r/pp1n1ppp/2pbpn2/3p4/2PP4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Main Line",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p4/2PP4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Romih Variation",
          fen: "r1bqk2r/pp1n1ppp/2p1pn2/3p4/1bPP4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation",
          fen: "r1bqkb1r/p2n1ppp/2p1pn2/1p6/2BP4/2N1PN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Lundin Variation",
          fen: "r1bqkb1r/p2n1ppp/2p1pn2/8/1p1P4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Wade Variation",
          fen: "r2qkb1r/pb1n1ppp/2p1pn2/1p6/3P4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Wade Variation, Kaidanov Gambit",
          fen: "r2qkb1r/pb1n1ppp/4p3/3nP3/Np1N4/3B4/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Wade Variation, Larsen Variation",
          fen: "r2qkb1r/pb1n1ppp/4p3/2pnP3/Np1P4/3B1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Semi-Meran Variation",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/8/2BP4/2N1PN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation",
          fen: "r1bqkb1r/3n1ppp/p1p1pn2/1p6/3P4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation",
          fen: "r1bqkb1r/3n1ppp/p3pn2/1pp5/3PP3/2NB1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Old Variation",
          fen: "r1bqkb1r/3n1ppp/p3pn2/1pp1P3/3P4/2NB1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Pirc Variation",
          fen: "r1bqkb1r/3n1ppp/p1p1pn2/8/1p1PP3/2NB1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Reynolds' Variation",
          fen: "r1bqkb1r/3n1ppp/p3pn2/1ppP4/4P3/2NB1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Blumenfeld Variation",
          fen: "r1bqkb1r/3n1ppp/p3pn2/1N2P3/3p4/3B1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Rabinovich Variation",
          fen: "r1bqkb1r/3n1ppp/p3p3/1N2P3/3p2n1/3B1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Rellstab Attack",
          fen: "r3kb1r/5ppp/b3pn2/1p1qN1B1/3p4/3B4/PP2QPPP/R4RK1",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Sozin Variation",
          fen: "r1bqkb1r/5ppp/p3pn2/1N2n3/3p4/3B1N2/PP3PPP/R1BQK2R",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Sozin Variation",
          fen: "r1bqkb1r/5ppp/4pn2/1p2N3/3p4/3B4/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Semi-Slav Defense: Meran Variation, Stahlberg Variation",
          fen: "r1bqkb1r/5ppp/4pn2/1p2N3/3p4/3B1Q2/PP3PPP/R1B1K2R",
        },
        {
          name: "Queen's Gambit Declined: Been-Koomen Variation",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pp2B1/2PP4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Modern Variation",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p2B1/2PP4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Pseudo-Tarrasch Variation",
          fen: "rnbqkb1r/pp3ppp/4pn2/2pP2B1/3P4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Pseudo-Tarrasch Variation, Canal Variation",
          fen: "rnb1kb1r/pp3ppp/1q2pn2/2pP2B1/3P4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Pseudo-Tarrasch Variation, Primitive Pillsbury Variation",
          fen: "rnbqkb1r/pp3ppp/4pn2/3p2B1/2PQ4/2N2N2/PP2PPPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Semi-Tarrasch Defense, Krause Variation",
          fen: "rnbqkb1r/1p3ppp/p4n2/1N1pp1B1/Q1P5/2N5/PP2PPPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Alekhine Variation",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p2B1/2PPP3/2N2N2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Capablanca Variation, Anti-Cambridge Springs Variation",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p2B1/2PP4/P1N1P3/1P3PPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Manhattan Variation",
          fen: "r1bqk2r/pppn1ppp/4pn2/3p2B1/1bPP4/2N1P3/PP3PPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Modern Variation, Knight Defense",
          fen: "r1bqkb1r/pppn1ppp/4pn2/3p2B1/2PP4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Modern Variation, Knight Defense",
          fen: "r1bqkb1r/pppn1ppp/4pn2/3p2B1/2PP4/2N1P3/PP3PPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Modern Variation, Knight Defense",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p2B1/2PP4/2N1P3/PP3PPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Rochlin Variation",
          fen: "r1b1kb1r/pp1n1ppp/2p1pn2/q2p4/2PP4/2N2N2/PP1BPPPP/2RQKB1R",
        },
        {
          name: "Queen's Gambit Declined",
          fen: "r1bqkb1r/pp1n1ppp/2p1pn2/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Cambridge Springs Defense",
          fen: "r1b1kb1r/pp1n1ppp/2p1pn2/q2p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Cambridge Springs Defense",
          fen: "r1b1kb1r/pp1n1ppp/2p1pn2/q2P2B1/3P4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Cambridge Springs Defense, Argentine Variation",
          fen: "r1b2rk1/pp1n1ppp/2p1pn2/q2p4/1bPP3B/2N1P3/PPQN1PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Cambridge Springs Defense, Bogoljubov Variation",
          fen: "r1b1k2r/pp1n1ppp/2p1pn2/q2p2B1/1bPP4/2N1P3/PPQN1PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Cambridge Springs Defense, Capablanca Variation",
          fen: "r1b1kb1r/pp1n1ppp/2p1pB2/q2p4/2PP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Cambridge Springs Defense, Rubinstein Variation",
          fen: "r1b1kb1r/pp1n1ppp/2p1pn2/q5B1/2pP4/2N1P3/PP1N1PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Cambridge Springs Defense, Yugoslav Variation",
          fen: "r1b1kb1r/pp1n1ppp/2p1p3/q2n2B1/3P4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined",
          fen: "rnbqk2r/ppp1bppp/4pn2/3p2B1/2PP4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Lasker Defense",
          fen: "rnbqk2r/ppp1bppp/4p3/3p2B1/2PPn3/2N1P3/PP3PPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Modern Variation, Heral Variation",
          fen: "rnbqk2r/ppp1bppp/4pB2/3p4/2PP4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Queen's Gambit Declined: Neo-Orthodox Variation",
          fen: "rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N1P3/PP3PPP/2RQKBNR",
        },
        {
          name: "Queen's Gambit Declined: Anti-Tartakower Variation",
          fen: "rnbq1rk1/ppp1bpp1/4pB1p/3p4/2PP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Anti-Tartakower Variation, Petrosian Variation",
          fen: "r1bq1rk1/pp1n1pp1/2p1pb1p/8/2BP4/2N1PN2/PP3PPP/2RQ1RK1",
        },
        {
          name: "Queen's Gambit Declined: Modern Variation, Normal Line",
          fen: "rnbq1rk1/ppp1bppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Neo-Orthodox Variation",
          fen: "rnbq1rk1/ppp1bpp1/4pn1p/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Neo-Orthodox Variation, Main Line",
          fen: "rnbq1rk1/ppp1bpp1/4pn1p/3p4/2PP3B/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Pillsbury Attack",
          fen: "rn1q1rk1/pbp1bppp/1p3n2/3pN1B1/3P4/2NBP3/PP3PPP/R2QK2R",
        },
        {
          name: "Queen's Gambit Declined: Lasker Defense",
          fen: "rnbq1rk1/ppp1bpp1/4p2p/3p4/2PPn2B/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Lasker Defense, Russian Variation",
          fen: "r4rk1/pp1bqpp1/2n1pn1p/2p5/2BP4/2N1PN2/PPQ2PPP/R2R2K1",
        },
        {
          name: "Queen's Gambit Declined: Lasker Defense, Teichmann Variation",
          fen: "rnb2rk1/ppp1qpp1/4p2p/3p4/2PPn3/2N1PN2/PPQ2PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Lasker Defense, Bernstein Variation",
          fen: "rnb2rk1/ppp2pp1/3q3p/3p4/3P4/1QP1PN2/P4PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Lasker Defense, Bernstein Variation, Mar del Plata Gambit",
          fen: "rn1r2k1/ppp1qpp1/4b2p/3p4/2PP4/1Q2PN2/P4PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Lasker Defense, Main Line",
          fen: "rnb2rk1/ppp1qpp1/4p2p/3P4/3P4/2P1PN2/P4PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Tartakower Defense",
          fen: "rnbq1rk1/p1p1bpp1/1p2pn1p/3p4/2PP3B/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Tartakower Defense, Exchange Variation",
          fen: "rnbq1rk1/p1p1bpp1/1p3n1p/3p4/3P3B/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Tartakower Defense",
          fen: "rn3rk1/p1p1qpp1/1p2b2p/3p4/3P4/4PN2/PP3PPP/2RQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Tartakower Defense, Makogonov Exchange Variation",
          fen: "rnbq1rk1/p1p1bpp1/1p2p2p/3n4/3P3B/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Botvinnik Variation",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p2B1/2PP4/2NBPN2/PP3PPP/R2QK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rauzer Variation",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p2B1/2PP4/1QN1PN2/PP3PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rubinstein Variation",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p2B1/2PP4/2N1PN2/PPQ2PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rubinstein Variation, Flohr Line",
          fen: "r1bq1rk1/pp1nbppp/4pn2/2pP2B1/3P4/2N1PN2/PPQ2PPP/R3KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Capablanca Variation",
          fen: "r1bq1rk1/p1pnbppp/1p3n2/1B1p2B1/3P4/2N1PN2/PP3PPP/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Henneberger Variation",
          fen: "r1bq1rk1/1ppnbppp/p3pn2/3p2B1/2PP4/2N1PN2/PP3PPP/2RQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Main Line",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p2B1/2PP4/2N1PN2/PP3PPP/2RQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Main Line",
          fen: "r1bq1rk1/pp1nbppp/2p1pn2/3p2B1/2PP4/2N1PN2/PP3PPP/2RQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Pillsbury Variation",
          fen: "r1bq1rk1/p1pnbppp/1p3n2/3p2B1/3P4/2NBPN2/PP3PPP/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Swiss, Karlsbad Variation",
          fen: "r1bq1rk1/1ppnbppp/p3pn2/3P2B1/3P4/2N1PN2/PP3PPP/2RQKB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rubinstein Attack",
          fen: "r1bq1rk1/1p1nbppp/p1p1pn2/3p2B1/2PP4/P1N1PN2/1PQ2PPP/2R1KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rubinstein Attack",
          fen: "r1bq1rk1/pp1nbppp/2p1pn2/3p2B1/2PP4/2N1PN2/PPQ2PPP/2R1KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rubinstein Attack",
          fen: "r1bq1rk1/1p1nbppp/p1p1pn2/3p2B1/2PP4/2N1PN2/PPQ2PPP/2R1KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rubinstein Attack",
          fen: "r1bq1rk1/pp1nbppp/2p1p3/3p2B1/2PPn3/2N1PN2/PPQ2PPP/2R1KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Rubinstein Attack",
          fen: "r1bq1rk1/1p1nbppp/p1p1pn2/3P2B1/3P4/2N1PN2/PPQ2PPP/2R1KB1R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Bd3 Line",
          fen: "r1bq1rk1/pp1nbppp/2p1pn2/3p2B1/2PP4/2NBPN2/PP3PPP/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Fianchetto Variation",
          fen: "r1bq1rk1/p2nbppp/2p1pn2/1p4B1/2BP4/2N1PN2/PP3PPP/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Alekhine Variation",
          fen: "r1b2rk1/pp1nqppp/2p1p3/3n4/2BPN3/4PN2/PP3PPP/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Bd3 Line",
          fen: "r1b2rk1/pp1nqppp/2p1p3/3n4/2BP4/2N1PN2/PP3PPP/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Capablanca System",
          fen: "r1bq1rk1/pp1nbppp/2p1p3/3n2B1/2BP4/2N1PN2/PP3PPP/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Janowski Variation",
          fen: "r1bq1rk1/pp1nbppp/2p1p3/3n2B1/2BP3P/2N1PN2/PP3PP1/2RQK2R",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Main Line",
          fen: "r1b2rk1/pp1nqppp/2p1p3/3n4/2BP4/2N1PN2/PP3PPP/2RQ1RK1",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Classical Variation",
          fen: "r1b2rk1/pp1nqppp/2p5/4p3/2BP4/2R1PN2/PP3PPP/3Q1RK1",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Classical Variation",
          fen: "r1b2rk1/pp1nqppp/2p5/4p3/2BP4/2R1PN2/PP3PPP/1Q3RK1",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Classical Variation",
          fen: "r1b2rk1/pp1nqppp/2p5/4p3/2BP4/2R1PN2/PPQ2PPP/5RK1",
        },
        {
          name: "Queen's Gambit Declined: Orthodox Defense, Classical Variation",
          fen: "r1b2rk1/pp3ppp/2p5/4q3/2B5/2R1P3/PP3PPP/3Q1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Goglidze Attack",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/5P2/PP2P1PP/RNBQKBNR",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: with Nf3",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: with g3",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/6P1/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Exchange Variation",
          fen: "rnbqk2r/ppp1ppbp/6p1/3n4/3P4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Delayed Exchange Variation",
          fen: "rnbq1rk1/ppp1ppbp/6p1/3n4/3P4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Delayed Exchange Variation",
          fen: "rnbq1rk1/pp2ppbp/6p1/2pn4/3P4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Delayed Exchange Variation",
          fen: "rnbq1rk1/pp2ppbp/6p1/2Pn4/8/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Delayed Exchange Variation",
          fen: "rnbq1rk1/ppp1ppbp/1n4p1/8/3P4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Classical Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Classical Variation, Modern Defense",
          fen: "rnbq1rk1/ppp1ppbp/5np1/8/2pP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Classical Variation, Polgar Variation",
          fen: "r1bq1rk1/ppp1ppbp/2n2np1/3p4/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Classical Variation, Original Defense",
          fen: "rnbq1rk1/pp2ppbp/2p2np1/3p4/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Neo-Gr\xfcnfeld Defense: Ultra-Delayed Exchange Variation",
          fen: "rnbq1rk1/pp2ppbp/5np1/3p4/3P4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Gibbon Gambit",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP2P1/2N5/PP2PP1P/R1BQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Lundin Variation",
          fen: "rnbqkb1r/pp2pp1p/6p1/2p3B1/2PPp3/8/PP1QPPPP/R3KBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Lutikov Variation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/2N2P2/PP2P1PP/R1BQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Lutikov Variation, Murrey Attack",
          fen: "rnbqkb1r/pp2pp1p/6p1/2pn4/N2P4/5P2/PP2P1PP/R1BQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Stockholm Variation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p2B1/2PP4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Zaitsev Gambit",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP3P/2N5/PP2PPP1/R1BQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Accelerated Variation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/1QN5/PP2PPPP/R1B1KBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Brinckmann Attack",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP1B2/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Brinckmann Attack, Gr\xfcnfeld Gambit",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/2PP1B2/2N1P3/PP3PPP/R2QKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Brinckmann Attack, Gr\xfcnfeld Gambit, Botvinnik Variation",
          fen: "rn1q1rk1/pp2ppbp/4bnp1/2Pp4/2P2B2/2N1P3/PP3PPP/2RQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Brinckmann Attack, Gr\xfcnfeld Gambit, Capablanca Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/2PP1B2/2N1P3/PP3PPP/2RQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Brinckmann Attack, Reshevsky Gambit",
          fen: "rnb2rk1/pp2ppbp/5np1/q1Pp4/2P2B2/2N1P3/PP3PPP/2RQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Brinckmann Attack, Gr\xfcnfeld Gambit Accepted",
          fen: "rnb2rk1/ppB1ppbp/6p1/3q4/3P4/4P3/PP3PPP/R2QKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation",
          fen: "rnbqkb1r/ppp1pp1p/6p1/3n4/3P4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Modern Exchange Variation",
          fen: "rnbqk2r/ppp1ppbp/6p1/8/3PP3/2P2N2/P4PPP/R1BQKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Modern Exchange Variation, Kramnik's Line",
          fen: "rnbqk2r/pp2ppbp/6p1/2p5/3PP3/2P2N1P/P4PP1/R1BQKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Modern Exchange Variation, Pawn Grab Line",
          fen: "r1bq1rk1/pp2pp1p/2n3p1/2pP4/4P3/2b2N2/P3BPPP/1RBQK2R",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Nadanian Attack",
          fen: "rnbqkb1r/ppp1pp1p/6p1/3n4/N2P4/8/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Classical Variation",
          fen: "rnbqk2r/ppp1ppbp/6p1/8/2BPP3/2P5/P4PPP/R1BQK1NR",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Larsen Variation",
          fen: "rnb2rk1/pppqppbp/6p1/8/2BPP3/2P5/P3NPPP/R1BQK2R",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Larsen Variation",
          fen: "rnb2rk1/p1pqppbp/1p4p1/8/2BPP3/2P5/P3NPPP/R1BQ1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Simagin's Improved Variation",
          fen: "r1bq1rk1/ppp1ppbp/2n3p1/8/2BPP3/2P5/P3NPPP/R1BQK2R",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Simagin's Lesser Variation",
          fen: "rnbq1rk1/p1p1ppbp/1p4p1/8/2BPP3/2P5/P3NPPP/R1BQK2R",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Seville Variation",
          fen: "r2q1rk1/pp2pBbp/6p1/n1p5/3PP1b1/2P1BP2/P3N1PP/R2Q1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Spassky Variation",
          fen: "rnbq1rk1/pp2ppbp/6p1/2p5/2BPP3/2P5/P3NPPP/R1BQK2R",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Spassky Variation",
          fen: "r1bq1rk1/pp2ppbp/2n3p1/8/2BPP3/4B3/P3NPPP/R2Q1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Sokolsky Variation",
          fen: "r2q1rk1/pp2ppbp/4b1p1/n2P4/4P3/3BBP2/P3N1PP/R2Q1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Exchange Variation, Spassky Variation",
          fen: "r2q1rk1/pp2ppbp/4b1p1/n7/3PP3/3BBP2/P3N1PP/R2Q1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Flohr Variation",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p4/Q1PP4/2N2N2/PP2PPPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation",
          fen: "rnbqkb1r/ppp1pp1p/5np1/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p4/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation, Petrosian System",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p2B1/2PP4/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation, Hungarian Attack",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p4/2PP1B2/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation, Hungarian Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/2PP1B2/2N1PN2/PP3PPP/R2QKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Flohr Defense",
          fen: "rn1q1rk1/pp2ppbp/2p2np1/3p1b2/2PP4/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Makogonov Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/1PPP4/2N1PN2/P4PPP/R1BQKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Opocensky Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/2PP4/2N1PN2/PP1B1PPP/R2QKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Smyslov Defense",
          fen: "rn1q1rk1/pp2ppbp/2p2np1/3p4/2PP2b1/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation, Burille Variation",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p4/2PP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation, Paris Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/2PP4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Gr\xfcnfeld Defense: Botvinnik Variation",
          fen: "rnbq1rk1/ppp2pbp/4pnp1/3p4/2PP4/1QN1PN2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Pachman Variation",
          fen: "r1bq1rk1/pppnppbp/5np1/6N1/2BP4/1QN1P3/PP3PPP/R1B1K2R",
        },
        {
          name: "Gr\xfcnfeld Defense: Three Knights Variation, Vienna Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/3p4/2PP4/1QN1PN2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p4/2PP4/1QN2N2/PP2PPPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation",
          fen: "rnbq1rk1/ppp1ppbp/5np1/8/2QPP3/2N2N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Byrne Variation",
          fen: "r1bq1rk1/ppp1ppbp/2n2np1/8/2QPP3/2N2N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Hungarian Variation",
          fen: "rnbq1rk1/1pp1ppbp/p4np1/8/2QPP3/2N2N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Levenfish Variation",
          fen: "rnbq1rk1/p1p1ppbp/1p3np1/8/2QPP3/2N2N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Prins Variation",
          fen: "r1bq1rk1/ppp1ppbp/n4np1/8/2QPP3/2N2N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Szabo Variation",
          fen: "rnbq1rk1/pp2ppbp/2p2np1/8/2QPP3/2N2N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Keres Variation",
          fen: "r2q1rk1/ppp1ppbp/1nn3p1/8/3PP1b1/2NQBN2/PP2BPPP/2KR3R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Smyslov Variation",
          fen: "rn1q1rk1/ppp1ppbp/5np1/8/2QPP1b1/2N2N2/PP3PPP/R1B1KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Smyslov Variation",
          fen: "rn1q1rk1/pppnppbp/6p1/8/3PP1b1/1QN1BN2/PP3PPP/R3KB1R",
        },
        {
          name: "Gr\xfcnfeld Defense: Russian Variation, Yugoslav Variation",
          fen: "rn1q1rk1/pp1nppbp/6p1/2p5/3PP1b1/1QN1BN2/PP3PPP/R3KB1R",
        },
        {
          name: "Catalan Opening",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/6P1/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Catalan Opening",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/6P1/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Catalan Opening: Hungarian Gambit",
          fen: "rnbqkb1r/pppp1ppp/5n2/4p3/2PP4/6P1/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Indian Defense",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/1Q6/PP2PPPP/RNB1KBNR",
        },
        {
          name: "Indian Defense: Devin Gambit",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/2PP2P1/8/PP2PP1P/RNBQKBNR",
        },
        {
          name: "Indian Defense: Seirawan Attack",
          fen: "rnbqkb1r/pppp1ppp/4pn2/6B1/2PP4/8/PP2PPPP/RN1QKBNR",
        },
        {
          name: "Catalan Opening: Closed",
          fen: "rnbqkb1r/ppp2ppp/4pn2/3p4/2PP4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Catalan Opening: Open Defense",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/2pP4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Catalan Opening: Open Defense",
          fen: "r1bqkb1r/pppn1ppp/4pn2/8/2QP4/6P1/PP2PPBP/RNB1K1NR",
        },
        {
          name: "Catalan Opening: Open Defense, Alekhine Variation",
          fen: "r1bqkb1r/1ppn1ppp/p3pn2/8/3P4/6P1/PPQ1PPBP/RNB1K1NR",
        },
        {
          name: "Catalan Opening: Open Defense",
          fen: "rnbqkb1r/ppp2ppp/4pn2/8/2pP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Catalan Opening: Open Defense, Modern Sharp Variation",
          fen: "r1bqk2r/ppp2ppp/2n1pn2/8/QbpP4/5NP1/PP2PPBP/RNB1K2R",
        },
        {
          name: "Catalan Opening: Open Defense, Classical Line",
          fen: "rnbqk2r/ppp1bppp/4pn2/8/2pP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Catalan Opening: Closed",
          fen: "rnbqk2r/ppp1bppp/4pn2/3p4/2PP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Catalan Opening: Closed",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p4/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Catalan Opening: Closed, Botvinnik Variation",
          fen: "r1bq1rk1/pp1nbppp/2p1pn2/3p4/2PP4/2NQ1NP1/PP2PPBP/R1B2RK1",
        },
        {
          name: "Catalan Opening: Closed",
          fen: "r1bq1rk1/pp1nbppp/2p1pn2/3p4/2PP4/1P3NP1/P1Q1PPBP/RNB2RK1",
        },
        {
          name: "Catalan Opening: Closed",
          fen: "r1bq1rk1/pppnbppp/4pn2/3p4/2PP4/5NP1/PPQ1PPBP/RNB2RK1",
        },
        {
          name: "Catalan Opening: Closed, Spassky Gambit",
          fen: "r2q1rk1/pb1nbppp/2p1pn2/1p1p4/2PP4/1PN2NP1/P1Q1PPBP/R1BR2K1",
        },
        {
          name: "Catalan Opening: Closed, Zagoryansky Variation",
          fen: "r1bq1rk1/p2nbppp/1pp1pn2/3p4/P1PP4/5NP1/1PQ1PPBP/RNBR2K1",
        },
        {
          name: "Catalan Opening: Closed Variation, Rabinovich Variation",
          fen: "r1bq1rk1/p2nbppp/2p1pn2/1p1p4/2PP4/5NP1/PPQNPPBP/R1B2RK1",
        },
        {
          name: "Catalan Opening: Closed Variation, Traditional Variation",
          fen: "r1bq1rk1/p2nbppp/1pp1pn2/3p4/2PP4/5NP1/PPQNPPBP/R1B2RK1",
        },
        {
          name: "Catalan Opening: Closed, Main Line",
          fen: "r1bq1rk1/pp1nbppp/2p1pn2/3p4/2PP4/5NP1/PPQNPPBP/R1B2RK1",
        },
        {
          name: "Catalan Opening: Closed, Sokolsky Variation",
          fen: "r2q1rk1/3nbppp/bpp1pn2/p2p4/2PP4/1P3NP1/PBQNPPBP/R4RK1",
        },
        {
          name: "Blumenfeld Countergambit",
          fen: "rnbqkb1r/p2p1ppp/4pn2/1ppP4/2P5/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Blumenfeld Countergambit Accepted",
          fen: "rnbqkb1r/p5pp/4pn2/1Ppp4/8/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Blumenfeld Countergambit: Dus-Khotimirsky Variation",
          fen: "rnbqkb1r/p2p1ppp/4pn2/1ppP2B1/2P5/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Blumenfeld Countergambit: Spielmann Variation",
          fen: "rnbqkb1r/p2p1pp1/5n1p/1ppP2B1/8/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Indian Defense: Anti-Nimzo-Indian",
          fen: "rnbqkb1r/pppp1ppp/4pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: Dzindzi-Indian Defense",
          fen: "rnbqkb1r/1ppp1ppp/p3pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Indian Defense: D\xf6ry Indian",
          fen: "rnbqkb1r/pppp1ppp/4p3/8/2PPn3/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Bogo-Indian Defense",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Bogo-Indian Defense: Exchange Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/2PP4/5N2/PP1bPPPP/RN1QKB1R",
        },
        {
          name: "Bogo-Indian Defense: Gr\xfcnfeld Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/5N2/PP1NPPPP/R1BQKB1R",
        },
        {
          name: "Bogo-Indian Defense: Haiti Variation",
          fen: "r1bqk2r/pppp1ppp/2n1pn2/8/1bPP4/5N2/PP1BPPPP/RN1QKB1R",
        },
        {
          name: "Bogo-Indian Defense: Monticelli Trap",
          fen: "rn1q1rk1/pbpp1ppp/1p2p3/6N1/2PP4/2n3P1/PPQ1PPBP/R3K2R",
        },
        {
          name: "Bogo-Indian Defense: New England Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/8/PP1NPPPP/RNBQKB1R",
        },
        {
          name: "Bogo-Indian Defense: Nimzowitsch Variation",
          fen: "rnb1k2r/ppppqppp/4pn2/8/1bPP4/5N2/PP1BPPPP/RN1QKB1R",
        },
        {
          name: "Bogo-Indian Defense: Retreat Variation",
          fen: "rnbqk2r/ppppbppp/4pn2/8/2PP4/5N2/PP1BPPPP/RN1QKB1R",
        },
        {
          name: "Bogo-Indian Defense: Vitolins Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/2p5/1bPP4/5N2/PP1BPPPP/RN1QKB1R",
        },
        {
          name: "Bogo-Indian Defense: Wade-Smyslov Variation",
          fen: "rnbqk2r/1ppp1ppp/4pn2/p7/1bPP4/5N2/PP1BPPPP/RN1QKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Three Knights Variation, Duchamp Variation",
          fen: "rnbqk2r/p1pp1ppp/1p2pn2/8/1bPP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Three Knights Variation, Duchamp Variation, Modern Line",
          fen: "rn1qk2r/pbpp1ppp/1p2pn2/6B1/1bPP4/2N5/PP1NPPPP/R2QKB1R",
        },
        {
          name: "Queen's Indian Defense",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov Variation",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov Variation, Botvinnik Attack",
          fen: "rn1qkb1r/pbpp1p2/1p2p2p/6pn/2PP4/2N2NB1/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation",
          fen: "rn1qkb1r/pbpp1ppp/1p2pn2/8/2PP4/P1N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Andersson Variation",
          fen: "rn1qkb1r/pbpp1ppp/1p2p3/8/2PPn3/P1N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Classical Variation",
          fen: "rn1qkb1r/pbp2ppp/1p3n2/3p4/3P4/P1N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Hedgehog Variation",
          fen: "rn1qkb1r/pbpp1p1p/1p2pnp1/8/2PP4/P1N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Kasparov Attack",
          fen: "rn1qkb1r/pbp2ppp/1p2p3/3n4/3P4/P1N2N2/1PQ1PPPP/R1B1KB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Main Line",
          fen: "rn1qkb1r/pbp2ppp/1p2pn2/3p4/2PP4/P1N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Marco Defense",
          fen: "rn1qk2r/pbppbppp/1p2pn2/8/2PP4/P1N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Modern Variation",
          fen: "rn1qkb1r/pbp2ppp/1p2p3/3n4/3P4/P1N2N2/1P2PPPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Petrosian Attack",
          fen: "rn1qkb1r/pbp2ppp/1p2p3/3n4/3P4/P1N1PN2/1P3PPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Polovodin Gambit",
          fen: "rn1qkb1r/pbp2ppp/1p2p3/3n4/3PP3/P1N2N2/1P3PPP/R1BQKB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Rashkovsky Attack",
          fen: "rn1qkb1r/pbp2ppp/1p2p3/3n4/Q2P4/P1N2N2/1P2PPPP/R1B1KB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov-Petrosian Variation, Romanishin Attack",
          fen: "rn1qkb1r/pbp2ppp/1p2p3/3n4/3P4/P1N2N2/1P1BPPPP/R2QKB1R",
        },
        {
          name: "Queen's Indian Defense: Miles Variation",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP1B2/5N2/PP2PPPP/RN1QKB1R",
        },
        {
          name: "Queen's Indian Defense: Petrosian Variation",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/P4N2/1P2PPPP/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Petrosian Variation, Farago Defense",
          fen: "rn1qkb1r/pbpp1ppp/1p2pn2/8/2PP4/P4N2/1PQ1PPPP/RNB1KB1R",
        },
        {
          name: "Queen's Indian Defense: Kasparov Variation",
          fen: "rn1qk2r/pbpp1pp1/1p2pn1p/8/1bPP3B/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "Queen's Indian Defense: Averbakh Variation",
          fen: "rn1q1rk1/pb1pbppp/1p2pn2/8/2PN4/1P1BP3/PB3PPP/RN1Q1RK1",
        },
        {
          name: "Queen's Indian Defense: Spassky System",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/4PN2/PP3PPP/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Buerger Variation",
          fen: "rn1qkb1r/pb1p1ppp/1p3n2/2pp2N1/2P5/6P1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Traditional",
          fen: "rn1qkb1r/pbpp1ppp/1p2pn2/8/2PP4/5NP1/PP2PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation",
          fen: "rnbqkb1r/p1pp1ppp/1p2pn2/8/2PP4/5NP1/PP2PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Check Variation",
          fen: "rn1qk2r/p1pp1ppp/bp2pn2/8/1bPP4/1P3NP1/P3PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Check Variation, Intermezzo Line",
          fen: "rn1qk2r/p1ppbppp/bp2pn2/8/2PP4/1P3NP1/P2BPP1P/RN1QKB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Check Variation, Modern Line",
          fen: "rn2k2r/p1ppqppp/bp2pn2/8/1bPP4/1P3NP1/P2BPP1P/RN1QKB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Nimzowitsch Variation",
          fen: "rn1qkb1r/p1pp1ppp/bp2pn2/8/2PP4/5NP1/PP2PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Nimzowitsch Variation, Nimzowitsch Attack",
          fen: "rn1qkb1r/p1pp1ppp/bp2pn2/8/Q1PP4/5NP1/PP2PP1P/RNB1KB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Nimzowitsch Variation, Quiet Line",
          fen: "rn1qkb1r/p1pp1ppp/bp2pn2/8/2PP4/1P3NP1/P3PP1P/RNBQKB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Nimzowitsch Variation, Timman's Line",
          fen: "rn1qkb1r/p1pp1ppp/bp2pn2/8/2PP4/1Q3NP1/PP2PP1P/RNB1KB1R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Rubinstein Variation",
          fen: "rn1qkb1r/pb1p1ppp/1p3n2/2pp4/2P4N/6P1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, S\xe4misch Variation",
          fen: "rn1qkb1r/pb1p1ppp/1p2pn2/2p5/2PP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Queen's Indian Defense: Capablanca Variation",
          fen: "rn1qk2r/pbpp1ppp/1p2pn2/8/1bPP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Queen's Indian Defense: Riumin Variation",
          fen: "rn1qk2r/pbppbppp/1p2pn2/8/2PP4/5NP1/PP1BPPBP/RN1QK2R",
        },
        {
          name: "Queen's Indian Defense: Yates Variation",
          fen: "rn1qk2r/1bpp1ppp/1p2pn2/p7/1bPP4/5NP1/PP1BPPBP/RN1QK2R",
        },
        {
          name: "Queen's Indian Defense: Anti-Queen's Indian System",
          fen: "rn1qk2r/pbppbppp/1p2pn2/8/2PP4/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Queen's Indian Defense: Classical Variation",
          fen: "rn1qk2r/pbppbppp/1p2pn2/8/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Queen's Indian Defense: Classical Variation, Polugaevsky Gambit",
          fen: "rn1q1rk1/pbppbppp/1p3n2/3p4/2P4N/6P1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Queen's Indian Defense: Classical Variation, Taimanov Gambit",
          fen: "rn1q1rk1/pbppbppp/1p3n2/3p4/2PN4/6P1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "Queen's Indian Defense: Euwe Variation",
          fen: "rn1q1rk1/pbppbppp/1p2pn2/8/2PP4/1P3NP1/P3PPBP/RNBQ1RK1",
        },
        {
          name: "Queen's Indian Defense: Fianchetto Variation, Kramnik Variation",
          fen: "rn1q1rk1/pbppbppp/1p2pn2/8/2PP4/5NP1/PP2PPBP/RNBQR1K1",
        },
        {
          name: "Queen's Indian Defense: Opocensky Variation",
          fen: "rn1qk2r/pbppbppp/1p2p3/8/2PPn3/2N2NP1/PP1BPPBP/R2QK2R",
        },
        {
          name: "Queen's Indian Defense: Traditional Variation",
          fen: "rn1qk2r/pbppbppp/1p2pn2/8/2PP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "Queen's Indian Defense: Classical Variation, Tiviakov Defense",
          fen: "r2q1rk1/pbppbppp/np2pn2/8/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Queen's Indian Defense: Classical Variation, Traditional Variation",
          fen: "rn1q1rk1/pbppbppp/1p2pn2/8/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Queen's Indian Defense: Classical Variation, Traditional Variation, Nimzowitsch Line",
          fen: "rn1q1rk1/pbp1bppp/1p2pn2/3p4/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "Queen's Indian Defense: Classical Variation, Traditional Variation, Main Line",
          fen: "rn1q1rk1/pbppbppp/1p2p3/8/2PP4/2Q2NP1/PP2PPBP/R1B2RK1",
        },
        {
          name: "Nimzo-Indian Defense",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Kmoch Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N2P2/PP2P1PP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Mikenas Attack",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2NQ4/PP2PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Romanishin Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N3P1/PP2PP1P/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Romanishin Variation",
          fen: "rnbq1rk1/pp1p1ppp/4pn2/2p5/1bPP4/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Nimzo-Indian Defense: Romanishin Variation, English Hybrid",
          fen: "rnbq1rk1/pp3ppp/4p3/3n4/1b1N4/2N3P1/PP2PPBP/R1BQK2R",
        },
        {
          name: "Nimzo-Indian Defense: Three Knights Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Three Knights Variation, Euwe Variation",
          fen: "rnbqk2r/pp1p1ppp/4p3/2pP4/1bP1n3/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Three Knights Variation, Korchnoi Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/2pP4/1bP5/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Three Knights Variation, Shocron Gambit",
          fen: "rnbqk2r/p2p1ppp/4pn2/1ppP4/1bP5/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Spielmann Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/1QN5/PP2PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Spielmann Variation, Karlsbad Variation",
          fen: "r1bqk2r/pp1p1ppp/2n1p3/2P5/1bP5/1QN2N2/PP1nPPPP/R3KB1R",
        },
        {
          name: "Nimzo-Indian Defense: Spielmann Variation, Romanovsky Gambit",
          fen: "r1bqk2r/pp1p1ppp/2n1pn2/2P5/1bP5/1QN5/PP2PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Spielmann Variation, Stahlberg Variation",
          fen: "r1bqk2r/pp1p1ppp/2n1p3/2n5/1bP5/1QN2N2/PP1BPPPP/R3KB1R",
        },
        {
          name: "Nimzo-Indian Defense: Spielmann Variation, Stahlberg Variation",
          fen: "r1bqk2r/pp1p2pp/2n1p3/2n2p2/1bP5/2N2NP1/PPQBPP1P/R3KB1R",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation, Accelerated",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/2PP4/P1P5/4PPPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation, Botvinnik Variation",
          fen: "rnbq1rk1/pp3ppp/4p3/2pn4/3P4/P1P1PP2/6PP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation",
          fen: "rnbqk2r/pp3ppp/4pn2/2pP4/3P4/P1P2P2/4P1PP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation, Keres Variation",
          fen: "rnbqk2r/pp3ppp/4p3/2Pn4/8/P1P2P2/4P1PP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation, Romanovsky Variation",
          fen: "rnbqk2r/pp4pp/4p3/2Pn1p2/8/P1P2P2/4P1PP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/2p5/2PP4/P1P1P3/5PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation, O'Kelly Variation",
          fen: "rnbqk2r/p2p1ppp/1p2pn2/2p5/2PP4/P1P1P3/5PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation",
          fen: "rnbq1rk1/pppp1ppp/4pn2/8/2PP4/P1P5/4PPPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation",
          fen: "rnbq1rk1/pppp1ppp/4pn2/8/2PP4/P1P1P3/5PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation",
          fen: "r1bq1rk1/pp1p1ppp/2n1pn2/2p5/2PP4/P1PBP3/5PPP/R1BQK1NR",
        },
        {
          name: "Nimzo-Indian Defense: S\xe4misch Variation, Capablanca Variation",
          fen: "r1bqnrk1/p2p1ppp/1pn1p3/2p5/2PPP3/P1PB4/4NPPP/R1BQK2R",
        },
        {
          name: "Nimzo-Indian Defense: Leningrad Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/6B1/1bPP4/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Leningrad Variation, Averbakh Gambit",
          fen: "rnbqk2r/p2p1pp1/4pn1p/1ppP4/1bP4B/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Leningrad Variation, Benoni Defense",
          fen: "rnbqk2r/pp3pp1/3ppn1p/2pP4/1bP4B/2N5/PP2PPPP/R2QKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N5/PPQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Keres Defense",
          fen: "rnbq1rk1/p1pp1ppp/1p2pn2/8/2PP4/P1Q5/1P2PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Vitolins-Adorjan Gambit",
          fen: "rnbq1rk1/p1pp1ppp/4pn2/1p6/2PP4/P1Q5/1P2PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Milner-Barry Variation",
          fen: "r1bqk2r/ppp2ppp/2nppn2/8/1bPP4/2N2N2/PPQ1PPPP/R1B1KB1R",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Zurich Variation",
          fen: "r1bqk2r/pppp1ppp/2n1pn2/8/1bPP4/2N5/PPQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Belyavsky Gambit",
          fen: "rnb1k2r/ppp2ppp/5n2/4pq2/1b1P4/2N2N2/PP2PPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Noa Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/3p4/1bPP4/2N5/PPQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Noa Variation",
          fen: "rnbqk2r/ppp2ppp/5n2/3p4/1b1P4/2N5/PPQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Noa Variation",
          fen: "rnbqk2r/ppp2ppp/4pn2/3p4/1bPP4/P1N5/1PQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Noa Variation, Botvinnik Variation",
          fen: "r1bqk2r/ppp2ppp/2n1pn2/3p4/2PP4/P1Q5/1P2PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Noa Variation, Main Line",
          fen: "rnbqk2r/ppp2ppp/4p3/3p4/2PPn3/P1Q5/1P2PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Noa Variation",
          fen: "rnbqk2r/ppp2ppp/4p3/3p4/2PPn3/P7/1PQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Noa Variation, San Remo Variation",
          fen: "r1bqk2r/ppp2ppp/2n5/3pp3/2PPn3/P3P3/1PQ2PPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Berlin Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/2p5/1bPP4/2N5/PPQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Berlin Variation, Steiner Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/2P5/2P5/2b5/PPQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Berlin Variation, Macieja System",
          fen: "rnbq1rk1/p2p1ppp/1p2pn2/2b5/2P2B2/P1N2N2/1PQ1PPPP/R3KB1R",
        },
        {
          name: "Nimzo-Indian Defense: Classical Variation, Berlin Variation, Pirc Variation",
          fen: "rnbq1rk1/pp1p1ppp/4pn2/2P5/1bP5/2N5/PPQ1PPPP/R1B1KBNR",
        },
        {
          name: "Nimzo-Indian Defense: Normal Line",
          fen: "rnbqk2r/pppp1ppp/4pn2/8/1bPP4/2N1P3/PP3PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Taimanov Variation",
          fen: "r1bqk2r/pppp1ppp/2n1pn2/8/1bPP4/2N1P3/PP3PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: H\xfcbner Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/2p5/1bPP4/2N1P3/PP3PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: H\xfcbner Variation, Main Line",
          fen: "r1bqk2r/pp3ppp/2nppn2/2p5/2PP4/2PBPN2/P4PPP/R1BQK2R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, H\xfcbner Deferred",
          fen: "rnbq1rk1/pp1p1ppp/4pn2/2p5/1bPP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: H\xfcbner Variation, Rubinstein Variation",
          fen: "rnbqk2r/pp1p1ppp/4pn2/2p5/1bPP4/2N1P3/PP2NPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: H\xfcbner Variation, Rubinstein Variation, Main Line",
          fen: "rnbq1rk1/pp1p1ppp/4pn2/8/1bPP4/P1N5/1P2NPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: H\xfcbner Variation, Rubinstein Variation, Sherbakov Attack",
          fen: "rnbq1rk1/pp1p1ppp/4pn2/2P5/1b1P4/2N5/PP2NPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: St. Petersburg Variation",
          fen: "rnbqk2r/p1pp1ppp/1p2pn2/8/1bPP4/2N1P3/PP3PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Fischer Variation",
          fen: "rnbqk2r/p1pp1ppp/1p2pn2/8/1bPP4/2N1P3/PP2NPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Bronstein (Byrne) Variation",
          fen: "rn1qk2r/p1pp1ppp/bp2pn2/8/1bPP4/2N1P3/PP2NPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation",
          fen: "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/2N1P3/PP3PPP/R1BQKBNR",
        },
        {
          name: "Nimzo-Indian Defense: Reshevsky Variation",
          fen: "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/2N1P3/PP2NPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Simagin Variation",
          fen: "rnbq1rk1/ppp2ppp/3bpn2/3p4/2PP4/P1N1P3/1P2NPPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Bishop Attack",
          fen: "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/2NBP3/PP3PPP/R1BQK1NR",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Bishop Attack, Classical Defense",
          fen: "rnbq1rk1/ppp2ppp/4pn2/3p4/1bPP4/2NBP3/PP3PPP/R1BQK1NR",
        },
        {
          name: "Nimzo-Indian Defense: Ragozin Defense",
          fen: "r1bq1rk1/ppp2ppp/2n1pn2/3p4/1bPP4/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Botvinnik System",
          fen: "rnbq1rk1/ppp2ppp/4pn2/3p4/2PP4/P1PBP3/5PPP/R1BQK1NR",
        },
        {
          name: "Nimzo-Indian Defense",
          fen: "rnbq1rk1/pppp1ppp/4pn2/8/1bPP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Ragozin Variation",
          fen: "rnbq1rk1/ppp2ppp/4pn2/3p4/1bPP4/2N1PN2/PP3PPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, S\xe4misch Deferred",
          fen: "rnbq1rk1/ppp2ppp/4pn2/3p4/1bPP4/P1N1PN2/1P3PPP/R1BQKB1R",
        },
        {
          name: "Nimzo-Indian Defense: Ragozin Variation",
          fen: "r1bq1rk1/ppp2ppp/2n1pn2/8/1bpP4/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Schlechter Defense",
          fen: "rnbq1rk1/p1p2ppp/1p2pn2/3p4/1bPP4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Gligoric System",
          fen: "rnbq1rk1/pp3ppp/4pn2/2pp4/1bPP4/2NBPN2/PP3PPP/R1BQK2R",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Gligoric System",
          fen: "r1bq1rk1/pp1n1ppp/4pn2/2pp4/1bPP4/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Gligoric System, Keres Variation",
          fen: "rnbq1rk1/p4ppp/1p2pn2/2pp4/1bPP4/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Gligoric System, Exchange Variation",
          fen: "rnbq1rk1/pp3ppp/4pn2/2p5/1bBP4/2N1PN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Gligoric System, Smyslov Variation",
          fen: "rnb2rk1/pp2qppp/4pn2/2p5/1bBP4/2N1PN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Gligoric System, Bronstein Variation",
          fen: "r1bq1rk1/pp1n1ppp/4pn2/2p5/1bBP4/2N1PN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Gligoric System, Bernstein Defense",
          fen: "r1bq1rk1/pp3ppp/2n1pn2/2pp4/1bPP4/2NBPN2/PP3PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Bernstein Defense, Exchange Line",
          fen: "r1bq1rk1/pp3ppp/2n1pn2/2pp4/2PP4/P1PBPN2/5PPP/R1BQ1RK1",
        },
        {
          name: "Nimzo-Indian Defense: Normal Variation, Bernstein Defense",
          fen: "r1bq1rk1/pp3ppp/2n1pn2/2p5/2BP4/P1P1PN2/5PPP/R1BQ1RK1",
        },
        {
          name: "Gr\xfcnfeld Defense: Counterthrust Variation",
          fen: "rnbqk2r/ppp1ppbp/5np1/3p4/2PP4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Indian Defense: Anti-Gr\xfcnfeld, Adorjan Gambit",
          fen: "rnbqkb1r/p1pppp1p/5np1/1p1P4/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Anti-Gr\xfcnfeld, Advance Variation",
          fen: "rnbqkb1r/pppppp1p/5np1/3P4/2P5/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Anti-Gr\xfcnfeld, Alekhine Variation",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2PP4/5P2/PP2P1PP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Anti-Gr\xfcnfeld, Alekhine Variation, Leko Gambit",
          fen: "rnbqkb1r/pppp1p1p/5np1/4p3/2PP4/5P2/PP2P1PP/RNBQKBNR",
        },
        {
          name: "Indian Defense: Anti-Gr\xfcnfeld, Basman-Williams Attack",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2PP3P/8/PP2PPP1/RNBQKBNR",
        },
        {
          name: "Indian Defense: King's Indian Variation, Fianchetto Variation",
          fen: "rnbqk2r/ppppppbp/5np1/8/2PP4/6P1/PP2PPBP/RNBQK1NR",
        },
        {
          name: "Indian Defense: West Indian Defense",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2PP4/8/PP2PPPP/RNBQKBNR",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Immediate Fianchetto",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2PP4/6P1/PP2PP1P/RNBQKBNR",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Pterodactyl Variation",
          fen: "rnb1k2r/pp1pppbp/5np1/q1p5/2PP4/5NP1/PP2PPBP/RNBQK2R",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Yugoslav System",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PP4/5NP1/PP2PPBP/RNBQ1RK1",
        },
        {
          name: "King's Indian Defense: Normal Variation, King's Knight Variation",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2PP4/5N2/PP2PPPP/RNBQKB1R",
        },
        {
          name: "King's Indian Defense: Santasiere Variation",
          fen: "rnbqk2r/ppppppbp/5np1/8/1PPP4/5N2/P3PPPP/RNBQKB1R",
        },
        {
          name: "King's Indian Defense: Semi-Classical Variation, Benoni Variation",
          fen: "rnbq1rk1/pp2ppbp/2pp1np1/8/2PP4/2N1PN2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Semi-Classical Variation, Hollywood Variation",
          fen: "r1bq1rk1/ppp1ppbp/2np1np1/8/2PP4/2N1PN2/PP2BPPP/R1BQK2R",
        },
        {
          name: "Queen's Pawn, Mengarini Attack",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2PP4/8/PPQ1PPPP/RNB1KBNR",
        },
        {
          name: "King's Indian Defense",
          fen: "rnbqkb1r/pppppp1p/5np1/8/2PP4/2N5/PP2PPPP/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Benjamin Defense",
          fen: "rnb2rk1/pp2ppbp/1qpp1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Semi-Classical Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/2PP4/2N1PN2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Semi-Classical Variation, Exchange Variation",
          fen: "r1bq1rk1/pppn1pbp/5np1/4p3/2P5/2N1PN2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Semi-Classical Variation, Queenside Storm Line",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/4p3/1PPP4/2N1PN2/P3BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Smyslov Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/6B1/2PP4/2N2N2/PP2PPPP/R2QKB1R",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Delayed Fianchetto",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PP4/2N2NP1/PP2PP1P/R1BQKB1R",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Karlsbad Variation",
          fen: "r1bq1rk1/ppp1ppbp/2np1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Kavalek Defense",
          fen: "rnb2rk1/pp2ppbp/2pp1np1/q7/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Larsen Defense",
          fen: "rn1q1rk1/pp2ppbp/2pp1np1/5b2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Lesser Simagin (Spassky)",
          fen: "r2q1rk1/ppp1ppbp/2np1np1/5b2/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Simagin Variation",
          fen: "r2q1rk1/ppp1ppbp/2np1np1/8/2PP2b1/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Uhlmann-Szabo System",
          fen: "r1bq1rk1/ppp2pbp/2np1np1/4p3/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Panno Variation",
          fen: "r1bq1rk1/1pp1ppbp/p1np1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Panno Variation, Blockade Line",
          fen: "r1bq1rk1/1p3pbp/p2p1np1/n1pPp3/2P5/2N3P1/PPQNPPBP/R1B2RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Panno Variation, Donner Line",
          fen: "1rbq1rk1/4pp1p/p2p1npb/n1pP4/2P5/2N3P1/PBQNPPBP/R4RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Panno Variation, Korchnoi Line",
          fen: "1rbq1rk1/2p1ppbp/p1np1np1/1p6/2PP4/2N1B1PP/PP1NPPB1/R2Q1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Yugoslav Variation, Rare Line",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PP4/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Yugoslav Variation",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Yugoslav Variation, Exchange Line",
          fen: "r1bq1rk1/pp2ppbp/2n2np1/2p5/2P5/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Yugoslav Variation, Advance Line",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/2pP4/2P5/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Classical Fianchetto",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/4p3/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Debrecen Defense",
          fen: "r1bq1rk1/pppnppbp/3p1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Double Fianchetto Attack",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/4p3/2PP4/1PN2NP1/P3PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Hungarian Variation",
          fen: "r1bq1rk1/1ppnppbp/p2p1np1/8/2PP4/2N2NP1/PP2PPBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Classical Variation",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/4p3/2PPP3/2N2NP1/PP3PBP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Long Variation",
          fen: "r1bqr1k1/1pp2pbp/3p1np1/p1n5/2PNP3/2N3PP/PP3PB1/R1BQR1K1",
        },
        {
          name: "King's Indian Defense: Fianchetto Variation, Classical Main Line",
          fen: "r1bq1rk1/pp1n1pbp/2pp1np1/4p3/2PPP3/2N2NPP/PP3PB1/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Accelerated Averbakh Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/6B1/2PPP3/2N5/PP3PPP/R2QKBNR",
        },
        {
          name: "King's Indian Defense: Kramer Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N5/PP2NPPP/R1BQKB1R",
        },
        {
          name: "King's Indian Defense: Normal Variation",
          fen: "rnbqk2r/ppppppbp/5np1/8/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Normal Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N5/PP3PPP/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Makogonov Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N4P/PP3PP1/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Normal Variation, Deferred Fianchetto",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N3P1/PP3P1P/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Pomar System",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/4p3/2PPP3/2N3P1/PP2NPBP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Averbakh Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/6B1/2PPP3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Flexible Defense",
          fen: "rnbq1rk1/ppp1ppb1/3p1npp/6B1/2PPP3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Geller Defense",
          fen: "r1bq1rk1/pppnppbp/3p1np1/6B1/2PPP3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Modern Defense",
          fen: "r1bq1rk1/ppp1ppbp/n2p1np1/6B1/2PPP3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Modern Defense, Burgess Line",
          fen: "r1bq1rk1/pp2ppbp/n1pp1np1/6B1/2PPP3/2N5/PP1QBPPP/R3K1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Nc6 Defense",
          fen: "r1bq1rk1/ppp1ppbp/2np1np1/6B1/2PPP3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Spanish Defense",
          fen: "rnbq1rk1/1pp1ppbp/p2p1np1/6B1/2PPP3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Normal Variation, Standard Development",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N5/PP2BPPP/R1BQK1NR",
        },
        {
          name: "King's Indian Defense: Semi-Averbakh System",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPP3/2N1B3/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Benoni Defense",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2p3B1/2PPP3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Benoni Defense, Advance Variation",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2pP2B1/2P1P3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Benoni Defense, Exchange Variation",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2P3B1/2P1P3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Averbakh Variation, Main Line",
          fen: "rnbq1rk1/pp3pbp/3ppnp1/2pP2B1/2P1P3/2N5/PP2BPPP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPPP2/2N5/PP4PP/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack, Dynamic Attack",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2pP4/2P1PP2/2N2N2/PP4PP/R1BQKB1R",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack, Modern Defense",
          fen: "r1bqk2r/ppp1ppbp/n2p1np1/8/2PPPP2/2N5/PP4PP/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPPP2/2N5/PP2B1PP/R1BQK1NR",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack, Florentine Gambit",
          fen: "rnbq1rk1/pp3pbp/3p1np1/2ppP3/2P2P2/2N2N2/PP2B1PP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack, Normal Attack",
          fen: "rnbq1rk1/pp3pbp/3ppnp1/2pP4/2P1PP2/2N2N2/PP2B1PP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Six Pawns Attack",
          fen: "r1bq1rk1/pp4bp/2nppnp1/2p5/2P1PPPP/2N5/PP2B3/R1BQK1NR",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack, Fluid Attack",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PPPP2/2N2N2/PP2B1PP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Four Pawns Attack, Exchange Variation",
          fen: "r1bq1rk1/pp2ppbp/2np1np1/8/2PNPP2/2N1B3/PP2B1PP/R2QK2R",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N2P2/PP4PP/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: Steiner Attack",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/6B1/2PPP3/2N2P2/PP4PP/R2QKBNR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Bobotsov-Korchnoi-Petrosian Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPP3/2N2P2/PP2N1PP/R1BQKB1R",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Byrne Defense",
          fen: "rnbq1rk1/1p2ppbp/p1pp1np1/8/2PPP3/2NBBP2/PP4PP/R2QK1NR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Normal Defense",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPP3/2N2P2/PP4PP/R1BQKBNR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, S\xe4misch Gambit",
          fen: "rnbq1rk1/pp2ppbp/3p1np1/2p5/2PPP3/2N1BP2/PP4PP/R2QKBNR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Double Fianchetto",
          fen: "rnbq1rk1/p1p1ppbp/1p1p1np1/8/2PPP3/2N1BP2/PP4PP/R2QKBNR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Panno Formation",
          fen: "r1bq1rk1/1pp1ppbp/p1np1np1/8/2PPP3/2N1BP2/PP2N1PP/R2QKB1R",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Ruban Variation",
          fen: "1rbq1rk1/ppp1ppbp/2np1np1/8/2PPP3/2N1BP2/PP2N1PP/R2QKB1R",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Yates Defense",
          fen: "r1bq1rk1/ppp1ppbp/2np1np1/8/2PPP3/2N1BP2/PP4PP/R2QKBNR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Panno Main Line",
          fen: "1rbq1rk1/1pp1ppbp/p1np1np1/8/2PPP3/2N1BP2/PP1QN1PP/R3KB1R",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Orthodox Variation",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/4p3/2PPP3/2N1BP2/PP4PP/R2QKBNR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation",
          fen: "rnbq1rk1/pp3pbp/2pp1np1/4p3/2PPP3/2N1BP2/PP2N1PP/R2QKB1R",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Bronstein Defense",
          fen: "rnb2rk1/ppp2pbp/3p2p1/3Pp3/2P1P2Q/2N1nP2/PP2K2P/R5NR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Closed Variation",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/3Pp3/2P1P3/2N1BP2/PP4PP/R2QKBNR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Orthodox Variation, Bronstein Variation",
          fen: "rnb2rk1/ppp2pbp/3p2p1/3Pp3/2n1P2Q/2N2P2/PP2K2P/R5NR",
        },
        {
          name: "King's Indian Defense: S\xe4misch Variation, Closed Variation, Main Line",
          fen: "rnbq1rk1/pp3pbp/3p1np1/3pp3/2P1P3/2N1BP2/PP2N1PP/R2QKB1R",
        },
        {
          name: "King's Indian Defense: Larsen Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPP3/2N1BN2/PP3PPP/R2QKB1R",
        },
        {
          name: "King's Indian Defense: Normal Variation, Rare Defenses",
          fen: "rnbqk2r/ppp1ppbp/3p1np1/8/2PPP3/2N2N2/PP3PPP/R1BQKB1R",
        },
        {
          name: "King's Indian Defense: Zinnowitz Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/6B1/2PPP3/2N2N2/PP3PPP/R2QKB1R",
        },
        {
          name: "King's Indian Defense: Kazakh Variation",
          fen: "r1bq1rk1/ppp1ppbp/n2p1np1/8/2PPP3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Orthodox Variation",
          fen: "rnbq1rk1/ppp1ppbp/3p1np1/8/2PPP3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Exchange Variation",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/4P3/2P1P3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Orthodox Variation",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/4p3/2PPP3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Gligoric-Taimanov System",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/4p3/2PPP3/2N1BN2/PP2BPPP/R2QK2R",
        },
        {
          name: "King's Indian Defense: Petrosian Variation",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/3Pp3/2P1P3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Petrosian Variation, Stein Defense",
          fen: "rnbq1rk1/1pp2pbp/3p1np1/p2Pp3/2P1P3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Petrosian Variation, Keres Defense",
          fen: "r1bq1rk1/pppn1pb1/3p3p/3Pp1pn/2P1P2P/2N2NB1/PP2BPP1/R2QK2R",
        },
        {
          name: "King's Indian Defense: Petrosian Variation, Normal Defense",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/3Pp3/2P1P3/2N2N2/PP2BPPP/R1BQK2R",
        },
        {
          name: "King's Indian Defense: Orthodox Variation",
          fen: "rnbq1rk1/ppp2pbp/3p1np1/4p3/2PPP3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Donner Defense",
          fen: "rnbq1rk1/pp3pbp/2pp1np1/4p3/2PPP3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Glek Defense",
          fen: "r1bq1rk1/ppp2pbp/n2p1np1/4p3/2PPP3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Positional Defense",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/4p3/2PPP3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Positional Defense, Closed Line",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/3Pp3/2P1P3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Ukrainian Defense",
          fen: "rnbq1rk1/1pp2pbp/3p1np1/p3p3/2PPP3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation",
          fen: "r1bq1rk1/pppn1pbp/3p1np1/4p3/2PPP3/2N2N2/PP2BPPP/R1BQR1K1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Positional Defense, Main Line",
          fen: "r1bq1rk1/1p1n1pbp/2pp1np1/p3p3/2PPP3/2N2N2/PP3PPP/R1BQRBK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Aronin-Taimanov Defense",
          fen: "r1bq1rk1/ppp2pbp/2np1np1/4p3/2PPP3/2N2N2/PP2BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Bayonet Attack",
          fen: "r1bq1rk1/ppp1npbp/3p1np1/3Pp3/1PP1P3/2N2N2/P3BPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Bayonet Attack, Sokolov's Line",
          fen: "r1bq1rk1/ppp1npbp/3p2p1/3Pp2n/1PP1P3/2N2N2/P3BPPP/R1BQR1K1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Bayonet Attack, Yepishin's Line",
          fen: "r1bq1rk1/ppp1npbp/3p2p1/3Pp2n/1PP1P3/2N2N2/P1Q1BPPP/R1B2RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Korchnoi Attack",
          fen: "r1bq1rk1/ppp1npbp/3p1np1/3Pp3/2P1P3/2N2N2/PP1BBPPP/R2Q1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Modern System",
          fen: "r1bq1rk1/ppp1npbp/3p1np1/3Pp3/2P1P3/2N5/PP1NBPPP/R1BQ1RK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Classical System",
          fen: "r1bq1rk1/ppp1npbp/3p1np1/3Pp3/2P1P3/2N5/PP2BPPP/R1BQNRK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Classical System, Kozul Gambit",
          fen: "r1bq1rk1/pppn2bp/3p2n1/2PPp1p1/4Pp2/2N2P2/PP2BBPP/2RQNRK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Classical System, Neo-Classical Line",
          fen: "r1bq1rk1/pppnnpbp/3p2p1/3Pp3/2P1P3/2N1B3/PP2BPPP/R2QNRK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Classical System, Benko Attack",
          fen: "r1bq1rk1/pppnn1bp/3p2p1/3Ppp2/2P1P1P1/2N2P2/PP2B2P/R1BQNRK1",
        },
        {
          name: "King's Indian Defense: Orthodox Variation, Classical System, Traditional Line",
          fen: "r1bq1rk1/pppnn1bp/3p2p1/3Ppp2/2P1P3/2N2P2/PP2B1PP/R1BQNRK1",
        },
      ];
    },
    44471: (e, n, p) => {
      "use strict";
      function r(e) {
        return (e && e.ownerDocument) || document;
      }
      p.d(n, { A: () => r });
    },
    44501: (e, n, p) => {
      "use strict";
      function r() {
        return (r = Object.assign
          ? Object.assign.bind()
          : function (e) {
              for (var n = 1; n < arguments.length; n++) {
                var p = arguments[n];
                for (var r in p)
                  ({}).hasOwnProperty.call(p, r) && (e[r] = p[r]);
              }
              return e;
            }).apply(null, arguments);
      }
      p.d(n, { A: () => r });
    },
    45284: (e, n) => {
      "use strict";
      function p(e) {
        let {
            widthInt: n,
            heightInt: p,
            blurWidth: r,
            blurHeight: a,
            blurDataURL: t,
            objectFit: P,
          } = e,
          i = r ? 40 * r : n,
          o = a ? 40 * a : p,
          s = i && o ? "viewBox='0 0 " + i + " " + o + "'" : "";
        return (
          "%3Csvg xmlns='http://www.w3.org/2000/svg' " +
          s +
          "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" +
          (s
            ? "none"
            : "contain" === P
              ? "xMidYMid"
              : "cover" === P
                ? "xMidYMid slice"
                : "none") +
          "' style='filter: url(%23b);' href='" +
          t +
          "'/%3E%3C/svg%3E"
        );
      }
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "getImageBlurSvg", {
          enumerable: !0,
          get: function () {
            return p;
          },
        });
    },
    45519: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(12535);
      let a = function (e, n) {
        return n ? (0, r.A)(e, n, { clone: !1 }) : e;
      };
    },
    45867: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(69241);
      function a(e, n) {
        if (!e) return n;
        if ("function" == typeof e || "function" == typeof n)
          return (p) => {
            let a = "function" == typeof n ? n(p) : n,
              t = "function" == typeof e ? e({ ...p, ...a }) : e,
              P = (0, r.A)(
                null == p ? void 0 : p.className,
                null == a ? void 0 : a.className,
                null == t ? void 0 : t.className
              );
            return {
              ...a,
              ...t,
              ...(!!P && { className: P }),
              ...((null == a ? void 0 : a.style) &&
                (null == t ? void 0 : t.style) && {
                  style: { ...a.style, ...t.style },
                }),
              ...((null == a ? void 0 : a.sx) &&
                (null == t ? void 0 : t.sx) && {
                  sx: [
                    ...(Array.isArray(a.sx) ? a.sx : [a.sx]),
                    ...(Array.isArray(t.sx) ? t.sx : [t.sx]),
                  ],
                }),
            };
          };
        let p = (0, r.A)(
          null == n ? void 0 : n.className,
          null == e ? void 0 : e.className
        );
        return {
          ...n,
          ...e,
          ...(!!p && { className: p }),
          ...((null == n ? void 0 : n.style) &&
            (null == e ? void 0 : e.style) && {
              style: { ...n.style, ...e.style },
            }),
          ...((null == n ? void 0 : n.sx) &&
            (null == e ? void 0 : e.sx) && {
              sx: [
                ...(Array.isArray(n.sx) ? n.sx : [n.sx]),
                ...(Array.isArray(e.sx) ? e.sx : [e.sx]),
              ],
            }),
        };
      }
    },
    45879: (e, n, p) => {
      "use strict";
      p.d(n, { Ay: () => t });
      var r = p(78217);
      let a = {
        active: "active",
        checked: "checked",
        completed: "completed",
        disabled: "disabled",
        error: "error",
        expanded: "expanded",
        focused: "focused",
        focusVisible: "focusVisible",
        open: "open",
        readOnly: "readOnly",
        required: "required",
        selected: "selected",
      };
      function t(e, n, p = "Mui") {
        let P = a[n];
        return P ? `${p}-${P}` : `${r.A.generate(e)}-${n}`;
      }
    },
    46305: (e, n, p) => {
      "use strict";
      p.d(n, { k: () => a });
      var r = p(37149),
        a = class {
          #r;
          destroy() {
            this.clearGcTimeout();
          }
          scheduleGc() {
            this.clearGcTimeout(),
              (0, r.gn)(this.gcTime) &&
                (this.#r = setTimeout(() => {
                  this.optionalRemove();
                }, this.gcTime));
          }
          updateGcTime(e) {
            this.gcTime = Math.max(this.gcTime || 0, e ?? (r.S$ ? 1 / 0 : 3e5));
          }
          clearGcTimeout() {
            this.#r && (clearTimeout(this.#r), (this.#r = void 0));
          }
        };
    },
    46871: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = function (e) {
        return "ownerState" !== e && "theme" !== e && "sx" !== e && "as" !== e;
      };
    },
    47402: (e, n, p) => {
      "use strict";
      function r(e) {
        let n;
        return (
          Math.round(
            10 * (e < 1 ? 5.11916 * e ** 2 : 4.5 * Math.log(e + 1) + 2)
          ) / 1e3
        );
      }
      p.d(n, { A: () => r });
    },
    47713: (e, n, p) => {
      "use strict";
      p.d(n, {
        N9: () => b,
        TH: () => o,
        Xb: () => c,
        eO: () => s,
        ew: () => l,
      });
      var r = p(19271),
        a = p(24026),
        t = p(14679),
        P = p(43699),
        i = p(39228);
      let o = () =>
          "object" == typeof WebAssembly &&
          WebAssembly.validate(Uint8Array.of(0, 97, 115, 109, 1, 0, 0, 0)),
        s = () => {
          try {
            return void 0 !== SharedArrayBuffer && !l();
          } catch (e) {
            return !1;
          }
        },
        l = () => /iPhone|iPad|iPod/i.test(navigator.userAgent),
        c = () => l() || /Android|Opera Mini/i.test(navigator.userAgent),
        b = (e) => {
          switch (e) {
            case r.Qz.Stockfish17:
            case r.Qz.Stockfish17Lite:
              return i.f.isSupported();
            case r.Qz.Stockfish16_1:
            case r.Qz.Stockfish16_1Lite:
              return P.m.isSupported();
            case r.Qz.Stockfish16:
            case r.Qz.Stockfish16NNUE:
              return t.K.isSupported();
            case r.Qz.Stockfish11:
              return a.T.isSupported();
          }
        };
    },
    47951: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(45879);
      function a(e, n, p = "Mui") {
        let t = {};
        return (
          n.forEach((n) => {
            t[n] = (0, r.Ay)(e, n, p);
          }),
          t
        );
      }
    },
    48149: (e, n, p) => {
      "use strict";
      p.d(n, { II: () => c, v_: () => o, wm: () => l });
      var r = p(98275),
        a = p(18070),
        t = p(81883),
        P = p(37149);
      function i(e) {
        return Math.min(1e3 * 2 ** e, 3e4);
      }
      function o(e) {
        return (e ?? "online") !== "online" || a.t.isOnline();
      }
      var s = class extends Error {
        constructor(e) {
          super("CancelledError"),
            (this.revert = e?.revert),
            (this.silent = e?.silent);
        }
      };
      function l(e) {
        return e instanceof s;
      }
      function c(e) {
        let n,
          p = !1,
          l = 0,
          c = !1,
          b = (0, t.T)(),
          f = () =>
            r.m.isFocused() &&
            ("always" === e.networkMode || a.t.isOnline()) &&
            e.canRun(),
          m = () => o(e.networkMode) && e.canRun(),
          u = (p) => {
            c || ((c = !0), e.onSuccess?.(p), n?.(), b.resolve(p));
          },
          d = (p) => {
            c || ((c = !0), e.onError?.(p), n?.(), b.reject(p));
          },
          R = () =>
            new Promise((p) => {
              (n = (e) => {
                (c || f()) && p(e);
              }),
                e.onPause?.();
            }).then(() => {
              (n = void 0), c || e.onContinue?.();
            }),
          B = () => {
            let n;
            if (c) return;
            let r = 0 === l ? e.initialPromise : void 0;
            try {
              n = r ?? e.fn();
            } catch (e) {
              n = Promise.reject(e);
            }
            Promise.resolve(n)
              .then(u)
              .catch((n) => {
                if (c) return;
                let r = e.retry ?? 3 * !P.S$,
                  a = e.retryDelay ?? i,
                  t = "function" == typeof a ? a(l, n) : a,
                  o =
                    !0 === r ||
                    ("number" == typeof r && l < r) ||
                    ("function" == typeof r && r(l, n));
                if (p || !o) {
                  d(n);
                  return;
                }
                l++,
                  e.onFail?.(l, n),
                  (0, P.yy)(t)
                    .then(() => (f() ? void 0 : R()))
                    .then(() => {
                      p ? d(n) : B();
                    });
              });
          };
        return {
          promise: b,
          cancel: (n) => {
            c || (d(new s(n)), e.abort?.());
          },
          continue: () => (n?.(), b),
          cancelRetry: () => {
            p = !0;
          },
          continueRetry: () => {
            p = !1;
          },
          canStart: m,
          start: () => (m() ? B() : R().then(B), b),
        };
      }
    },
    48230: (e, n, p) => {
      e.exports = p(81639);
    },
    48272: (e, n, p) => {
      "use strict";
      p.r(n), p.d(n, { default: () => nN });
      var r = p(37876);
      p(33052), p(9659), p(73898), p(85472);
      var a = p(9058),
        t = p(14232);
      let P = t.createContext(null);
      function i() {
        return t.useContext(P);
      }
      let o =
          "function" == typeof Symbol && Symbol.for
            ? Symbol.for("mui.nested")
            : "__THEME_NESTED__",
        s = function (e) {
          let { children: n, theme: p } = e,
            a = i(),
            s = t.useMemo(() => {
              var e, n;
              let r =
                null === a
                  ? { ...p }
                  : ((e = a),
                    "function" == typeof (n = p) ? n(e) : { ...e, ...n });
              return null != r && (r[o] = null !== a), r;
            }, [p, a]);
          return (0, r.jsx)(P.Provider, { value: s, children: n });
        };
      var l = p(21398),
        c = p(76975),
        b = p(62844),
        f = p(48877);
      let m = {};
      function u(e, n, p, r = !1) {
        return t.useMemo(() => {
          let a = (e && n[e]) || n;
          if ("function" == typeof p) {
            let t = p(a),
              P = e ? { ...n, [e]: t } : t;
            return r ? () => P : P;
          }
          return e ? { ...n, [e]: p } : { ...n, ...p };
        }, [e, n, p, r]);
      }
      let d = function (e) {
        let { children: n, theme: p, themeId: a } = e,
          t = (0, c.A)(m),
          P = i() || m,
          o = u(a, t, p),
          d = u(a, P, p, !0),
          R = "rtl" === (a ? o[a] : o).direction;
        return (0, r.jsx)(s, {
          theme: d,
          children: (0, r.jsx)(l.T.Provider, {
            value: o,
            children: (0, r.jsx)(b.A, {
              value: R,
              children: (0, r.jsx)(f.A, {
                value: a ? o[a].components : o.components,
                children: n,
              }),
            }),
          }),
        });
      };
      var R = p(3637);
      function B(e) {
        let { theme: n, ...p } = e,
          a = R.A in n ? n[R.A] : void 0;
        return (0, r.jsx)(d, {
          ...p,
          themeId: a ? R.A : void 0,
          theme: a || n,
        });
      }
      var N = p(74615),
        h = p(37094),
        k = p(99659);
      let g = "mode",
        K = "color-scheme";
      function Q() {}
      let q = ({ key: e, storageWindow: n }) => (
        n || "undefined" == typeof window || (n = window),
        {
          get(p) {
            let r;
            if ("undefined" != typeof window) {
              if (!n) return p;
              try {
                r = n.localStorage.getItem(e);
              } catch {}
              return r || p;
            }
          },
          set: (p) => {
            if (n)
              try {
                n.localStorage.setItem(e, p);
              } catch {}
          },
          subscribe: (p) => {
            if (!n) return Q;
            let r = (n) => {
              let r = n.newValue;
              n.key === e && p(r);
            };
            return (
              n.addEventListener("storage", r),
              () => {
                n.removeEventListener("storage", r);
              }
            );
          },
        }
      );
      function y() {}
      function v(e) {
        if (
          "undefined" != typeof window &&
          "function" == typeof window.matchMedia &&
          "system" === e
        )
          return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
      }
      function D(e, n) {
        return "light" === e.mode ||
          ("system" === e.mode && "light" === e.systemMode)
          ? n("light")
          : "dark" === e.mode ||
              ("system" === e.mode && "dark" === e.systemMode)
            ? n("dark")
            : void 0;
      }
      var S = p(88707);
      let A = {
          colorSchemeStorageKey: "mui-color-scheme",
          defaultLightColorScheme: "light",
          defaultDarkColorScheme: "dark",
          modeStorageKey: "mui-mode",
        },
        {
          CssVarsProvider: V,
          useColorScheme: G,
          getInitColorSchemeScript: C,
        } = (function (e) {
          let {
              themeId: n,
              theme: p = {},
              modeStorageKey: a = g,
              colorSchemeStorageKey: P = K,
              disableTransitionOnChange: o = !1,
              defaultColorScheme: s,
              resolveTheme: l,
            } = e,
            c = {
              allColorSchemes: [],
              colorScheme: void 0,
              darkColorScheme: void 0,
              lightColorScheme: void 0,
              mode: void 0,
              setColorScheme: () => {},
              setMode: () => {},
              systemMode: void 0,
            },
            b = t.createContext(void 0),
            f = {},
            m = {},
            u = "string" == typeof s ? s : s.light,
            R = "string" == typeof s ? s : s.dark;
          return {
            CssVarsProvider: function (e) {
              let {
                  children: c,
                  theme: u,
                  modeStorageKey: R = a,
                  colorSchemeStorageKey: B = P,
                  disableTransitionOnChange: N = o,
                  storageManager: Q,
                  storageWindow: S = "undefined" == typeof window
                    ? void 0
                    : window,
                  documentNode: A = "undefined" == typeof document
                    ? void 0
                    : document,
                  colorSchemeNode: V = "undefined" == typeof document
                    ? void 0
                    : document.documentElement,
                  disableNestedContext: G = !1,
                  disableStyleSheetGeneration: C = !1,
                  defaultMode: w = "system",
                  noSsr: x,
                } = e,
                M = t.useRef(!1),
                O = i(),
                E = t.useContext(b),
                I = !!E && !G,
                L = t.useMemo(
                  () => u || ("function" == typeof p ? p() : p),
                  [u]
                ),
                z = L[n],
                T = z || L,
                { colorSchemes: _ = f, components: F = m, cssVarPrefix: j } = T,
                W = Object.keys(_)
                  .filter((e) => !!_[e])
                  .join(","),
                H = t.useMemo(() => W.split(","), [W]),
                $ = "string" == typeof s ? s : s.light,
                U = "string" == typeof s ? s : s.dark,
                Z =
                  _[$] && _[U]
                    ? w
                    : _[T.defaultColorScheme]?.palette?.mode || T.palette?.mode,
                {
                  mode: Y,
                  setMode: J,
                  systemMode: X,
                  lightColorScheme: ee,
                  darkColorScheme: en,
                  colorScheme: ep,
                  setColorScheme: er,
                } = (function (e) {
                  let {
                      defaultMode: n = "light",
                      defaultLightColorScheme: p,
                      defaultDarkColorScheme: r,
                      supportedColorSchemes: a = [],
                      modeStorageKey: P = g,
                      colorSchemeStorageKey: i = K,
                      storageWindow: o = "undefined" == typeof window
                        ? void 0
                        : window,
                      storageManager: s = q,
                      noSsr: l = !1,
                    } = e,
                    c = a.join(","),
                    b = a.length > 1,
                    f = t.useMemo(
                      () => s?.({ key: P, storageWindow: o }),
                      [s, P, o]
                    ),
                    m = t.useMemo(
                      () => s?.({ key: `${i}-light`, storageWindow: o }),
                      [s, i, o]
                    ),
                    u = t.useMemo(
                      () => s?.({ key: `${i}-dark`, storageWindow: o }),
                      [s, i, o]
                    ),
                    [d, R] = t.useState(() => {
                      let e = f?.get(n) || n,
                        a = m?.get(p) || p,
                        t = u?.get(r) || r;
                      return {
                        mode: e,
                        systemMode: v(e),
                        lightColorScheme: a,
                        darkColorScheme: t,
                      };
                    }),
                    [B, N] = t.useState(l || !b);
                  t.useEffect(() => {
                    N(!0);
                  }, []);
                  let h = D(d, (e) =>
                      "light" === e
                        ? d.lightColorScheme
                        : "dark" === e
                          ? d.darkColorScheme
                          : void 0
                    ),
                    k = t.useCallback(
                      (e) => {
                        R((p) => {
                          if (e === p.mode) return p;
                          let r = e ?? n;
                          return f?.set(r), { ...p, mode: r, systemMode: v(r) };
                        });
                      },
                      [f, n]
                    ),
                    Q = t.useCallback(
                      (e) => {
                        e
                          ? "string" == typeof e
                            ? e && !c.includes(e)
                              ? console.error(
                                  `\`${e}\` does not exist in \`theme.colorSchemes\`.`
                                )
                              : R((n) => {
                                  let p = { ...n };
                                  return (
                                    D(n, (n) => {
                                      "light" === n &&
                                        (m?.set(e), (p.lightColorScheme = e)),
                                        "dark" === n &&
                                          (u?.set(e), (p.darkColorScheme = e));
                                    }),
                                    p
                                  );
                                })
                            : R((n) => {
                                let a = { ...n },
                                  t = null === e.light ? p : e.light,
                                  P = null === e.dark ? r : e.dark;
                                return (
                                  t &&
                                    (c.includes(t)
                                      ? ((a.lightColorScheme = t), m?.set(t))
                                      : console.error(
                                          `\`${t}\` does not exist in \`theme.colorSchemes\`.`
                                        )),
                                  P &&
                                    (c.includes(P)
                                      ? ((a.darkColorScheme = P), u?.set(P))
                                      : console.error(
                                          `\`${P}\` does not exist in \`theme.colorSchemes\`.`
                                        )),
                                  a
                                );
                              })
                          : R(
                              (e) => (
                                m?.set(p),
                                u?.set(r),
                                {
                                  ...e,
                                  lightColorScheme: p,
                                  darkColorScheme: r,
                                }
                              )
                            );
                      },
                      [c, m, u, p, r]
                    ),
                    S = t.useCallback(
                      (e) => {
                        "system" === d.mode &&
                          R((n) => {
                            let p = e?.matches ? "dark" : "light";
                            return n.systemMode === p
                              ? n
                              : { ...n, systemMode: p };
                          });
                      },
                      [d.mode]
                    ),
                    A = t.useRef(S);
                  return (
                    (A.current = S),
                    t.useEffect(() => {
                      if ("function" != typeof window.matchMedia || !b) return;
                      let e = (...e) => A.current(...e),
                        n = window.matchMedia("(prefers-color-scheme: dark)");
                      return (
                        n.addListener(e),
                        e(n),
                        () => {
                          n.removeListener(e);
                        }
                      );
                    }, [b]),
                    t.useEffect(() => {
                      if (b) {
                        let e =
                            f?.subscribe((e) => {
                              (!e || ["light", "dark", "system"].includes(e)) &&
                                k(e || n);
                            }) || y,
                          p =
                            m?.subscribe((e) => {
                              (!e || c.match(e)) && Q({ light: e });
                            }) || y,
                          r =
                            u?.subscribe((e) => {
                              (!e || c.match(e)) && Q({ dark: e });
                            }) || y;
                        return () => {
                          e(), p(), r();
                        };
                      }
                    }, [Q, k, c, n, o, b, f, m, u]),
                    {
                      ...d,
                      mode: B ? d.mode : void 0,
                      systemMode: B ? d.systemMode : void 0,
                      colorScheme: B ? h : void 0,
                      setMode: k,
                      setColorScheme: Q,
                    }
                  );
                })({
                  supportedColorSchemes: H,
                  defaultLightColorScheme: $,
                  defaultDarkColorScheme: U,
                  modeStorageKey: R,
                  colorSchemeStorageKey: B,
                  defaultMode: Z,
                  storageManager: Q,
                  storageWindow: S,
                  noSsr: x,
                }),
                ea = Y,
                et = ep;
              I && ((ea = E.mode), (et = E.colorScheme));
              let eP = t.useMemo(() => {
                  let e = et || T.defaultColorScheme,
                    n = T.generateThemeVars?.() || T.vars,
                    p = {
                      ...T,
                      components: F,
                      colorSchemes: _,
                      cssVarPrefix: j,
                      vars: n,
                    };
                  if (
                    ("function" == typeof p.generateSpacing &&
                      (p.spacing = p.generateSpacing()),
                    e)
                  ) {
                    let n = _[e];
                    n &&
                      "object" == typeof n &&
                      Object.keys(n).forEach((e) => {
                        n[e] && "object" == typeof n[e]
                          ? (p[e] = { ...p[e], ...n[e] })
                          : (p[e] = n[e]);
                      });
                  }
                  return l ? l(p) : p;
                }, [T, et, F, _, j]),
                ei = T.colorSchemeSelector;
              (0, k.A)(() => {
                if (et && V && ei && "media" !== ei) {
                  let e = ei;
                  if (
                    ("class" === ei && (e = ".%s"),
                    "data" === ei && (e = "[data-%s]"),
                    ei?.startsWith("data-") &&
                      !ei.includes("%s") &&
                      (e = `[${ei}="%s"]`),
                    e.startsWith("."))
                  )
                    V.classList.remove(
                      ...H.map((n) => e.substring(1).replace("%s", n))
                    ),
                      V.classList.add(e.substring(1).replace("%s", et));
                  else {
                    let n = e.replace("%s", et).match(/\[([^\]]+)\]/);
                    if (n) {
                      let [e, p] = n[1].split("=");
                      p ||
                        H.forEach((n) => {
                          V.removeAttribute(e.replace(et, n));
                        }),
                        V.setAttribute(e, p ? p.replace(/"|'/g, "") : "");
                    } else V.setAttribute(e, et);
                  }
                }
              }, [et, ei, V, H]),
                t.useEffect(() => {
                  let e;
                  if (N && M.current && A) {
                    let n = A.createElement("style");
                    n.appendChild(
                      A.createTextNode(
                        "*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}"
                      )
                    ),
                      A.head.appendChild(n),
                      window.getComputedStyle(A.body),
                      (e = setTimeout(() => {
                        A.head.removeChild(n);
                      }, 1));
                  }
                  return () => {
                    clearTimeout(e);
                  };
                }, [et, N, A]),
                t.useEffect(
                  () => (
                    (M.current = !0),
                    () => {
                      M.current = !1;
                    }
                  ),
                  []
                );
              let eo = t.useMemo(
                  () => ({
                    allColorSchemes: H,
                    colorScheme: et,
                    darkColorScheme: en,
                    lightColorScheme: ee,
                    mode: ea,
                    setColorScheme: er,
                    setMode: J,
                    systemMode: X,
                  }),
                  [H, et, en, ee, ea, er, J, X, eP.colorSchemeSelector]
                ),
                es = !0;
              (C || !1 === T.cssVariables || (I && O?.cssVarPrefix === j)) &&
                (es = !1);
              let el = (0, r.jsxs)(t.Fragment, {
                children: [
                  (0, r.jsx)(d, {
                    themeId: z ? n : void 0,
                    theme: eP,
                    children: c,
                  }),
                  es &&
                    (0, r.jsx)(h.A, {
                      styles: eP.generateStyleSheets?.() || [],
                    }),
                ],
              });
              return I
                ? el
                : (0, r.jsx)(b.Provider, { value: eo, children: el });
            },
            useColorScheme: () => t.useContext(b) || c,
            getInitColorSchemeScript: (e) =>
              (function (e) {
                let {
                    defaultMode: n = "system",
                    defaultLightColorScheme: p = "light",
                    defaultDarkColorScheme: a = "dark",
                    modeStorageKey: t = g,
                    colorSchemeStorageKey: P = K,
                    attribute: i = "data-color-scheme",
                    colorSchemeNode: o = "document.documentElement",
                    nonce: s,
                  } = e || {},
                  l = "",
                  c = i;
                if (
                  ("class" === i && (c = ".%s"),
                  "data" === i && (c = "[data-%s]"),
                  c.startsWith("."))
                ) {
                  let e = c.substring(1);
                  l += `${o}.classList.remove('${e}'.replace('%s', light), '${e}'.replace('%s', dark));
      ${o}.classList.add('${e}'.replace('%s', colorScheme));`;
                }
                let b = c.match(/\[([^\]]+)\]/);
                if (b) {
                  let [e, n] = b[1].split("=");
                  n ||
                    (l += `${o}.removeAttribute('${e}'.replace('%s', light));
      ${o}.removeAttribute('${e}'.replace('%s', dark));`),
                    (l += `
      ${o}.setAttribute('${e}'.replace('%s', colorScheme), ${n ? `${n}.replace('%s', colorScheme)` : '""'});`);
                } else l += `${o}.setAttribute('${c}', colorScheme);`;
                return (0, r.jsx)(
                  "script",
                  {
                    suppressHydrationWarning: !0,
                    nonce: "undefined" == typeof window ? s : "",
                    dangerouslySetInnerHTML: {
                      __html: `(function() {
try {
  let colorScheme = '';
  const mode = localStorage.getItem('${t}') || '${n}';
  const dark = localStorage.getItem('${P}-dark') || '${a}';
  const light = localStorage.getItem('${P}-light') || '${p}';
  if (mode === 'system') {
    // handle system mode
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    if (mql.matches) {
      colorScheme = dark
    } else {
      colorScheme = light
    }
  }
  if (mode === 'light') {
    colorScheme = light;
  }
  if (mode === 'dark') {
    colorScheme = dark;
  }
  if (colorScheme) {
    ${l}
  }
} catch(e){}})();`,
                    },
                  },
                  "mui-color-scheme-init"
                );
              })({
                colorSchemeStorageKey: P,
                defaultLightColorScheme: u,
                defaultDarkColorScheme: R,
                modeStorageKey: a,
                ...e,
              }),
          };
        })({
          themeId: R.A,
          theme: () => (0, a.A)({ cssVariables: !0 }),
          colorSchemeStorageKey: A.colorSchemeStorageKey,
          modeStorageKey: A.modeStorageKey,
          defaultColorScheme: {
            light: A.defaultLightColorScheme,
            dark: A.defaultDarkColorScheme,
          },
          resolveTheme: (e) => {
            let n = { ...e, typography: (0, S.A)(e.palette, e.typography) };
            return (
              (n.unstable_sx = function (e) {
                return (0, N.A)({ sx: e, theme: this });
              }),
              n
            );
          },
        });
      function w(e) {
        let { theme: n, ...p } = e;
        if ("function" == typeof n) return (0, r.jsx)(B, { theme: n, ...p });
        let a = R.A in n ? n[R.A] : n;
        return "colorSchemes" in a
          ? (0, r.jsx)(V, { theme: n, ...p })
          : "vars" in a
            ? (0, r.jsx)(B, { theme: n, ...p })
            : (0, r.jsx)(B, { theme: { ...n, vars: null }, ...p });
      }
      var x = p(37551),
        M = p(52196);
      let O = "function" == typeof (0, x.Dp)({}),
        E = (e, n) => ({
          WebkitFontSmoothing: "antialiased",
          MozOsxFontSmoothing: "grayscale",
          boxSizing: "border-box",
          WebkitTextSizeAdjust: "100%",
          ...(n && !e.vars && { colorScheme: e.palette.mode }),
        }),
        I = (e) => ({
          color: (e.vars || e).palette.text.primary,
          ...e.typography.body1,
          backgroundColor: (e.vars || e).palette.background.default,
          "@media print": {
            backgroundColor: (e.vars || e).palette.common.white,
          },
        }),
        L = function (e) {
          var n, p;
          let r =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
            a = {};
          r &&
            e.colorSchemes &&
            "function" == typeof e.getColorSchemeSelector &&
            Object.entries(e.colorSchemes).forEach((n) => {
              var p, r;
              let [t, P] = n,
                i = e.getColorSchemeSelector(t);
              i.startsWith("@")
                ? (a[i] = {
                    ":root": {
                      colorScheme:
                        null === (p = P.palette) || void 0 === p
                          ? void 0
                          : p.mode,
                    },
                  })
                : (a[i.replace(/\s*&/, "")] = {
                    colorScheme:
                      null === (r = P.palette) || void 0 === r
                        ? void 0
                        : r.mode,
                  });
            });
          let t = {
              html: E(e, r),
              "*, *::before, *::after": { boxSizing: "inherit" },
              "strong, b": { fontWeight: e.typography.fontWeightBold },
              body: {
                margin: 0,
                ...I(e),
                "&::backdrop": {
                  backgroundColor: (e.vars || e).palette.background.default,
                },
              },
              ...a,
            },
            P =
              null === (p = e.components) || void 0 === p
                ? void 0
                : null === (n = p.MuiCssBaseline) || void 0 === n
                  ? void 0
                  : n.styleOverrides;
          return P && (t = [t, P]), t;
        },
        z = "mui-ecs",
        T = (e) => {
          let n = L(e, !1),
            p = Array.isArray(n) ? n[0] : n;
          return (
            !e.vars &&
              p &&
              (p.html[":root:has(".concat(z, ")")] = {
                colorScheme: e.palette.mode,
              }),
            e.colorSchemes &&
              Object.entries(e.colorSchemes).forEach((n) => {
                var r, a;
                let [t, P] = n,
                  i = e.getColorSchemeSelector(t);
                i.startsWith("@")
                  ? (p[i] = {
                      [":root:not(:has(.".concat(z, "))")]: {
                        colorScheme:
                          null === (r = P.palette) || void 0 === r
                            ? void 0
                            : r.mode,
                      },
                    })
                  : (p[i.replace(/\s*&/, "")] = {
                      ["&:not(:has(.".concat(z, "))")]: {
                        colorScheme:
                          null === (a = P.palette) || void 0 === a
                            ? void 0
                            : a.mode,
                      },
                    });
              }),
            n
          );
        },
        _ = (0, x.Dp)(
          O
            ? (e) => {
                let { theme: n, enableColorScheme: p } = e;
                return L(n, p);
              }
            : (e) => {
                let { theme: n } = e;
                return T(n);
              }
        ),
        F = function (e) {
          let { children: n, enableColorScheme: p = !1 } = (0, M.b)({
            props: e,
            name: "MuiCssBaseline",
          });
          return (0, r.jsxs)(t.Fragment, {
            children: [
              O && (0, r.jsx)(_, { enableColorScheme: p }),
              !O &&
                !p &&
                (0, r.jsx)("span", {
                  className: z,
                  style: { display: "none" },
                }),
              n,
            ],
          });
        };
      var j = p(69241),
        W = p(4697),
        H = p(54773),
        $ = p(82987),
        U = p(80027),
        Z = p(78457),
        Y = p(11951),
        J = p(47951),
        X = p(45879);
      function ee(e) {
        return (0, X.Ay)("MuiAppBar", e);
      }
      (0, J.A)("MuiAppBar", [
        "root",
        "positionFixed",
        "positionAbsolute",
        "positionSticky",
        "positionStatic",
        "positionRelative",
        "colorDefault",
        "colorPrimary",
        "colorSecondary",
        "colorInherit",
        "colorTransparent",
        "colorError",
        "colorInfo",
        "colorSuccess",
        "colorWarning",
      ]);
      let en = (e) => {
          let { color: n, position: p, classes: r } = e,
            a = {
              root: [
                "root",
                "color".concat((0, U.A)(n)),
                "position".concat((0, U.A)(p)),
              ],
            };
          return (0, W.A)(a, ee, r);
        },
        ep = (e, n) =>
          e
            ? ""
                .concat(null == e ? void 0 : e.replace(")", ""), ", ")
                .concat(n, ")")
            : n,
        er = (0, H.Ay)(Y.A, {
          name: "MuiAppBar",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              n["position".concat((0, U.A)(p.position))],
              n["color".concat((0, U.A)(p.color))],
            ];
          },
        })(
          (0, $.A)((e) => {
            let { theme: n } = e;
            return {
              display: "flex",
              flexDirection: "column",
              width: "100%",
              boxSizing: "border-box",
              flexShrink: 0,
              variants: [
                {
                  props: { position: "fixed" },
                  style: {
                    position: "fixed",
                    zIndex: (n.vars || n).zIndex.appBar,
                    top: 0,
                    left: "auto",
                    right: 0,
                    "@media print": { position: "absolute" },
                  },
                },
                {
                  props: { position: "absolute" },
                  style: {
                    position: "absolute",
                    zIndex: (n.vars || n).zIndex.appBar,
                    top: 0,
                    left: "auto",
                    right: 0,
                  },
                },
                {
                  props: { position: "sticky" },
                  style: {
                    position: "sticky",
                    zIndex: (n.vars || n).zIndex.appBar,
                    top: 0,
                    left: "auto",
                    right: 0,
                  },
                },
                {
                  props: { position: "static" },
                  style: { position: "static" },
                },
                {
                  props: { position: "relative" },
                  style: { position: "relative" },
                },
                {
                  props: { color: "inherit" },
                  style: { "--AppBar-color": "inherit" },
                },
                {
                  props: { color: "default" },
                  style: {
                    "--AppBar-background": n.vars
                      ? n.vars.palette.AppBar.defaultBg
                      : n.palette.grey[100],
                    "--AppBar-color": n.vars
                      ? n.vars.palette.text.primary
                      : n.palette.getContrastText(n.palette.grey[100]),
                    ...n.applyStyles("dark", {
                      "--AppBar-background": n.vars
                        ? n.vars.palette.AppBar.defaultBg
                        : n.palette.grey[900],
                      "--AppBar-color": n.vars
                        ? n.vars.palette.text.primary
                        : n.palette.getContrastText(n.palette.grey[900]),
                    }),
                  },
                },
                ...Object.entries(n.palette)
                  .filter((0, Z.A)(["contrastText"]))
                  .map((e) => {
                    var p, r;
                    let [a] = e;
                    return {
                      props: { color: a },
                      style: {
                        "--AppBar-background": (null !== (p = n.vars) &&
                        void 0 !== p
                          ? p
                          : n
                        ).palette[a].main,
                        "--AppBar-color": (null !== (r = n.vars) && void 0 !== r
                          ? r
                          : n
                        ).palette[a].contrastText,
                      },
                    };
                  }),
                {
                  props: (e) =>
                    !0 === e.enableColorOnDark &&
                    !["inherit", "transparent"].includes(e.color),
                  style: {
                    backgroundColor: "var(--AppBar-background)",
                    color: "var(--AppBar-color)",
                  },
                },
                {
                  props: (e) =>
                    !1 === e.enableColorOnDark &&
                    !["inherit", "transparent"].includes(e.color),
                  style: {
                    backgroundColor: "var(--AppBar-background)",
                    color: "var(--AppBar-color)",
                    ...n.applyStyles("dark", {
                      backgroundColor: n.vars
                        ? ep(
                            n.vars.palette.AppBar.darkBg,
                            "var(--AppBar-background)"
                          )
                        : null,
                      color: n.vars
                        ? ep(
                            n.vars.palette.AppBar.darkColor,
                            "var(--AppBar-color)"
                          )
                        : null,
                    }),
                  },
                },
                {
                  props: { color: "transparent" },
                  style: {
                    "--AppBar-background": "transparent",
                    "--AppBar-color": "inherit",
                    backgroundColor: "var(--AppBar-background)",
                    color: "var(--AppBar-color)",
                    ...n.applyStyles("dark", { backgroundImage: "none" }),
                  },
                },
              ],
            };
          })
        ),
        ea = t.forwardRef(function (e, n) {
          let p = (0, M.b)({ props: e, name: "MuiAppBar" }),
            {
              className: a,
              color: t = "primary",
              enableColorOnDark: P = !1,
              position: i = "fixed",
              ...o
            } = p,
            s = { ...p, color: t, position: i, enableColorOnDark: P },
            l = en(s);
          return (0, r.jsx)(er, {
            square: !0,
            component: "header",
            ownerState: s,
            elevation: 4,
            className: (0, j.A)(l.root, a, "fixed" === i && "mui-fixed"),
            ref: n,
            ...o,
          });
        });
      var et = p(11494),
        eP = p(69390),
        ei = p(77018),
        eo = p(70946),
        es = p(54843),
        el = p(97369),
        ec = p(30566);
      function eb(e) {
        return (0, X.Ay)("MuiLink", e);
      }
      let ef = (0, J.A)("MuiLink", [
        "root",
        "underlineNone",
        "underlineHover",
        "underlineAlways",
        "button",
        "focusVisible",
      ]);
      var em = p(50327);
      let eu = (e) => {
          let { theme: n, ownerState: p } = e,
            r = p.color,
            a =
              (0, em.Yn)(n, "palette.".concat(r, ".main"), !1) ||
              (0, em.Yn)(n, "palette.".concat(r), !1) ||
              p.color,
            t =
              (0, em.Yn)(n, "palette.".concat(r, ".mainChannel")) ||
              (0, em.Yn)(n, "palette.".concat(r, "Channel"));
          return "vars" in n && t
            ? "rgba(".concat(t, " / 0.4)")
            : (0, es.X4)(a, 0.4);
        },
        ed = {
          primary: !0,
          secondary: !0,
          error: !0,
          info: !0,
          success: !0,
          warning: !0,
          textPrimary: !0,
          textSecondary: !0,
          textDisabled: !0,
        },
        eR = (e) => {
          let { classes: n, component: p, focusVisible: r, underline: a } = e,
            t = {
              root: [
                "root",
                "underline".concat((0, U.A)(a)),
                "button" === p && "button",
                r && "focusVisible",
              ],
            };
          return (0, W.A)(t, eb, n);
        },
        eB = (0, H.Ay)(ei.A, {
          name: "MuiLink",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              n["underline".concat((0, U.A)(p.underline))],
              "button" === p.component && n.button,
            ];
          },
        })(
          (0, $.A)((e) => {
            let { theme: n } = e;
            return {
              variants: [
                {
                  props: { underline: "none" },
                  style: { textDecoration: "none" },
                },
                {
                  props: { underline: "hover" },
                  style: {
                    textDecoration: "none",
                    "&:hover": { textDecoration: "underline" },
                  },
                },
                {
                  props: { underline: "always" },
                  style: {
                    textDecoration: "underline",
                    "&:hover": { textDecorationColor: "inherit" },
                  },
                },
                {
                  props: (e) => {
                    let { underline: n, ownerState: p } = e;
                    return "always" === n && "inherit" !== p.color;
                  },
                  style: { textDecorationColor: "var(--Link-underlineColor)" },
                },
                ...Object.entries(n.palette)
                  .filter((0, Z.A)())
                  .map((e) => {
                    let [p] = e;
                    return {
                      props: { underline: "always", color: p },
                      style: {
                        "--Link-underlineColor": n.vars
                          ? "rgba(".concat(
                              n.vars.palette[p].mainChannel,
                              " / 0.4)"
                            )
                          : (0, es.X4)(n.palette[p].main, 0.4),
                      },
                    };
                  }),
                {
                  props: { underline: "always", color: "textPrimary" },
                  style: {
                    "--Link-underlineColor": n.vars
                      ? "rgba(".concat(
                          n.vars.palette.text.primaryChannel,
                          " / 0.4)"
                        )
                      : (0, es.X4)(n.palette.text.primary, 0.4),
                  },
                },
                {
                  props: { underline: "always", color: "textSecondary" },
                  style: {
                    "--Link-underlineColor": n.vars
                      ? "rgba(".concat(
                          n.vars.palette.text.secondaryChannel,
                          " / 0.4)"
                        )
                      : (0, es.X4)(n.palette.text.secondary, 0.4),
                  },
                },
                {
                  props: { underline: "always", color: "textDisabled" },
                  style: {
                    "--Link-underlineColor": (n.vars || n).palette.text
                      .disabled,
                  },
                },
                {
                  props: { component: "button" },
                  style: {
                    position: "relative",
                    WebkitTapHighlightColor: "transparent",
                    backgroundColor: "transparent",
                    outline: 0,
                    border: 0,
                    margin: 0,
                    borderRadius: 0,
                    padding: 0,
                    cursor: "pointer",
                    userSelect: "none",
                    verticalAlign: "middle",
                    MozAppearance: "none",
                    WebkitAppearance: "none",
                    "&::-moz-focus-inner": { borderStyle: "none" },
                    ["&.".concat(ef.focusVisible)]: { outline: "auto" },
                  },
                },
              ],
            };
          })
        ),
        eN = t.forwardRef(function (e, n) {
          let p = (0, M.b)({ props: e, name: "MuiLink" }),
            a = (0, ec.A)(),
            {
              className: P,
              color: i = "primary",
              component: o = "a",
              onBlur: s,
              onFocus: l,
              TypographyClasses: c,
              underline: b = "always",
              variant: f = "inherit",
              sx: m,
              ...u
            } = p,
            [d, R] = t.useState(!1),
            B = {
              ...p,
              color: i,
              component: o,
              focusVisible: d,
              underline: b,
              variant: f,
            },
            N = eR(B);
          return (0, r.jsx)(eB, {
            color: i,
            className: (0, j.A)(N.root, P),
            classes: c,
            component: o,
            onBlur: (e) => {
              (0, el.A)(e.target) || R(!1), s && s(e);
            },
            onFocus: (e) => {
              (0, el.A)(e.target) && R(!0), l && l(e);
            },
            ref: n,
            ownerState: B,
            variant: f,
            ...u,
            sx: [
              ...(void 0 === ed[i] ? [{ color: i }] : []),
              ...(Array.isArray(m) ? m : [m]),
            ],
            style: {
              ...u.style,
              ...("always" === b &&
                "inherit" !== i &&
                !ed[i] && {
                  "--Link-underlineColor": eu({ theme: a, ownerState: B }),
                }),
            },
          });
        });
      var eh = p(48230),
        ek = p.n(eh);
      function eg(e) {
        let { href: n, children: p } = e;
        return (0, r.jsx)(eN, {
          component: ek(),
          href: n,
          underline: "none",
          color: "inherit",
          sx: { width: "100%" },
          children: p,
        });
      }
      var eK = p(98594),
        eQ = p(40053),
        eq = p(74253),
        ey = p(43165),
        ev = p(23770),
        eD = p(66313),
        eS = p(6299),
        eA = p(40436);
      function eV(e, n, p) {
        let r = (function (e, n, p) {
          let r;
          let a = n.getBoundingClientRect(),
            t = p && p.getBoundingClientRect(),
            P = (0, eA.A)(n);
          if (n.fakeTransform) r = n.fakeTransform;
          else {
            let e = P.getComputedStyle(n);
            r =
              e.getPropertyValue("-webkit-transform") ||
              e.getPropertyValue("transform");
          }
          let i = 0,
            o = 0;
          if (r && "none" !== r && "string" == typeof r) {
            let e = r.split("(")[1].split(")")[0].split(",");
            (i = parseInt(e[4], 10)), (o = parseInt(e[5], 10));
          }
          return "left" === e
            ? t
              ? "translateX(".concat(t.right + i - a.left, "px)")
              : "translateX(".concat(P.innerWidth + i - a.left, "px)")
            : "right" === e
              ? t
                ? "translateX(-".concat(a.right - t.left - i, "px)")
                : "translateX(-".concat(a.left + a.width - i, "px)")
              : "up" === e
                ? t
                  ? "translateY(".concat(t.bottom + o - a.top, "px)")
                  : "translateY(".concat(P.innerHeight + o - a.top, "px)")
                : t
                  ? "translateY(-".concat(a.top - t.top + a.height - o, "px)")
                  : "translateY(-".concat(a.top + a.height - o, "px)");
        })(e, n, "function" == typeof p ? p() : p);
        r && ((n.style.webkitTransform = r), (n.style.transform = r));
      }
      let eG = t.forwardRef(function (e, n) {
        let p = (0, ec.A)(),
          a = {
            enter: p.transitions.easing.easeOut,
            exit: p.transitions.easing.sharp,
          },
          P = {
            enter: p.transitions.duration.enteringScreen,
            exit: p.transitions.duration.leavingScreen,
          },
          {
            addEndListener: i,
            appear: o = !0,
            children: s,
            container: l,
            direction: c = "down",
            easing: b = a,
            in: f,
            onEnter: m,
            onEntered: u,
            onEntering: d,
            onExit: R,
            onExited: B,
            onExiting: N,
            style: h,
            timeout: k = P,
            TransitionComponent: g = eq.Ay,
            ...K
          } = e,
          Q = t.useRef(null),
          q = (0, eD.A)((0, ey.A)(s), Q, n),
          y = (e) => (n) => {
            e && (void 0 === n ? e(Q.current) : e(Q.current, n));
          },
          v = y((e, n) => {
            eV(c, e, l), (0, eS.q)(e), m && m(e, n);
          }),
          D = y((e, n) => {
            let r = (0, eS.c)(
              { timeout: k, style: h, easing: b },
              { mode: "enter" }
            );
            (e.style.webkitTransition = p.transitions.create(
              "-webkit-transform",
              { ...r }
            )),
              (e.style.transition = p.transitions.create("transform", {
                ...r,
              })),
              (e.style.webkitTransform = "none"),
              (e.style.transform = "none"),
              d && d(e, n);
          }),
          S = y(u),
          A = y(N),
          V = y((e) => {
            let n = (0, eS.c)(
              { timeout: k, style: h, easing: b },
              { mode: "exit" }
            );
            (e.style.webkitTransition = p.transitions.create(
              "-webkit-transform",
              n
            )),
              (e.style.transition = p.transitions.create("transform", n)),
              eV(c, e, l),
              R && R(e);
          }),
          G = y((e) => {
            (e.style.webkitTransition = ""),
              (e.style.transition = ""),
              B && B(e);
          }),
          C = t.useCallback(() => {
            Q.current && eV(c, Q.current, l);
          }, [c, l]);
        return (
          t.useEffect(() => {
            if (f || "down" === c || "right" === c) return;
            let e = (0, ev.A)(() => {
                Q.current && eV(c, Q.current, l);
              }),
              n = (0, eA.A)(Q.current);
            return (
              n.addEventListener("resize", e),
              () => {
                e.clear(), n.removeEventListener("resize", e);
              }
            );
          }, [c, f, l]),
          t.useEffect(() => {
            f || C();
          }, [f, C]),
          (0, r.jsx)(g, {
            nodeRef: Q,
            onEnter: v,
            onEntered: S,
            onEntering: D,
            onExit: V,
            onExited: G,
            onExiting: A,
            addEndListener: (e) => {
              i && i(Q.current, e);
            },
            appear: o,
            in: f,
            timeout: k,
            ...K,
            children: (e, n) => {
              let { ownerState: p, ...r } = n;
              return t.cloneElement(s, {
                ref: q,
                style: {
                  visibility: "exited" !== e || f ? void 0 : "hidden",
                  ...h,
                  ...s.props.style,
                },
                ...r,
              });
            },
          })
        );
      });
      var eC = p(68275);
      function ew(e) {
        return (0, X.Ay)("MuiDrawer", e);
      }
      (0, J.A)("MuiDrawer", [
        "root",
        "docked",
        "paper",
        "anchorLeft",
        "anchorRight",
        "anchorTop",
        "anchorBottom",
        "paperAnchorLeft",
        "paperAnchorRight",
        "paperAnchorTop",
        "paperAnchorBottom",
        "paperAnchorDockedLeft",
        "paperAnchorDockedRight",
        "paperAnchorDockedTop",
        "paperAnchorDockedBottom",
        "modal",
      ]);
      var ex = p(67360),
        eM = p(45867);
      let eO = (e, n) => {
          let { ownerState: p } = e;
          return [
            n.root,
            ("permanent" === p.variant || "persistent" === p.variant) &&
              n.docked,
            n.modal,
          ];
        },
        eE = (e) => {
          let { classes: n, anchor: p, variant: r } = e,
            a = {
              root: ["root", "anchor".concat((0, U.A)(p))],
              docked: [("permanent" === r || "persistent" === r) && "docked"],
              modal: ["modal"],
              paper: [
                "paper",
                "paperAnchor".concat((0, U.A)(p)),
                "temporary" !== r && "paperAnchorDocked".concat((0, U.A)(p)),
              ],
            };
          return (0, W.A)(a, ew, n);
        },
        eI = (0, H.Ay)(eQ.A, {
          name: "MuiDrawer",
          slot: "Root",
          overridesResolver: eO,
        })(
          (0, $.A)((e) => {
            let { theme: n } = e;
            return { zIndex: (n.vars || n).zIndex.drawer };
          })
        ),
        eL = (0, H.Ay)("div", {
          shouldForwardProp: eC.A,
          name: "MuiDrawer",
          slot: "Docked",
          skipVariantsResolver: !1,
          overridesResolver: eO,
        })({ flex: "0 0 auto" }),
        ez = (0, H.Ay)(Y.A, {
          name: "MuiDrawer",
          slot: "Paper",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.paper,
              n["paperAnchor".concat((0, U.A)(p.anchor))],
              "temporary" !== p.variant &&
                n["paperAnchorDocked".concat((0, U.A)(p.anchor))],
            ];
          },
        })(
          (0, $.A)((e) => {
            let { theme: n } = e;
            return {
              overflowY: "auto",
              display: "flex",
              flexDirection: "column",
              height: "100%",
              flex: "1 0 auto",
              zIndex: (n.vars || n).zIndex.drawer,
              WebkitOverflowScrolling: "touch",
              position: "fixed",
              top: 0,
              outline: 0,
              variants: [
                { props: { anchor: "left" }, style: { left: 0 } },
                {
                  props: { anchor: "top" },
                  style: {
                    top: 0,
                    left: 0,
                    right: 0,
                    height: "auto",
                    maxHeight: "100%",
                  },
                },
                { props: { anchor: "right" }, style: { right: 0 } },
                {
                  props: { anchor: "bottom" },
                  style: {
                    top: "auto",
                    left: 0,
                    bottom: 0,
                    right: 0,
                    height: "auto",
                    maxHeight: "100%",
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return "left" === n.anchor && "temporary" !== n.variant;
                  },
                  style: {
                    borderRight: "1px solid ".concat(
                      (n.vars || n).palette.divider
                    ),
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return "top" === n.anchor && "temporary" !== n.variant;
                  },
                  style: {
                    borderBottom: "1px solid ".concat(
                      (n.vars || n).palette.divider
                    ),
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return "right" === n.anchor && "temporary" !== n.variant;
                  },
                  style: {
                    borderLeft: "1px solid ".concat(
                      (n.vars || n).palette.divider
                    ),
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return "bottom" === n.anchor && "temporary" !== n.variant;
                  },
                  style: {
                    borderTop: "1px solid ".concat(
                      (n.vars || n).palette.divider
                    ),
                  },
                },
              ],
            };
          })
        ),
        eT = { left: "right", right: "left", top: "down", bottom: "up" },
        e_ = t.forwardRef(function (e, n) {
          let p = (0, M.b)({ props: e, name: "MuiDrawer" }),
            a = (0, ec.A)(),
            P = (0, b.I)(),
            i = {
              enter: a.transitions.duration.enteringScreen,
              exit: a.transitions.duration.leavingScreen,
            },
            {
              anchor: o = "left",
              BackdropProps: s,
              children: l,
              className: c,
              elevation: f = 16,
              hideBackdrop: m = !1,
              ModalProps: { BackdropProps: u, ...d } = {},
              onClose: R,
              open: B = !1,
              PaperProps: N = {},
              SlideProps: h,
              TransitionComponent: k,
              transitionDuration: g = i,
              variant: K = "temporary",
              slots: Q = {},
              slotProps: q = {},
              ...y
            } = p,
            v = t.useRef(!1);
          t.useEffect(() => {
            v.current = !0;
          }, []);
          let D = (function (e, n) {
              let { direction: p } = e;
              return "rtl" === p && ["left", "right"].includes(n) ? eT[n] : n;
            })({ direction: P ? "rtl" : "ltr" }, o),
            S = { ...p, anchor: o, elevation: f, open: B, variant: K, ...y },
            A = eE(S),
            V = {
              slots: { transition: k, ...Q },
              slotProps: {
                paper: N,
                transition: h,
                ...q,
                backdrop: (0, eM.A)(q.backdrop || { ...s, ...u }, {
                  transitionDuration: g,
                }),
              },
            },
            [G, C] = (0, ex.A)("root", {
              ref: n,
              elementType: eI,
              className: (0, j.A)(A.root, A.modal, c),
              shouldForwardComponentProp: !0,
              ownerState: S,
              externalForwardedProps: { ...V, ...y, ...d },
              additionalProps: {
                open: B,
                onClose: R,
                hideBackdrop: m,
                slots: { backdrop: V.slots.backdrop },
                slotProps: { backdrop: V.slotProps.backdrop },
              },
            }),
            [w, x] = (0, ex.A)("paper", {
              elementType: ez,
              shouldForwardComponentProp: !0,
              className: (0, j.A)(A.paper, N.className),
              ownerState: S,
              externalForwardedProps: V,
              additionalProps: {
                elevation: "temporary" === K ? f : 0,
                square: !0,
              },
            }),
            [O, E] = (0, ex.A)("docked", {
              elementType: eL,
              ref: n,
              className: (0, j.A)(A.root, A.docked, c),
              ownerState: S,
              externalForwardedProps: V,
              additionalProps: y,
            }),
            [I, L] = (0, ex.A)("transition", {
              elementType: eG,
              ownerState: S,
              externalForwardedProps: V,
              additionalProps: {
                in: B,
                direction: eT[D],
                timeout: g,
                appear: v.current,
              },
            }),
            z = (0, r.jsx)(w, { ...x, children: l });
          if ("permanent" === K) return (0, r.jsx)(O, { ...E, children: z });
          let T = (0, r.jsx)(I, { ...L, children: z });
          return "persistent" === K
            ? (0, r.jsx)(O, { ...E, children: T })
            : (0, r.jsx)(G, { ...C, children: T });
        });
      var eF = p(63009),
        ej = p(12572),
        eW = p(68197),
        eH = p(91411),
        e$ = p(99003),
        eU = p(98554);
      let eZ = (e) => {
          let {
              alignItems: n,
              classes: p,
              dense: r,
              disabled: a,
              disableGutters: t,
              divider: P,
              selected: i,
            } = e,
            o = (0, W.A)(
              {
                root: [
                  "root",
                  r && "dense",
                  !t && "gutters",
                  P && "divider",
                  a && "disabled",
                  "flex-start" === n && "alignItemsFlexStart",
                  i && "selected",
                ],
              },
              eU.Y,
              p
            );
          return { ...p, ...o };
        },
        eY = (0, H.Ay)(eW.A, {
          shouldForwardProp: (e) => (0, eC.A)(e) || "classes" === e,
          name: "MuiListItemButton",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              p.dense && n.dense,
              "flex-start" === p.alignItems && n.alignItemsFlexStart,
              p.divider && n.divider,
              !p.disableGutters && n.gutters,
            ];
          },
        })(
          (0, $.A)((e) => {
            let { theme: n } = e;
            return {
              display: "flex",
              flexGrow: 1,
              justifyContent: "flex-start",
              alignItems: "center",
              position: "relative",
              textDecoration: "none",
              minWidth: 0,
              boxSizing: "border-box",
              textAlign: "left",
              paddingTop: 8,
              paddingBottom: 8,
              transition: n.transitions.create("background-color", {
                duration: n.transitions.duration.shortest,
              }),
              "&:hover": {
                textDecoration: "none",
                backgroundColor: (n.vars || n).palette.action.hover,
                "@media (hover: none)": { backgroundColor: "transparent" },
              },
              ["&.".concat(eU.A.selected)]: {
                backgroundColor: n.vars
                  ? "rgba("
                      .concat(n.vars.palette.primary.mainChannel, " / ")
                      .concat(n.vars.palette.action.selectedOpacity, ")")
                  : (0, es.X4)(
                      n.palette.primary.main,
                      n.palette.action.selectedOpacity
                    ),
                ["&.".concat(eU.A.focusVisible)]: {
                  backgroundColor: n.vars
                    ? "rgba("
                        .concat(n.vars.palette.primary.mainChannel, " / calc(")
                        .concat(n.vars.palette.action.selectedOpacity, " + ")
                        .concat(n.vars.palette.action.focusOpacity, "))")
                    : (0, es.X4)(
                        n.palette.primary.main,
                        n.palette.action.selectedOpacity +
                          n.palette.action.focusOpacity
                      ),
                },
              },
              ["&.".concat(eU.A.selected, ":hover")]: {
                backgroundColor: n.vars
                  ? "rgba("
                      .concat(n.vars.palette.primary.mainChannel, " / calc(")
                      .concat(n.vars.palette.action.selectedOpacity, " + ")
                      .concat(n.vars.palette.action.hoverOpacity, "))")
                  : (0, es.X4)(
                      n.palette.primary.main,
                      n.palette.action.selectedOpacity +
                        n.palette.action.hoverOpacity
                    ),
                "@media (hover: none)": {
                  backgroundColor: n.vars
                    ? "rgba("
                        .concat(n.vars.palette.primary.mainChannel, " / ")
                        .concat(n.vars.palette.action.selectedOpacity, ")")
                    : (0, es.X4)(
                        n.palette.primary.main,
                        n.palette.action.selectedOpacity
                      ),
                },
              },
              ["&.".concat(eU.A.focusVisible)]: {
                backgroundColor: (n.vars || n).palette.action.focus,
              },
              ["&.".concat(eU.A.disabled)]: {
                opacity: (n.vars || n).palette.action.disabledOpacity,
              },
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.divider;
                  },
                  style: {
                    borderBottom: "1px solid ".concat(
                      (n.vars || n).palette.divider
                    ),
                    backgroundClip: "padding-box",
                  },
                },
                {
                  props: { alignItems: "flex-start" },
                  style: { alignItems: "flex-start" },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disableGutters;
                  },
                  style: { paddingLeft: 16, paddingRight: 16 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.dense;
                  },
                  style: { paddingTop: 4, paddingBottom: 4 },
                },
              ],
            };
          })
        ),
        eJ = t.forwardRef(function (e, n) {
          let p = (0, M.b)({ props: e, name: "MuiListItemButton" }),
            {
              alignItems: a = "center",
              autoFocus: P = !1,
              component: i = "div",
              children: o,
              dense: s = !1,
              disableGutters: l = !1,
              divider: c = !1,
              focusVisibleClassName: b,
              selected: f = !1,
              className: m,
              ...u
            } = p,
            d = t.useContext(e$.A),
            R = t.useMemo(
              () => ({
                dense: s || d.dense || !1,
                alignItems: a,
                disableGutters: l,
              }),
              [a, d.dense, s, l]
            ),
            B = t.useRef(null);
          (0, eH.A)(() => {
            P && B.current && B.current.focus();
          }, [P]);
          let N = {
              ...p,
              alignItems: a,
              dense: R.dense,
              disableGutters: l,
              divider: c,
              selected: f,
            },
            h = eZ(N),
            k = (0, eD.A)(B, n);
          return (0, r.jsx)(e$.A.Provider, {
            value: R,
            children: (0, r.jsx)(eY, {
              ref: k,
              href: u.href || u.to,
              component: (u.href || u.to) && "div" === i ? "button" : i,
              focusVisibleClassName: (0, j.A)(h.focusVisible, b),
              ownerState: N,
              className: (0, j.A)(h.root, m),
              ...u,
              classes: h,
              children: o,
            }),
          });
        });
      var eX = p(61240),
        e1 = p(93256);
      let e2 = [
        { text: "Play", icon: "streamline:chess-pawn", href: "/play" },
        {
          text: "Analysis",
          icon: "streamline:magnifying-glass-solid",
          href: "/",
        },
        { text: "Database", icon: "streamline:database", href: "/database" },
      ];
      function e3(e) {
        let { open: n, onClose: p } = e;
        return (0, r.jsxs)(e_, {
          anchor: "left",
          open: n,
          onClose: p,
          children: [
            (0, r.jsx)(eP.A, {}),
            (0, r.jsx)(et.A, {
              sx: { width: 250, overflow: "hidden" },
              children: (0, r.jsx)(eF.A, {
                children: e2.map((e) => {
                  let { text: n, icon: a, href: t } = e;
                  return (0, r.jsx)(
                    ej.Ay,
                    {
                      disablePadding: !0,
                      sx: { margin: 0.7 },
                      children: (0, r.jsx)(eg, {
                        href: t,
                        children: (0, r.jsxs)(eJ, {
                          onClick: p,
                          children: [
                            (0, r.jsx)(eX.A, {
                              style: { paddingLeft: "0.5em" },
                              children: (0, r.jsx)(eK.In, {
                                icon: a,
                                height: "1.5em",
                              }),
                            }),
                            (0, r.jsx)(e1.A, { primary: n }),
                          ],
                        }),
                      }),
                    },
                    n
                  );
                }),
              }),
            }),
          ],
        });
      }
      var e4 = p(89099),
        e0 = p(54587),
        e5 = p.n(e0),
        e8 = p(55663);
      function e6(e) {
        let { darkMode: n, switchDarkMode: p } = e,
          [a, P] = (0, t.useState)(!1),
          i = (0, e4.useRouter)();
        return (
          (0, t.useEffect)(() => {
            P(!1);
          }, [i.pathname]),
          (0, r.jsxs)(et.A, {
            sx: { flexGrow: 1, display: "flex" },
            children: [
              (0, r.jsx)(ea, {
                position: "static",
                sx: {
                  zIndex: (e) => e.zIndex.drawer + 1,
                  backgroundColor: n ? "#19191c" : "white",
                  color: n ? "white" : "black",
                },
                enableColorOnDark: !0,
                children: (0, r.jsxs)(eP.A, {
                  variant: "dense",
                  children: [
                    (0, r.jsx)(eo.A, {
                      size: "large",
                      edge: "start",
                      color: "inherit",
                      "aria-label": "menu",
                      sx: { mr: "min(0.5vw, 0.6rem)", padding: 1, my: 1 },
                      onClick: () => P((e) => !e),
                      children: (0, r.jsx)(eK.In, { icon: "mdi:menu" }),
                    }),
                    (0, r.jsx)(e5(), {
                      src: "/favicon-32x32.png",
                      alt: "MrAnalyse logo",
                      width: 32,
                      height: 32,
                    }),
                    (0, r.jsx)(eg, {
                      href: "/",
                      children: (0, r.jsx)(ei.A, {
                        variant: "h6",
                        component: "div",
                        sx: {
                          flexGrow: 1,
                          ml: 1,
                          fontSize: { xs: "1rem", sm: "1.25rem" },
                        },
                        children: "MrAnalyse",
                      }),
                    }),
                    (0, r.jsx)(et.A, { sx: { flexGrow: 1 } }),
                    (0, r.jsx)(e8.A, {}),
                    (0, r.jsx)(eo.A, {
                      sx: { ml: "min(0.6rem, 0.8vw)" },
                      onClick: p,
                      color: "inherit",
                      edge: "end",
                      children: n
                        ? (0, r.jsx)(eK.In, { icon: "mdi:brightness-7" })
                        : (0, r.jsx)(eK.In, { icon: "mdi:brightness-4" }),
                    }),
                  ],
                }),
              }),
              (0, r.jsx)(e3, { open: a, onClose: () => P(!1) }),
            ],
          })
        );
      }
      var e7 = p(98291),
        e9 = p(82851),
        ne = p(92094);
      function nn(e) {
        let { children: n } = e,
          [p, P] = (0, e9.M)("useDarkMode", !0),
          i = (0, t.useMemo)(
            () =>
              (0, a.A)({
                palette: {
                  mode: p ? "dark" : "light",
                  error: { main: e7.A[400] },
                  primary: { main: ne.eL },
                  secondary: { main: p ? "#424242" : "#ffffff" },
                },
              }),
            [p]
          );
        return null === p
          ? null
          : (0, r.jsxs)(w, {
              theme: i,
              children: [
                (0, r.jsx)(F, {}),
                (0, r.jsx)(e6, {
                  darkMode: p,
                  switchDarkMode: () => P((e) => !e),
                }),
                (0, r.jsx)("main", {
                  style: { margin: "2vh 1vw" },
                  children: n,
                }),
              ],
            });
      }
      var np = p(37149),
        nr = p(58444),
        na = p(60388),
        nt = p(90089),
        nP = class extends nt.Q {
          constructor(e = {}) {
            super(), (this.config = e), (this.#a = new Map());
          }
          #a;
          build(e, n, p) {
            let r = n.queryKey,
              a = n.queryHash ?? (0, np.F$)(r, n),
              t = this.get(a);
            return (
              t ||
                ((t = new nr.X({
                  client: e,
                  queryKey: r,
                  queryHash: a,
                  options: e.defaultQueryOptions(n),
                  state: p,
                  defaultOptions: e.getQueryDefaults(r),
                })),
                this.add(t)),
              t
            );
          }
          add(e) {
            this.#a.has(e.queryHash) ||
              (this.#a.set(e.queryHash, e),
              this.notify({ type: "added", query: e }));
          }
          remove(e) {
            let n = this.#a.get(e.queryHash);
            n &&
              (e.destroy(),
              n === e && this.#a.delete(e.queryHash),
              this.notify({ type: "removed", query: e }));
          }
          clear() {
            na.jG.batch(() => {
              this.getAll().forEach((e) => {
                this.remove(e);
              });
            });
          }
          get(e) {
            return this.#a.get(e);
          }
          getAll() {
            return [...this.#a.values()];
          }
          find(e) {
            let n = { exact: !0, ...e };
            return this.getAll().find((e) => (0, np.MK)(n, e));
          }
          findAll(e = {}) {
            let n = this.getAll();
            return Object.keys(e).length > 0
              ? n.filter((n) => (0, np.MK)(e, n))
              : n;
          }
          notify(e) {
            na.jG.batch(() => {
              this.listeners.forEach((n) => {
                n(e);
              });
            });
          }
          onFocus() {
            na.jG.batch(() => {
              this.getAll().forEach((e) => {
                e.onFocus();
              });
            });
          }
          onOnline() {
            na.jG.batch(() => {
              this.getAll().forEach((e) => {
                e.onOnline();
              });
            });
          }
        },
        ni = p(46305),
        no = p(48149),
        ns = class extends ni.k {
          #t;
          #P;
          #i;
          constructor(e) {
            super(),
              (this.mutationId = e.mutationId),
              (this.#P = e.mutationCache),
              (this.#t = []),
              (this.state = e.state || {
                context: void 0,
                data: void 0,
                error: null,
                failureCount: 0,
                failureReason: null,
                isPaused: !1,
                status: "idle",
                variables: void 0,
                submittedAt: 0,
              }),
              this.setOptions(e.options),
              this.scheduleGc();
          }
          setOptions(e) {
            (this.options = e), this.updateGcTime(this.options.gcTime);
          }
          get meta() {
            return this.options.meta;
          }
          addObserver(e) {
            this.#t.includes(e) ||
              (this.#t.push(e),
              this.clearGcTimeout(),
              this.#P.notify({
                type: "observerAdded",
                mutation: this,
                observer: e,
              }));
          }
          removeObserver(e) {
            (this.#t = this.#t.filter((n) => n !== e)),
              this.scheduleGc(),
              this.#P.notify({
                type: "observerRemoved",
                mutation: this,
                observer: e,
              });
          }
          optionalRemove() {
            this.#t.length ||
              ("pending" === this.state.status
                ? this.scheduleGc()
                : this.#P.remove(this));
          }
          continue() {
            return this.#i?.continue() ?? this.execute(this.state.variables);
          }
          async execute(e) {
            let n = () => {
              this.#o({ type: "continue" });
            };
            this.#i = (0, no.II)({
              fn: () =>
                this.options.mutationFn
                  ? this.options.mutationFn(e)
                  : Promise.reject(Error("No mutationFn found")),
              onFail: (e, n) => {
                this.#o({ type: "failed", failureCount: e, error: n });
              },
              onPause: () => {
                this.#o({ type: "pause" });
              },
              onContinue: n,
              retry: this.options.retry ?? 0,
              retryDelay: this.options.retryDelay,
              networkMode: this.options.networkMode,
              canRun: () => this.#P.canRun(this),
            });
            let p = "pending" === this.state.status,
              r = !this.#i.canStart();
            try {
              if (p) n();
              else {
                this.#o({ type: "pending", variables: e, isPaused: r }),
                  await this.#P.config.onMutate?.(e, this);
                let n = await this.options.onMutate?.(e);
                n !== this.state.context &&
                  this.#o({
                    type: "pending",
                    context: n,
                    variables: e,
                    isPaused: r,
                  });
              }
              let a = await this.#i.start();
              return (
                await this.#P.config.onSuccess?.(
                  a,
                  e,
                  this.state.context,
                  this
                ),
                await this.options.onSuccess?.(a, e, this.state.context),
                await this.#P.config.onSettled?.(
                  a,
                  null,
                  this.state.variables,
                  this.state.context,
                  this
                ),
                await this.options.onSettled?.(a, null, e, this.state.context),
                this.#o({ type: "success", data: a }),
                a
              );
            } catch (n) {
              try {
                throw (
                  (await this.#P.config.onError?.(
                    n,
                    e,
                    this.state.context,
                    this
                  ),
                  await this.options.onError?.(n, e, this.state.context),
                  await this.#P.config.onSettled?.(
                    void 0,
                    n,
                    this.state.variables,
                    this.state.context,
                    this
                  ),
                  await this.options.onSettled?.(
                    void 0,
                    n,
                    e,
                    this.state.context
                  ),
                  n)
                );
              } finally {
                this.#o({ type: "error", error: n });
              }
            } finally {
              this.#P.runNext(this);
            }
          }
          #o(e) {
            (this.state = ((n) => {
              switch (e.type) {
                case "failed":
                  return {
                    ...n,
                    failureCount: e.failureCount,
                    failureReason: e.error,
                  };
                case "pause":
                  return { ...n, isPaused: !0 };
                case "continue":
                  return { ...n, isPaused: !1 };
                case "pending":
                  return {
                    ...n,
                    context: e.context,
                    data: void 0,
                    failureCount: 0,
                    failureReason: null,
                    error: null,
                    isPaused: e.isPaused,
                    status: "pending",
                    variables: e.variables,
                    submittedAt: Date.now(),
                  };
                case "success":
                  return {
                    ...n,
                    data: e.data,
                    failureCount: 0,
                    failureReason: null,
                    error: null,
                    status: "success",
                    isPaused: !1,
                  };
                case "error":
                  return {
                    ...n,
                    data: void 0,
                    error: e.error,
                    failureCount: n.failureCount + 1,
                    failureReason: e.error,
                    isPaused: !1,
                    status: "error",
                  };
              }
            })(this.state)),
              na.jG.batch(() => {
                this.#t.forEach((n) => {
                  n.onMutationUpdate(e);
                }),
                  this.#P.notify({
                    mutation: this,
                    type: "updated",
                    action: e,
                  });
              });
          }
        },
        nl = class extends nt.Q {
          constructor(e = {}) {
            super(),
              (this.config = e),
              (this.#s = new Set()),
              (this.#l = new Map()),
              (this.#c = 0);
          }
          #s;
          #l;
          #c;
          build(e, n, p) {
            let r = new ns({
              mutationCache: this,
              mutationId: ++this.#c,
              options: e.defaultMutationOptions(n),
              state: p,
            });
            return this.add(r), r;
          }
          add(e) {
            this.#s.add(e);
            let n = nc(e);
            if ("string" == typeof n) {
              let p = this.#l.get(n);
              p ? p.push(e) : this.#l.set(n, [e]);
            }
            this.notify({ type: "added", mutation: e });
          }
          remove(e) {
            if (this.#s.delete(e)) {
              let n = nc(e);
              if ("string" == typeof n) {
                let p = this.#l.get(n);
                if (p) {
                  if (p.length > 1) {
                    let n = p.indexOf(e);
                    -1 !== n && p.splice(n, 1);
                  } else p[0] === e && this.#l.delete(n);
                }
              }
            }
            this.notify({ type: "removed", mutation: e });
          }
          canRun(e) {
            let n = nc(e);
            if ("string" != typeof n) return !0;
            {
              let p = this.#l.get(n),
                r = p?.find((e) => "pending" === e.state.status);
              return !r || r === e;
            }
          }
          runNext(e) {
            let n = nc(e);
            if ("string" != typeof n) return Promise.resolve();
            {
              let p = this.#l.get(n)?.find((n) => n !== e && n.state.isPaused);
              return p?.continue() ?? Promise.resolve();
            }
          }
          clear() {
            na.jG.batch(() => {
              this.#s.forEach((e) => {
                this.notify({ type: "removed", mutation: e });
              }),
                this.#s.clear(),
                this.#l.clear();
            });
          }
          getAll() {
            return Array.from(this.#s);
          }
          find(e) {
            let n = { exact: !0, ...e };
            return this.getAll().find((e) => (0, np.nJ)(n, e));
          }
          findAll(e = {}) {
            return this.getAll().filter((n) => (0, np.nJ)(e, n));
          }
          notify(e) {
            na.jG.batch(() => {
              this.listeners.forEach((n) => {
                n(e);
              });
            });
          }
          resumePausedMutations() {
            let e = this.getAll().filter((e) => e.state.isPaused);
            return na.jG.batch(() =>
              Promise.all(e.map((e) => e.continue().catch(np.lQ)))
            );
          }
        };
      function nc(e) {
        return e.options.scope?.id;
      }
      var nb = p(98275),
        nf = p(18070);
      function nm(e) {
        return {
          onFetch: (n, p) => {
            let r = n.options,
              a = n.fetchOptions?.meta?.fetchMore?.direction,
              t = n.state.data?.pages || [],
              P = n.state.data?.pageParams || [],
              i = { pages: [], pageParams: [] },
              o = 0,
              s = async () => {
                let p = !1,
                  s = (e) => {
                    Object.defineProperty(e, "signal", {
                      enumerable: !0,
                      get: () => (
                        n.signal.aborted
                          ? (p = !0)
                          : n.signal.addEventListener("abort", () => {
                              p = !0;
                            }),
                        n.signal
                      ),
                    });
                  },
                  l = (0, np.ZM)(n.options, n.fetchOptions),
                  c = async (e, r, a) => {
                    if (p) return Promise.reject();
                    if (null == r && e.pages.length) return Promise.resolve(e);
                    let t = {
                      client: n.client,
                      queryKey: n.queryKey,
                      pageParam: r,
                      direction: a ? "backward" : "forward",
                      meta: n.options.meta,
                    };
                    s(t);
                    let P = await l(t),
                      { maxPages: i } = n.options,
                      o = a ? np.ZZ : np.y9;
                    return {
                      pages: o(e.pages, P, i),
                      pageParams: o(e.pageParams, r, i),
                    };
                  };
                if (a && t.length) {
                  let e = "backward" === a,
                    n = { pages: t, pageParams: P },
                    p = (
                      e
                        ? function (e, { pages: n, pageParams: p }) {
                            return n.length > 0
                              ? e.getPreviousPageParam?.(n[0], n, p[0], p)
                              : void 0;
                          }
                        : nu
                    )(r, n);
                  i = await c(n, p, e);
                } else {
                  let n = e ?? t.length;
                  do {
                    let e = 0 === o ? (P[0] ?? r.initialPageParam) : nu(r, i);
                    if (o > 0 && null == e) break;
                    (i = await c(i, e)), o++;
                  } while (o < n);
                }
                return i;
              };
            n.options.persister
              ? (n.fetchFn = () =>
                  n.options.persister?.(
                    s,
                    {
                      client: n.client,
                      queryKey: n.queryKey,
                      meta: n.options.meta,
                      signal: n.signal,
                    },
                    p
                  ))
              : (n.fetchFn = s);
          },
        };
      }
      function nu(e, { pages: n, pageParams: p }) {
        let r = n.length - 1;
        return n.length > 0 ? e.getNextPageParam(n[r], n, p[r], p) : void 0;
      }
      var nd = class {
          #b;
          #P;
          #f;
          #m;
          #u;
          #d;
          #R;
          #B;
          constructor(e = {}) {
            (this.#b = e.queryCache || new nP()),
              (this.#P = e.mutationCache || new nl()),
              (this.#f = e.defaultOptions || {}),
              (this.#m = new Map()),
              (this.#u = new Map()),
              (this.#d = 0);
          }
          mount() {
            this.#d++,
              1 === this.#d &&
                ((this.#R = nb.m.subscribe(async (e) => {
                  e && (await this.resumePausedMutations(), this.#b.onFocus());
                })),
                (this.#B = nf.t.subscribe(async (e) => {
                  e && (await this.resumePausedMutations(), this.#b.onOnline());
                })));
          }
          unmount() {
            this.#d--,
              0 === this.#d &&
                (this.#R?.(),
                (this.#R = void 0),
                this.#B?.(),
                (this.#B = void 0));
          }
          isFetching(e) {
            return this.#b.findAll({ ...e, fetchStatus: "fetching" }).length;
          }
          isMutating(e) {
            return this.#P.findAll({ ...e, status: "pending" }).length;
          }
          getQueryData(e) {
            let n = this.defaultQueryOptions({ queryKey: e });
            return this.#b.get(n.queryHash)?.state.data;
          }
          ensureQueryData(e) {
            let n = this.defaultQueryOptions(e),
              p = this.#b.build(this, n),
              r = p.state.data;
            return void 0 === r
              ? this.fetchQuery(e)
              : (e.revalidateIfStale &&
                  p.isStaleByTime((0, np.d2)(n.staleTime, p)) &&
                  this.prefetchQuery(n),
                Promise.resolve(r));
          }
          getQueriesData(e) {
            return this.#b
              .findAll(e)
              .map(({ queryKey: e, state: n }) => [e, n.data]);
          }
          setQueryData(e, n, p) {
            let r = this.defaultQueryOptions({ queryKey: e }),
              a = this.#b.get(r.queryHash),
              t = a?.state.data,
              P = (0, np.Zw)(n, t);
            if (void 0 !== P)
              return this.#b.build(this, r).setData(P, { ...p, manual: !0 });
          }
          setQueriesData(e, n, p) {
            return na.jG.batch(() =>
              this.#b
                .findAll(e)
                .map(({ queryKey: e }) => [e, this.setQueryData(e, n, p)])
            );
          }
          getQueryState(e) {
            let n = this.defaultQueryOptions({ queryKey: e });
            return this.#b.get(n.queryHash)?.state;
          }
          removeQueries(e) {
            let n = this.#b;
            na.jG.batch(() => {
              n.findAll(e).forEach((e) => {
                n.remove(e);
              });
            });
          }
          resetQueries(e, n) {
            let p = this.#b;
            return na.jG.batch(
              () => (
                p.findAll(e).forEach((e) => {
                  e.reset();
                }),
                this.refetchQueries({ type: "active", ...e }, n)
              )
            );
          }
          cancelQueries(e, n = {}) {
            let p = { revert: !0, ...n };
            return Promise.all(
              na.jG.batch(() => this.#b.findAll(e).map((e) => e.cancel(p)))
            )
              .then(np.lQ)
              .catch(np.lQ);
          }
          invalidateQueries(e, n = {}) {
            return na.jG.batch(() =>
              (this.#b.findAll(e).forEach((e) => {
                e.invalidate();
              }),
              e?.refetchType === "none")
                ? Promise.resolve()
                : this.refetchQueries(
                    { ...e, type: e?.refetchType ?? e?.type ?? "active" },
                    n
                  )
            );
          }
          refetchQueries(e, n = {}) {
            let p = { ...n, cancelRefetch: n.cancelRefetch ?? !0 };
            return Promise.all(
              na.jG.batch(() =>
                this.#b
                  .findAll(e)
                  .filter((e) => !e.isDisabled())
                  .map((e) => {
                    let n = e.fetch(void 0, p);
                    return (
                      p.throwOnError || (n = n.catch(np.lQ)),
                      "paused" === e.state.fetchStatus ? Promise.resolve() : n
                    );
                  })
              )
            ).then(np.lQ);
          }
          fetchQuery(e) {
            let n = this.defaultQueryOptions(e);
            void 0 === n.retry && (n.retry = !1);
            let p = this.#b.build(this, n);
            return p.isStaleByTime((0, np.d2)(n.staleTime, p))
              ? p.fetch(n)
              : Promise.resolve(p.state.data);
          }
          prefetchQuery(e) {
            return this.fetchQuery(e).then(np.lQ).catch(np.lQ);
          }
          fetchInfiniteQuery(e) {
            return (e.behavior = nm(e.pages)), this.fetchQuery(e);
          }
          prefetchInfiniteQuery(e) {
            return this.fetchInfiniteQuery(e).then(np.lQ).catch(np.lQ);
          }
          ensureInfiniteQueryData(e) {
            return (e.behavior = nm(e.pages)), this.ensureQueryData(e);
          }
          resumePausedMutations() {
            return nf.t.isOnline()
              ? this.#P.resumePausedMutations()
              : Promise.resolve();
          }
          getQueryCache() {
            return this.#b;
          }
          getMutationCache() {
            return this.#P;
          }
          getDefaultOptions() {
            return this.#f;
          }
          setDefaultOptions(e) {
            this.#f = e;
          }
          setQueryDefaults(e, n) {
            this.#m.set((0, np.EN)(e), { queryKey: e, defaultOptions: n });
          }
          getQueryDefaults(e) {
            let n = [...this.#m.values()],
              p = {};
            return (
              n.forEach((n) => {
                (0, np.Cp)(e, n.queryKey) && Object.assign(p, n.defaultOptions);
              }),
              p
            );
          }
          setMutationDefaults(e, n) {
            this.#u.set((0, np.EN)(e), { mutationKey: e, defaultOptions: n });
          }
          getMutationDefaults(e) {
            let n = [...this.#u.values()],
              p = {};
            return (
              n.forEach((n) => {
                (0, np.Cp)(e, n.mutationKey) &&
                  Object.assign(p, n.defaultOptions);
              }),
              p
            );
          }
          defaultQueryOptions(e) {
            if (e._defaulted) return e;
            let n = {
              ...this.#f.queries,
              ...this.getQueryDefaults(e.queryKey),
              ...e,
              _defaulted: !0,
            };
            return (
              n.queryHash || (n.queryHash = (0, np.F$)(n.queryKey, n)),
              void 0 === n.refetchOnReconnect &&
                (n.refetchOnReconnect = "always" !== n.networkMode),
              void 0 === n.throwOnError && (n.throwOnError = !!n.suspense),
              !n.networkMode && n.persister && (n.networkMode = "offlineFirst"),
              n.queryFn === np.hT && (n.enabled = !1),
              n
            );
          }
          defaultMutationOptions(e) {
            return e?._defaulted
              ? e
              : {
                  ...this.#f.mutations,
                  ...(e?.mutationKey &&
                    this.getMutationDefaults(e.mutationKey)),
                  ...e,
                  _defaulted: !0,
                };
          }
          clear() {
            this.#b.clear(), this.#P.clear();
          }
        },
        nR = p(67768);
      let nB = new nd();
      function nN(e) {
        let { Component: n, pageProps: p } = e;
        return (
          (0, t.useEffect)(() => {
            "serviceWorker" in navigator &&
              window.addEventListener("load", function () {
                navigator.serviceWorker.register("/sw.js").then(
                  function (e) {
                    console.log(
                      "Service Worker registration successful with scope: ",
                      e.scope
                    );
                  },
                  function (e) {
                    console.log("Service Worker registration failed: ", e);
                  }
                );
              });
          }, []),
          (0, r.jsx)(nR.Ht, {
            client: nB,
            children: (0, r.jsx)(nn, { children: (0, r.jsx)(n, { ...p }) }),
          })
        );
      }
    },
    48877: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => o, b: () => i });
      var r = p(14232),
        a = p(581),
        t = p(37876);
      let P = r.createContext(void 0);
      function i({ props: e, name: n }) {
        return (function (e) {
          let { theme: n, name: p, props: r } = e;
          if (!n || !n.components || !n.components[p]) return r;
          let t = n.components[p];
          return t.defaultProps
            ? (0, a.A)(t.defaultProps, r)
            : t.styleOverrides || t.variants
              ? r
              : (0, a.A)(t, r);
        })({ props: e, name: n, theme: { components: r.useContext(P) } });
      }
      let o = function ({ value: e, children: n }) {
        return (0, t.jsx)(P.Provider, { value: e, children: n });
      };
    },
    49790: (e, n, p) => {
      "use strict";
      function r(e) {
        return null != e && !(Array.isArray(e) && 0 === e.length);
      }
      function a(e) {
        let n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        return (
          e &&
          ((r(e.value) && "" !== e.value) ||
            (n && r(e.defaultValue) && "" !== e.defaultValue))
        );
      }
      function t(e) {
        return e.startAdornment;
      }
      p.d(n, { gr: () => t, lq: () => a });
    },
    50327: (e, n, p) => {
      "use strict";
      p.d(n, { Ay: () => i, BO: () => P, Yn: () => t });
      var r = p(93725),
        a = p(72487);
      function t(e, n, p = !0) {
        if (!n || "string" != typeof n) return null;
        if (e && e.vars && p) {
          let p = `vars.${n}`
            .split(".")
            .reduce((e, n) => (e && e[n] ? e[n] : null), e);
          if (null != p) return p;
        }
        return n
          .split(".")
          .reduce((e, n) => (e && null != e[n] ? e[n] : null), e);
      }
      function P(e, n, p, r = p) {
        let a;
        return (
          (a =
            "function" == typeof e
              ? e(p)
              : Array.isArray(e)
                ? e[p] || r
                : t(e, p) || r),
          n && (a = n(a, r, e)),
          a
        );
      }
      let i = function (e) {
        let { prop: n, cssProperty: p = e.prop, themeKey: i, transform: o } = e,
          s = (e) => {
            if (null == e[n]) return null;
            let s = e[n],
              l = t(e.theme, i) || {};
            return (0, a.NI)(e, s, (e) => {
              let a = P(l, o, e);
              return (e === a &&
                "string" == typeof e &&
                (a = P(l, o, `${n}${"default" === e ? "" : (0, r.A)(e)}`, e)),
              !1 === p)
                ? a
                : { [p]: a };
            });
          };
        return (s.propTypes = {}), (s.filterProps = [n]), s;
      };
    },
    51529: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => l });
      var r = p(14232),
        a = p(61637),
        t = p(43165),
        P = p(44471),
        i = p(37876);
      function o(e) {
        let n = [],
          p = [];
        return (
          Array.from(
            e.querySelectorAll(
              'input,select,textarea,a[href],button,[tabindex],audio[controls],video[controls],[contenteditable]:not([contenteditable="false"])'
            )
          ).forEach((e, r) => {
            let a = (function (e) {
              let n = parseInt(e.getAttribute("tabindex") || "", 10);
              return Number.isNaN(n)
                ? "true" === e.contentEditable ||
                  (("AUDIO" === e.nodeName ||
                    "VIDEO" === e.nodeName ||
                    "DETAILS" === e.nodeName) &&
                    null === e.getAttribute("tabindex"))
                  ? 0
                  : e.tabIndex
                : n;
            })(e);
            !(
              -1 === a ||
              e.disabled ||
              ("INPUT" === e.tagName && "hidden" === e.type) ||
              (function (e) {
                if ("INPUT" !== e.tagName || "radio" !== e.type || !e.name)
                  return !1;
                let n = (n) =>
                    e.ownerDocument.querySelector(
                      'input[type="radio"]'.concat(n)
                    ),
                  p = n('[name="'.concat(e.name, '"]:checked'));
                return p || (p = n('[name="'.concat(e.name, '"]'))), p !== e;
              })(e)
            ) &&
              (0 === a
                ? n.push(e)
                : p.push({ documentOrder: r, tabIndex: a, node: e }));
          }),
          p
            .sort((e, n) =>
              e.tabIndex === n.tabIndex
                ? e.documentOrder - n.documentOrder
                : e.tabIndex - n.tabIndex
            )
            .map((e) => e.node)
            .concat(n)
        );
      }
      function s() {
        return !0;
      }
      let l = function (e) {
        let {
            children: n,
            disableAutoFocus: p = !1,
            disableEnforceFocus: l = !1,
            disableRestoreFocus: c = !1,
            getTabbable: b = o,
            isEnabled: f = s,
            open: m,
          } = e,
          u = r.useRef(!1),
          d = r.useRef(null),
          R = r.useRef(null),
          B = r.useRef(null),
          N = r.useRef(null),
          h = r.useRef(!1),
          k = r.useRef(null),
          g = (0, a.A)((0, t.A)(n), k),
          K = r.useRef(null);
        r.useEffect(() => {
          m && k.current && (h.current = !p);
        }, [p, m]),
          r.useEffect(() => {
            if (!m || !k.current) return;
            let e = (0, P.A)(k.current);
            return (
              !k.current.contains(e.activeElement) &&
                (k.current.hasAttribute("tabIndex") ||
                  k.current.setAttribute("tabIndex", "-1"),
                h.current && k.current.focus()),
              () => {
                c ||
                  (B.current &&
                    B.current.focus &&
                    ((u.current = !0), B.current.focus()),
                  (B.current = null));
              }
            );
          }, [m]),
          r.useEffect(() => {
            if (!m || !k.current) return;
            let e = (0, P.A)(k.current),
              n = (n) => {
                (K.current = n),
                  !l &&
                    f() &&
                    "Tab" === n.key &&
                    e.activeElement === k.current &&
                    n.shiftKey &&
                    ((u.current = !0), R.current && R.current.focus());
              },
              p = () => {
                let n = k.current;
                if (null === n) return;
                if (!e.hasFocus() || !f() || u.current) {
                  u.current = !1;
                  return;
                }
                if (
                  n.contains(e.activeElement) ||
                  (l &&
                    e.activeElement !== d.current &&
                    e.activeElement !== R.current)
                )
                  return;
                if (e.activeElement !== N.current) N.current = null;
                else if (null !== N.current) return;
                if (!h.current) return;
                let p = [];
                if (
                  ((e.activeElement === d.current ||
                    e.activeElement === R.current) &&
                    (p = b(k.current)),
                  p.length > 0)
                ) {
                  var r, a;
                  let e = !!(
                      (null === (r = K.current) || void 0 === r
                        ? void 0
                        : r.shiftKey) &&
                      (null === (a = K.current) || void 0 === a
                        ? void 0
                        : a.key) === "Tab"
                    ),
                    n = p[0],
                    t = p[p.length - 1];
                  "string" != typeof n &&
                    "string" != typeof t &&
                    (e ? t.focus() : n.focus());
                } else n.focus();
              };
            e.addEventListener("focusin", p),
              e.addEventListener("keydown", n, !0);
            let r = setInterval(() => {
              e.activeElement && "BODY" === e.activeElement.tagName && p();
            }, 50);
            return () => {
              clearInterval(r),
                e.removeEventListener("focusin", p),
                e.removeEventListener("keydown", n, !0);
            };
          }, [p, l, c, f, m, b]);
        let Q = (e) => {
          null === B.current && (B.current = e.relatedTarget), (h.current = !0);
        };
        return (0, i.jsxs)(r.Fragment, {
          children: [
            (0, i.jsx)("div", {
              tabIndex: m ? 0 : -1,
              onFocus: Q,
              ref: d,
              "data-testid": "sentinelStart",
            }),
            r.cloneElement(n, {
              ref: g,
              onFocus: (e) => {
                null === B.current && (B.current = e.relatedTarget),
                  (h.current = !0),
                  (N.current = e.target);
                let p = n.props.onFocus;
                p && p(e);
              },
            }),
            (0, i.jsx)("div", {
              tabIndex: m ? 0 : -1,
              onFocus: Q,
              ref: R,
              "data-testid": "sentinelEnd",
            }),
          ],
        });
      };
    },
    52196: (e, n, p) => {
      "use strict";
      p.d(n, { b: () => a }), p(14232);
      var r = p(48877);
      function a(e) {
        return (0, r.b)(e);
      }
      p(37876);
    },
    52547: (e, n, p) => {
      "use strict";
      p.d(n, {
        B2: () => R,
        FR: () => B,
        Ju: () => d,
        MA: () => f,
        Mx: () => o,
        Sd: () => l,
        Sp: () => k,
        XL: () => m,
        XZ: () => b,
        _X: () => s,
        a2: () => u,
        eU: () => c,
        pN: () => N,
        xg: () => h,
      });
      var r = p(92094),
        a = p(92634),
        t = p(22277),
        P = p(99542),
        i = p(42200);
      let o = (0, P.eU)(void 0),
        s = (0, P.eU)(new t.d$()),
        l = (0, P.eU)(new t.d$()),
        c = (0, P.eU)({}),
        b = (0, i.tG)("chessComUsernameSearch", ""),
        f = (0, P.eU)(!0),
        m = (0, P.eU)(!0),
        u = (0, P.eU)(!0),
        d = (0, P.eU)(r.T3),
        R = (0, P.eU)(14),
        B = (0, P.eU)(3),
        N = (0, i.tG)("engineWorkersNb", (0, a.PN)()),
        h = (0, P.eU)(0),
        k = (0, P.eU)({});
    },
    53111: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(12961);
      function a(e = 8, n = (0, r.LX)({ spacing: e })) {
        if (e.mui) return e;
        let p = (...e) =>
          (0 === e.length ? [1] : e)
            .map((e) => {
              let p = n(e);
              return "number" == typeof p ? `${p}px` : p;
            })
            .join(" ");
        return (p.mui = !0), p;
      }
    },
    53657: (e, n, p) => {
      "use strict";
      Object.defineProperty(n, "__esModule", { value: !0 }),
        !(function (e, n) {
          for (var p in n)
            Object.defineProperty(e, p, { enumerable: !0, get: n[p] });
        })(n, {
          default: function () {
            return o;
          },
          getImageProps: function () {
            return i;
          },
        });
      let r = p(64252),
        a = p(84915),
        t = p(32439),
        P = r._(p(83829));
      function i(e) {
        let { props: n } = (0, a.getImgProps)(e, {
          defaultLoader: P.default,
          imgConf: {
            deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
            imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
            path: "/_next/image",
            loader: "default",
            dangerouslyAllowSVG: !1,
            unoptimized: !0,
          },
        });
        for (let [e, p] of Object.entries(n)) void 0 === p && delete n[e];
        return { props: n };
      }
      let o = t.Image;
    },
    53855: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => i });
      var r,
        a = p(14232);
      let t = 0,
        P = { ...(r || (r = p.t(a, 2))) }.useId;
      function i(e) {
        if (void 0 !== P) {
          let n = P();
          return e ?? n;
        }
        return (function (e) {
          let [n, p] = a.useState(e),
            r = e || n;
          return (
            a.useEffect(() => {
              null == n && ((t += 1), p(`mui-${t}`));
            }, [n]),
            r
          );
        })(e);
      }
    },
    54587: (e, n, p) => {
      e.exports = p(53657);
    },
    54638: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, y: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiTypography", e);
      }
      let P = (0, r.A)("MuiTypography", [
        "root",
        "h1",
        "h2",
        "h3",
        "h4",
        "h5",
        "h6",
        "subtitle1",
        "subtitle2",
        "body1",
        "body2",
        "inherit",
        "button",
        "caption",
        "overline",
        "alignLeft",
        "alignRight",
        "alignCenter",
        "alignJustify",
        "noWrap",
        "gutterBottom",
        "paragraph",
      ]);
    },
    54773: (e, n, p) => {
      "use strict";
      p.d(n, { Ay: () => i });
      var r = p(16291),
        a = p(56892),
        t = p(3637),
        P = p(68275);
      let i = (0, r.Ay)({
        themeId: t.A,
        defaultTheme: a.A,
        rootShouldForwardProp: P.A,
      });
    },
    54843: (e, n, p) => {
      "use strict";
      p.d(n, {
        Cg: () => m,
        Me: () => o,
        Nd: () => d,
        X0: () => s,
        X4: () => f,
        Y9: () => h,
        YL: () => l,
        a: () => R,
        e$: () => u,
        eM: () => b,
        j4: () => B,
        rP: () => P,
        tL: () => N,
      });
      var r = p(69135),
        a = p(23015);
      function t(e, n = 0, p = 1) {
        return (0, a.A)(e, n, p);
      }
      function P(e) {
        let n;
        if (e.type) return e;
        if ("#" === e.charAt(0))
          return P(
            (function (e) {
              e = e.slice(1);
              let n = RegExp(`.{1,${e.length >= 6 ? 2 : 1}}`, "g"),
                p = e.match(n);
              return (
                p && 1 === p[0].length && (p = p.map((e) => e + e)),
                p
                  ? `rgb${4 === p.length ? "a" : ""}(${p.map((e, n) => (n < 3 ? parseInt(e, 16) : Math.round((parseInt(e, 16) / 255) * 1e3) / 1e3)).join(", ")})`
                  : ""
              );
            })(e)
          );
        let p = e.indexOf("("),
          a = e.substring(0, p);
        if (!["rgb", "rgba", "hsl", "hsla", "color"].includes(a))
          throw Error((0, r.A)(9, e));
        let t = e.substring(p + 1, e.length - 1);
        if ("color" === a) {
          if (
            ((n = (t = t.split(" ")).shift()),
            4 === t.length && "/" === t[3].charAt(0) && (t[3] = t[3].slice(1)),
            ![
              "srgb",
              "display-p3",
              "a98-rgb",
              "prophoto-rgb",
              "rec-2020",
            ].includes(n))
          )
            throw Error((0, r.A)(10, n));
        } else t = t.split(",");
        return {
          type: a,
          values: (t = t.map((e) => parseFloat(e))),
          colorSpace: n,
        };
      }
      let i = (e) => {
          let n = P(e);
          return n.values
            .slice(0, 3)
            .map((e, p) => (n.type.includes("hsl") && 0 !== p ? `${e}%` : e))
            .join(" ");
        },
        o = (e, n) => {
          try {
            return i(e);
          } catch (n) {
            return e;
          }
        };
      function s(e) {
        let { type: n, colorSpace: p } = e,
          { values: r } = e;
        return (
          n.includes("rgb")
            ? (r = r.map((e, n) => (n < 3 ? parseInt(e, 10) : e)))
            : n.includes("hsl") && ((r[1] = `${r[1]}%`), (r[2] = `${r[2]}%`)),
          (r = n.includes("color") ? `${p} ${r.join(" ")}` : `${r.join(", ")}`),
          `${n}(${r})`
        );
      }
      function l(e) {
        let { values: n } = (e = P(e)),
          p = n[0],
          r = n[1] / 100,
          a = n[2] / 100,
          t = r * Math.min(a, 1 - a),
          i = (e, n = (e + p / 30) % 12) =>
            a - t * Math.max(Math.min(n - 3, 9 - n, 1), -1),
          o = "rgb",
          l = [
            Math.round(255 * i(0)),
            Math.round(255 * i(8)),
            Math.round(255 * i(4)),
          ];
        return (
          "hsla" === e.type && ((o += "a"), l.push(n[3])),
          s({ type: o, values: l })
        );
      }
      function c(e) {
        let n =
          "hsl" === (e = P(e)).type || "hsla" === e.type
            ? P(l(e)).values
            : e.values;
        return Number(
          (
            0.2126 *
              (n = n.map(
                (n) => (
                  "color" !== e.type && (n /= 255),
                  n <= 0.03928 ? n / 12.92 : ((n + 0.055) / 1.055) ** 2.4
                )
              ))[0] +
            0.7152 * n[1] +
            0.0722 * n[2]
          ).toFixed(3)
        );
      }
      function b(e, n) {
        let p = c(e),
          r = c(n);
        return (Math.max(p, r) + 0.05) / (Math.min(p, r) + 0.05);
      }
      function f(e, n) {
        return (
          (e = P(e)),
          (n = t(n)),
          ("rgb" === e.type || "hsl" === e.type) && (e.type += "a"),
          "color" === e.type ? (e.values[3] = `/${n}`) : (e.values[3] = n),
          s(e)
        );
      }
      function m(e, n, p) {
        try {
          return f(e, n);
        } catch (n) {
          return e;
        }
      }
      function u(e, n) {
        if (((e = P(e)), (n = t(n)), e.type.includes("hsl")))
          e.values[2] *= 1 - n;
        else if (e.type.includes("rgb") || e.type.includes("color"))
          for (let p = 0; p < 3; p += 1) e.values[p] *= 1 - n;
        return s(e);
      }
      function d(e, n, p) {
        try {
          return u(e, n);
        } catch (n) {
          return e;
        }
      }
      function R(e, n) {
        if (((e = P(e)), (n = t(n)), e.type.includes("hsl")))
          e.values[2] += (100 - e.values[2]) * n;
        else if (e.type.includes("rgb"))
          for (let p = 0; p < 3; p += 1) e.values[p] += (255 - e.values[p]) * n;
        else if (e.type.includes("color"))
          for (let p = 0; p < 3; p += 1) e.values[p] += (1 - e.values[p]) * n;
        return s(e);
      }
      function B(e, n, p) {
        try {
          return R(e, n);
        } catch (n) {
          return e;
        }
      }
      function N(e, n = 0.15) {
        return c(e) > 0.5 ? u(e, n) : R(e, n);
      }
      function h(e, n, p) {
        try {
          return N(e, n);
        } catch (n) {
          return e;
        }
      }
    },
    55509: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(14232).createContext(void 0);
    },
    55663: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => l });
      var r = p(37876),
        a = p(14232),
        t = p(11494),
        P = p(24705),
        i = p(77935),
        o = p(85278),
        s = p(52547);
      function l() {
        let [e, n] = (0, a.useState)(""),
          [p, l] = (0, o.fp)(s.XZ);
        return (0, r.jsx)(t.A, {
          sx: { display: "flex", alignItems: "center" },
          children: p
            ? (0, r.jsxs)(P.A, {
                variant: "contained",
                onClick: () => {
                  l("");
                },
                sx: { height: "35px" },
                children: ["Watching ", p],
              })
            : (0, r.jsxs)(r.Fragment, {
                children: [
                  (0, r.jsx)(i.A, {
                    label: "Chess.com Username",
                    variant: "outlined",
                    size: "small",
                    value: e,
                    onChange: (e) => n(e.target.value),
                    sx: { mr: 1, ".MuiInputBase-root": { height: "35px" } },
                  }),
                  (0, r.jsx)(P.A, {
                    variant: "contained",
                    onClick: () => {
                      e.trim() && l(e.trim());
                    },
                    sx: { height: "35px" },
                    children: "Watch",
                  }),
                ],
              }),
        });
      }
    },
    56892: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = (0, p(9058).A)();
    },
    58444: (e, n, p) => {
      "use strict";
      p.d(n, { X: () => i, k: () => o });
      var r = p(37149),
        a = p(60388),
        t = p(48149),
        P = p(46305),
        i = class extends P.k {
          #N;
          #h;
          #k;
          #g;
          #i;
          #f;
          #K;
          constructor(e) {
            super(),
              (this.#K = !1),
              (this.#f = e.defaultOptions),
              this.setOptions(e.options),
              (this.observers = []),
              (this.#g = e.client),
              (this.#k = this.#g.getQueryCache()),
              (this.queryKey = e.queryKey),
              (this.queryHash = e.queryHash),
              (this.#N = (function (e) {
                let n =
                    "function" == typeof e.initialData
                      ? e.initialData()
                      : e.initialData,
                  p = void 0 !== n,
                  r = p
                    ? "function" == typeof e.initialDataUpdatedAt
                      ? e.initialDataUpdatedAt()
                      : e.initialDataUpdatedAt
                    : 0;
                return {
                  data: n,
                  dataUpdateCount: 0,
                  dataUpdatedAt: p ? (r ?? Date.now()) : 0,
                  error: null,
                  errorUpdateCount: 0,
                  errorUpdatedAt: 0,
                  fetchFailureCount: 0,
                  fetchFailureReason: null,
                  fetchMeta: null,
                  isInvalidated: !1,
                  status: p ? "success" : "pending",
                  fetchStatus: "idle",
                };
              })(this.options)),
              (this.state = e.state ?? this.#N),
              this.scheduleGc();
          }
          get meta() {
            return this.options.meta;
          }
          get promise() {
            return this.#i?.promise;
          }
          setOptions(e) {
            (this.options = { ...this.#f, ...e }),
              this.updateGcTime(this.options.gcTime);
          }
          optionalRemove() {
            this.observers.length ||
              "idle" !== this.state.fetchStatus ||
              this.#k.remove(this);
          }
          setData(e, n) {
            let p = (0, r.pl)(this.state.data, e, this.options);
            return (
              this.#o({
                data: p,
                type: "success",
                dataUpdatedAt: n?.updatedAt,
                manual: n?.manual,
              }),
              p
            );
          }
          setState(e, n) {
            this.#o({ type: "setState", state: e, setStateOptions: n });
          }
          cancel(e) {
            let n = this.#i?.promise;
            return (
              this.#i?.cancel(e),
              n ? n.then(r.lQ).catch(r.lQ) : Promise.resolve()
            );
          }
          destroy() {
            super.destroy(), this.cancel({ silent: !0 });
          }
          reset() {
            this.destroy(), this.setState(this.#N);
          }
          isActive() {
            return this.observers.some(
              (e) => !1 !== (0, r.Eh)(e.options.enabled, this)
            );
          }
          isDisabled() {
            return this.getObserversCount() > 0
              ? !this.isActive()
              : this.options.queryFn === r.hT ||
                  this.state.dataUpdateCount + this.state.errorUpdateCount ===
                    0;
          }
          isStale() {
            return (
              !!this.state.isInvalidated ||
              (this.getObserversCount() > 0
                ? this.observers.some((e) => e.getCurrentResult().isStale)
                : void 0 === this.state.data)
            );
          }
          isStaleByTime(e = 0) {
            return (
              this.state.isInvalidated ||
              void 0 === this.state.data ||
              !(0, r.j3)(this.state.dataUpdatedAt, e)
            );
          }
          onFocus() {
            let e = this.observers.find((e) => e.shouldFetchOnWindowFocus());
            e?.refetch({ cancelRefetch: !1 }), this.#i?.continue();
          }
          onOnline() {
            let e = this.observers.find((e) => e.shouldFetchOnReconnect());
            e?.refetch({ cancelRefetch: !1 }), this.#i?.continue();
          }
          addObserver(e) {
            this.observers.includes(e) ||
              (this.observers.push(e),
              this.clearGcTimeout(),
              this.#k.notify({
                type: "observerAdded",
                query: this,
                observer: e,
              }));
          }
          removeObserver(e) {
            this.observers.includes(e) &&
              ((this.observers = this.observers.filter((n) => n !== e)),
              this.observers.length ||
                (this.#i &&
                  (this.#K
                    ? this.#i.cancel({ revert: !0 })
                    : this.#i.cancelRetry()),
                this.scheduleGc()),
              this.#k.notify({
                type: "observerRemoved",
                query: this,
                observer: e,
              }));
          }
          getObserversCount() {
            return this.observers.length;
          }
          invalidate() {
            this.state.isInvalidated || this.#o({ type: "invalidate" });
          }
          fetch(e, n) {
            if ("idle" !== this.state.fetchStatus) {
              if (void 0 !== this.state.data && n?.cancelRefetch)
                this.cancel({ silent: !0 });
              else if (this.#i) return this.#i.continueRetry(), this.#i.promise;
            }
            if ((e && this.setOptions(e), !this.options.queryFn)) {
              let e = this.observers.find((e) => e.options.queryFn);
              e && this.setOptions(e.options);
            }
            let p = new AbortController(),
              a = (e) => {
                Object.defineProperty(e, "signal", {
                  enumerable: !0,
                  get: () => ((this.#K = !0), p.signal),
                });
              },
              P = {
                fetchOptions: n,
                options: this.options,
                queryKey: this.queryKey,
                client: this.#g,
                state: this.state,
                fetchFn: () => {
                  let e = (0, r.ZM)(this.options, n),
                    p = {
                      client: this.#g,
                      queryKey: this.queryKey,
                      meta: this.meta,
                    };
                  return (a(p), (this.#K = !1), this.options.persister)
                    ? this.options.persister(e, p, this)
                    : e(p);
                },
              };
            a(P),
              this.options.behavior?.onFetch(P, this),
              (this.#h = this.state),
              ("idle" === this.state.fetchStatus ||
                this.state.fetchMeta !== P.fetchOptions?.meta) &&
                this.#o({ type: "fetch", meta: P.fetchOptions?.meta });
            let i = (e) => {
              ((0, t.wm)(e) && e.silent) ||
                this.#o({ type: "error", error: e }),
                (0, t.wm)(e) ||
                  (this.#k.config.onError?.(e, this),
                  this.#k.config.onSettled?.(this.state.data, e, this)),
                this.scheduleGc();
            };
            return (
              (this.#i = (0, t.II)({
                initialPromise: n?.initialPromise,
                fn: P.fetchFn,
                abort: p.abort.bind(p),
                onSuccess: (e) => {
                  if (void 0 === e) {
                    i(Error(`${this.queryHash} data is undefined`));
                    return;
                  }
                  try {
                    this.setData(e);
                  } catch (e) {
                    i(e);
                    return;
                  }
                  this.#k.config.onSuccess?.(e, this),
                    this.#k.config.onSettled?.(e, this.state.error, this),
                    this.scheduleGc();
                },
                onError: i,
                onFail: (e, n) => {
                  this.#o({ type: "failed", failureCount: e, error: n });
                },
                onPause: () => {
                  this.#o({ type: "pause" });
                },
                onContinue: () => {
                  this.#o({ type: "continue" });
                },
                retry: P.options.retry,
                retryDelay: P.options.retryDelay,
                networkMode: P.options.networkMode,
                canRun: () => !0,
              })),
              this.#i.start()
            );
          }
          #o(e) {
            (this.state = ((n) => {
              switch (e.type) {
                case "failed":
                  return {
                    ...n,
                    fetchFailureCount: e.failureCount,
                    fetchFailureReason: e.error,
                  };
                case "pause":
                  return { ...n, fetchStatus: "paused" };
                case "continue":
                  return { ...n, fetchStatus: "fetching" };
                case "fetch":
                  return {
                    ...n,
                    ...o(n.data, this.options),
                    fetchMeta: e.meta ?? null,
                  };
                case "success":
                  return {
                    ...n,
                    data: e.data,
                    dataUpdateCount: n.dataUpdateCount + 1,
                    dataUpdatedAt: e.dataUpdatedAt ?? Date.now(),
                    error: null,
                    isInvalidated: !1,
                    status: "success",
                    ...(!e.manual && {
                      fetchStatus: "idle",
                      fetchFailureCount: 0,
                      fetchFailureReason: null,
                    }),
                  };
                case "error":
                  let p = e.error;
                  if ((0, t.wm)(p) && p.revert && this.#h)
                    return { ...this.#h, fetchStatus: "idle" };
                  return {
                    ...n,
                    error: p,
                    errorUpdateCount: n.errorUpdateCount + 1,
                    errorUpdatedAt: Date.now(),
                    fetchFailureCount: n.fetchFailureCount + 1,
                    fetchFailureReason: p,
                    fetchStatus: "idle",
                    status: "error",
                  };
                case "invalidate":
                  return { ...n, isInvalidated: !0 };
                case "setState":
                  return { ...n, ...e.state };
              }
            })(this.state)),
              a.jG.batch(() => {
                this.observers.forEach((e) => {
                  e.onQueryUpdate();
                }),
                  this.#k.notify({ query: this, type: "updated", action: e });
              });
          }
        };
      function o(e, n) {
        return {
          fetchFailureCount: 0,
          fetchFailureReason: null,
          fetchStatus: (0, t.v_)(n.networkMode) ? "fetching" : "paused",
          ...(void 0 === e && { error: null, status: "pending" }),
        };
      }
    },
    60129: (e, n, p) => {
      "use strict";
      p.d(n, {
        ck: () => x,
        Sh: () => w,
        Ay: () => O,
        Oj: () => G,
        WC: () => V,
      });
      var r,
        a = p(69135),
        t = p(14232),
        P = p(69241),
        i = p(4697),
        o = p(61637),
        s = p(43583),
        l = p(7061),
        c = p(99659),
        b = p(24751),
        f = p(37876);
      function m(e) {
        return parseInt(e, 10) || 0;
      }
      let u = {
        shadow: {
          visibility: "hidden",
          position: "absolute",
          overflow: "hidden",
          height: 0,
          top: 0,
          left: 0,
          transform: "translateZ(0)",
        },
      };
      function d(e) {
        return (
          (function (e) {
            for (let n in e) return !1;
            return !0;
          })(e) ||
          (0 === e.outerHeightStyle && !e.overflowing)
        );
      }
      let R = t.forwardRef(function (e, n) {
        let {
            onChange: p,
            maxRows: r,
            minRows: a = 1,
            style: P,
            value: i,
            ...R
          } = e,
          { current: B } = t.useRef(null != i),
          N = t.useRef(null),
          h = (0, o.A)(n, N),
          k = t.useRef(null),
          g = t.useRef(null),
          K = t.useCallback(() => {
            let n = N.current,
              p = g.current;
            if (!n || !p) return;
            let t = (0, s.A)(n).getComputedStyle(n);
            if ("0px" === t.width)
              return { outerHeightStyle: 0, overflowing: !1 };
            (p.style.width = t.width),
              (p.value = n.value || e.placeholder || "x"),
              "\n" === p.value.slice(-1) && (p.value += " ");
            let P = t.boxSizing,
              i = m(t.paddingBottom) + m(t.paddingTop),
              o = m(t.borderBottomWidth) + m(t.borderTopWidth),
              l = p.scrollHeight;
            p.value = "x";
            let c = p.scrollHeight,
              b = l;
            return (
              a && (b = Math.max(Number(a) * c, b)),
              r && (b = Math.min(Number(r) * c, b)),
              {
                outerHeightStyle:
                  (b = Math.max(b, c)) + ("border-box" === P ? i + o : 0),
                overflowing: 1 >= Math.abs(b - l),
              }
            );
          }, [r, a, e.placeholder]),
          Q = (0, l.A)(() => {
            let e = N.current,
              n = K();
            if (!e || !n || d(n)) return !1;
            let p = n.outerHeightStyle;
            return null != k.current && k.current !== p;
          }),
          q = t.useCallback(() => {
            let e = N.current,
              n = K();
            if (!e || !n || d(n)) return;
            let p = n.outerHeightStyle;
            k.current !== p &&
              ((k.current = p), (e.style.height = "".concat(p, "px"))),
              (e.style.overflow = n.overflowing ? "hidden" : "");
          }, [K]),
          y = t.useRef(-1);
        return (
          (0, c.A)(() => {
            let e;
            let n = (0, b.A)(q),
              p = null == N ? void 0 : N.current;
            if (!p) return;
            let r = (0, s.A)(p);
            return (
              r.addEventListener("resize", n),
              "undefined" != typeof ResizeObserver &&
                (e = new ResizeObserver(() => {
                  Q() &&
                    (e.unobserve(p),
                    cancelAnimationFrame(y.current),
                    q(),
                    (y.current = requestAnimationFrame(() => {
                      e.observe(p);
                    })));
                })).observe(p),
              () => {
                n.clear(),
                  cancelAnimationFrame(y.current),
                  r.removeEventListener("resize", n),
                  e && e.disconnect();
              }
            );
          }, [K, q, Q]),
          (0, c.A)(() => {
            q();
          }),
          (0, f.jsxs)(t.Fragment, {
            children: [
              (0, f.jsx)("textarea", {
                value: i,
                onChange: (e) => {
                  B || q(), p && p(e);
                },
                ref: h,
                rows: a,
                style: P,
                ...R,
              }),
              (0, f.jsx)("textarea", {
                "aria-hidden": !0,
                className: e.className,
                readOnly: !0,
                ref: g,
                tabIndex: -1,
                style: { ...u.shadow, ...P, paddingTop: 0, paddingBottom: 0 },
              }),
            ],
          })
        );
      });
      var B = p(79550),
        N = p(27367),
        h = p(55509),
        k = p(74073),
        g = p(54773),
        K = p(37551),
        Q = p(82987),
        q = p(52196),
        y = p(80027),
        v = p(66313),
        D = p(91411),
        S = p(49790),
        A = p(40642);
      let V = (e, n) => {
          let { ownerState: p } = e;
          return [
            n.root,
            p.formControl && n.formControl,
            p.startAdornment && n.adornedStart,
            p.endAdornment && n.adornedEnd,
            p.error && n.error,
            "small" === p.size && n.sizeSmall,
            p.multiline && n.multiline,
            p.color && n["color".concat((0, y.A)(p.color))],
            p.fullWidth && n.fullWidth,
            p.hiddenLabel && n.hiddenLabel,
          ];
        },
        G = (e, n) => {
          let { ownerState: p } = e;
          return [
            n.input,
            "small" === p.size && n.inputSizeSmall,
            p.multiline && n.inputMultiline,
            "search" === p.type && n.inputTypeSearch,
            p.startAdornment && n.inputAdornedStart,
            p.endAdornment && n.inputAdornedEnd,
            p.hiddenLabel && n.inputHiddenLabel,
          ];
        },
        C = (e) => {
          let {
              classes: n,
              color: p,
              disabled: r,
              error: a,
              endAdornment: t,
              focused: P,
              formControl: o,
              fullWidth: s,
              hiddenLabel: l,
              multiline: c,
              readOnly: b,
              size: f,
              startAdornment: m,
              type: u,
            } = e,
            d = {
              root: [
                "root",
                "color".concat((0, y.A)(p)),
                r && "disabled",
                a && "error",
                s && "fullWidth",
                P && "focused",
                o && "formControl",
                f && "medium" !== f && "size".concat((0, y.A)(f)),
                c && "multiline",
                m && "adornedStart",
                t && "adornedEnd",
                l && "hiddenLabel",
                b && "readOnly",
              ],
              input: [
                "input",
                r && "disabled",
                "search" === u && "inputTypeSearch",
                c && "inputMultiline",
                "small" === f && "inputSizeSmall",
                l && "inputHiddenLabel",
                m && "inputAdornedStart",
                t && "inputAdornedEnd",
                b && "readOnly",
              ],
            };
          return (0, i.A)(d, A.g, n);
        },
        w = (0, g.Ay)("div", {
          name: "MuiInputBase",
          slot: "Root",
          overridesResolver: V,
        })(
          (0, Q.A)((e) => {
            let { theme: n } = e;
            return {
              ...n.typography.body1,
              color: (n.vars || n).palette.text.primary,
              lineHeight: "1.4375em",
              boxSizing: "border-box",
              position: "relative",
              cursor: "text",
              display: "inline-flex",
              alignItems: "center",
              ["&.".concat(A.A.disabled)]: {
                color: (n.vars || n).palette.text.disabled,
                cursor: "default",
              },
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline;
                  },
                  style: { padding: "4px 0 5px" },
                },
                {
                  props: (e) => {
                    let { ownerState: n, size: p } = e;
                    return n.multiline && "small" === p;
                  },
                  style: { paddingTop: 1 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.fullWidth;
                  },
                  style: { width: "100%" },
                },
              ],
            };
          })
        ),
        x = (0, g.Ay)("input", {
          name: "MuiInputBase",
          slot: "Input",
          overridesResolver: G,
        })(
          (0, Q.A)((e) => {
            let { theme: n } = e,
              p = "light" === n.palette.mode,
              r = {
                color: "currentColor",
                ...(n.vars
                  ? { opacity: n.vars.opacity.inputPlaceholder }
                  : { opacity: p ? 0.42 : 0.5 }),
                transition: n.transitions.create("opacity", {
                  duration: n.transitions.duration.shorter,
                }),
              },
              a = { opacity: "0 !important" },
              t = n.vars
                ? { opacity: n.vars.opacity.inputPlaceholder }
                : { opacity: p ? 0.42 : 0.5 };
            return {
              font: "inherit",
              letterSpacing: "inherit",
              color: "currentColor",
              padding: "4px 0 5px",
              border: 0,
              boxSizing: "content-box",
              background: "none",
              height: "1.4375em",
              margin: 0,
              WebkitTapHighlightColor: "transparent",
              display: "block",
              minWidth: 0,
              width: "100%",
              "&::-webkit-input-placeholder": r,
              "&::-moz-placeholder": r,
              "&::-ms-input-placeholder": r,
              "&:focus": { outline: 0 },
              "&:invalid": { boxShadow: "none" },
              "&::-webkit-search-decoration": { WebkitAppearance: "none" },
              ["label[data-shrink=false] + .".concat(A.A.formControl, " &")]: {
                "&::-webkit-input-placeholder": a,
                "&::-moz-placeholder": a,
                "&::-ms-input-placeholder": a,
                "&:focus::-webkit-input-placeholder": t,
                "&:focus::-moz-placeholder": t,
                "&:focus::-ms-input-placeholder": t,
              },
              ["&.".concat(A.A.disabled)]: {
                opacity: 1,
                WebkitTextFillColor: (n.vars || n).palette.text.disabled,
              },
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disableInjectingGlobalStyles;
                  },
                  style: {
                    animationName: "mui-auto-fill-cancel",
                    animationDuration: "10ms",
                    "&:-webkit-autofill": {
                      animationDuration: "5000s",
                      animationName: "mui-auto-fill",
                    },
                  },
                },
                { props: { size: "small" }, style: { paddingTop: 1 } },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline;
                  },
                  style: {
                    height: "auto",
                    resize: "none",
                    padding: 0,
                    paddingTop: 0,
                  },
                },
                {
                  props: { type: "search" },
                  style: { MozAppearance: "textfield" },
                },
              ],
            };
          })
        ),
        M = (0, K.Dp)({
          "@keyframes mui-auto-fill": { from: { display: "block" } },
          "@keyframes mui-auto-fill-cancel": { from: { display: "block" } },
        }),
        O = t.forwardRef(function (e, n) {
          var p;
          let i = (0, q.b)({ props: e, name: "MuiInputBase" }),
            {
              "aria-describedby": o,
              autoComplete: s,
              autoFocus: l,
              className: c,
              color: b,
              components: m = {},
              componentsProps: u = {},
              defaultValue: d,
              disabled: g,
              disableInjectingGlobalStyles: K,
              endAdornment: Q,
              error: y,
              fullWidth: A = !1,
              id: V,
              inputComponent: G = "input",
              inputProps: O = {},
              inputRef: E,
              margin: I,
              maxRows: L,
              minRows: z,
              multiline: T = !1,
              name: _,
              onBlur: F,
              onChange: j,
              onClick: W,
              onFocus: H,
              onKeyDown: $,
              onKeyUp: U,
              placeholder: Z,
              readOnly: Y,
              renderSuffix: J,
              rows: X,
              size: ee,
              slotProps: en = {},
              slots: ep = {},
              startAdornment: er,
              type: ea = "text",
              value: et,
              ...eP
            } = i,
            ei = null != O.value ? O.value : et,
            { current: eo } = t.useRef(null != ei),
            es = t.useRef(),
            el = t.useCallback((e) => {}, []),
            ec = (0, v.A)(es, E, O.ref, el),
            [eb, ef] = t.useState(!1),
            em = (0, k.A)(),
            eu = (0, N.A)({
              props: i,
              muiFormControl: em,
              states: [
                "color",
                "disabled",
                "error",
                "hiddenLabel",
                "size",
                "required",
                "filled",
              ],
            });
          (eu.focused = em ? em.focused : eb),
            t.useEffect(() => {
              !em && g && eb && (ef(!1), F && F());
            }, [em, g, eb, F]);
          let ed = em && em.onFilled,
            eR = em && em.onEmpty,
            eB = t.useCallback(
              (e) => {
                (0, S.lq)(e) ? ed && ed() : eR && eR();
              },
              [ed, eR]
            );
          (0, D.A)(() => {
            eo && eB({ value: ei });
          }, [ei, eB, eo]),
            t.useEffect(() => {
              eB(es.current);
            }, []);
          let eN = G,
            eh = O;
          T &&
            "input" === eN &&
            ((eh = X
              ? { type: void 0, minRows: X, maxRows: X, ...eh }
              : { type: void 0, maxRows: L, minRows: z, ...eh }),
            (eN = R)),
            t.useEffect(() => {
              em && em.setAdornedStart(!!er);
            }, [em, er]);
          let ek = {
              ...i,
              color: eu.color || "primary",
              disabled: eu.disabled,
              endAdornment: Q,
              error: eu.error,
              focused: eu.focused,
              formControl: em,
              fullWidth: A,
              hiddenLabel: eu.hiddenLabel,
              multiline: T,
              size: eu.size,
              startAdornment: er,
              type: ea,
            },
            eg = C(ek),
            eK = ep.root || m.Root || w,
            eQ = en.root || u.root || {},
            eq = ep.input || m.Input || x;
          return (
            (eh = {
              ...eh,
              ...(null !== (p = en.input) && void 0 !== p ? p : u.input),
            }),
            (0, f.jsxs)(t.Fragment, {
              children: [
                !K && "function" == typeof M && (r || (r = (0, f.jsx)(M, {}))),
                (0, f.jsxs)(eK, {
                  ...eQ,
                  ref: n,
                  onClick: (e) => {
                    es.current &&
                      e.currentTarget === e.target &&
                      es.current.focus(),
                      W && W(e);
                  },
                  ...eP,
                  ...(!(0, B.A)(eK) && {
                    ownerState: { ...ek, ...eQ.ownerState },
                  }),
                  className: (0, P.A)(
                    eg.root,
                    eQ.className,
                    c,
                    Y && "MuiInputBase-readOnly"
                  ),
                  children: [
                    er,
                    (0, f.jsx)(h.A.Provider, {
                      value: null,
                      children: (0, f.jsx)(eq, {
                        "aria-invalid": eu.error,
                        "aria-describedby": o,
                        autoComplete: s,
                        autoFocus: l,
                        defaultValue: d,
                        disabled: eu.disabled,
                        id: V,
                        onAnimationStart: (e) => {
                          eB(
                            "mui-auto-fill-cancel" === e.animationName
                              ? es.current
                              : { value: "x" }
                          );
                        },
                        name: _,
                        placeholder: Z,
                        readOnly: Y,
                        required: eu.required,
                        rows: X,
                        value: ei,
                        onKeyDown: $,
                        onKeyUp: U,
                        type: ea,
                        ...eh,
                        ...(!(0, B.A)(eq) && {
                          as: eN,
                          ownerState: { ...ek, ...eh.ownerState },
                        }),
                        ref: ec,
                        className: (0, P.A)(
                          eg.input,
                          eh.className,
                          Y && "MuiInputBase-readOnly"
                        ),
                        onBlur: (e) => {
                          F && F(e),
                            O.onBlur && O.onBlur(e),
                            em && em.onBlur ? em.onBlur(e) : ef(!1);
                        },
                        onChange: function (e) {
                          for (
                            var n = arguments.length,
                              p = Array(n > 1 ? n - 1 : 0),
                              r = 1;
                            r < n;
                            r++
                          )
                            p[r - 1] = arguments[r];
                          if (!eo) {
                            let n = e.target || es.current;
                            if (null == n) throw Error((0, a.A)(1));
                            eB({ value: n.value });
                          }
                          O.onChange && O.onChange(e, ...p), j && j(e, ...p);
                        },
                        onFocus: (e) => {
                          H && H(e),
                            O.onFocus && O.onFocus(e),
                            em && em.onFocus ? em.onFocus(e) : ef(!0);
                        },
                      }),
                    }),
                    Q,
                    J ? J({ ...eu, startAdornment: er }) : null,
                  ],
                }),
              ],
            })
          );
        });
    },
    60255: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = function (e, n, p) {
        return "function" == typeof e ? e(n, p) : e;
      };
    },
    60388: (e, n, p) => {
      "use strict";
      p.d(n, { jG: () => a });
      var r = (e) => setTimeout(e, 0),
        a = (function () {
          let e = [],
            n = 0,
            p = (e) => {
              e();
            },
            a = (e) => {
              e();
            },
            t = r,
            P = (r) => {
              n
                ? e.push(r)
                : t(() => {
                    p(r);
                  });
            },
            i = () => {
              let n = e;
              (e = []),
                n.length &&
                  t(() => {
                    a(() => {
                      n.forEach((e) => {
                        p(e);
                      });
                    });
                  });
            };
          return {
            batch: (e) => {
              let p;
              n++;
              try {
                p = e();
              } finally {
                --n || i();
              }
              return p;
            },
            batchCalls:
              (e) =>
              (...n) => {
                P(() => {
                  e(...n);
                });
              },
            schedule: P,
            setNotifyFunction: (e) => {
              p = e;
            },
            setBatchNotifyFunction: (e) => {
              a = e;
            },
            setScheduler: (e) => {
              t = e;
            },
          };
        })();
    },
    61240: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => m });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(54773),
        i = p(82987),
        o = p(52196),
        s = p(23368),
        l = p(99003),
        c = p(37876);
      let b = (e) => {
          let { alignItems: n, classes: p } = e;
          return (0, t.A)(
            { root: ["root", "flex-start" === n && "alignItemsFlexStart"] },
            s.f,
            p
          );
        },
        f = (0, P.Ay)("div", {
          name: "MuiListItemIcon",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              "flex-start" === p.alignItems && n.alignItemsFlexStart,
            ];
          },
        })(
          (0, i.A)((e) => {
            let { theme: n } = e;
            return {
              minWidth: 56,
              color: (n.vars || n).palette.action.active,
              flexShrink: 0,
              display: "inline-flex",
              variants: [
                {
                  props: { alignItems: "flex-start" },
                  style: { marginTop: 8 },
                },
              ],
            };
          })
        ),
        m = r.forwardRef(function (e, n) {
          let p = (0, o.b)({ props: e, name: "MuiListItemIcon" }),
            { className: t, ...P } = p,
            i = r.useContext(l.A),
            s = { ...p, alignItems: i.alignItems },
            m = b(s);
          return (0, c.jsx)(f, {
            className: (0, a.A)(m.root, t),
            ownerState: s,
            ref: n,
            ...P,
          });
        });
    },
    61637: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(14232);
      function a(...e) {
        let n = r.useRef(void 0),
          p = r.useCallback((n) => {
            let p = e.map((e) => {
              if (null == e) return null;
              if ("function" == typeof e) {
                let p = e(n);
                return "function" == typeof p
                  ? p
                  : () => {
                      e(null);
                    };
              }
              return (
                (e.current = n),
                () => {
                  e.current = null;
                }
              );
            });
            return () => {
              p.forEach((e) => e?.());
            };
          }, e);
        return r.useMemo(
          () =>
            e.every((e) => null == e)
              ? null
              : (e) => {
                  n.current && (n.current(), (n.current = void 0)),
                    null != e && (n.current = p(e));
                },
          e
        );
      }
    },
    62844: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => i, I: () => P });
      var r = p(14232),
        a = p(37876);
      let t = r.createContext(),
        P = () => r.useContext(t) ?? !1,
        i = function ({ value: e, ...n }) {
          return (0, a.jsx)(t.Provider, { value: e ?? !0, ...n });
        };
    },
    63009: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => u });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(54773),
        i = p(52196),
        o = p(99003),
        s = p(47951),
        l = p(45879);
      function c(e) {
        return (0, l.Ay)("MuiList", e);
      }
      (0, s.A)("MuiList", ["root", "padding", "dense", "subheader"]);
      var b = p(37876);
      let f = (e) => {
          let { classes: n, disablePadding: p, dense: r, subheader: a } = e;
          return (0, t.A)(
            { root: ["root", !p && "padding", r && "dense", a && "subheader"] },
            c,
            n
          );
        },
        m = (0, P.Ay)("ul", {
          name: "MuiList",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              !p.disablePadding && n.padding,
              p.dense && n.dense,
              p.subheader && n.subheader,
            ];
          },
        })({
          listStyle: "none",
          margin: 0,
          padding: 0,
          position: "relative",
          variants: [
            {
              props: (e) => {
                let { ownerState: n } = e;
                return !n.disablePadding;
              },
              style: { paddingTop: 8, paddingBottom: 8 },
            },
            {
              props: (e) => {
                let { ownerState: n } = e;
                return n.subheader;
              },
              style: { paddingTop: 0 },
            },
          ],
        }),
        u = r.forwardRef(function (e, n) {
          let p = (0, i.b)({ props: e, name: "MuiList" }),
            {
              children: t,
              className: P,
              component: s = "ul",
              dense: l = !1,
              disablePadding: c = !1,
              subheader: u,
              ...d
            } = p,
            R = r.useMemo(() => ({ dense: l }), [l]),
            B = { ...p, component: s, dense: l, disablePadding: c },
            N = f(B);
          return (0, b.jsx)(o.A.Provider, {
            value: R,
            children: (0, b.jsxs)(m, {
              as: s,
              className: (0, a.A)(N.root, P),
              ref: n,
              ownerState: B,
              ...d,
              children: [u, t],
            }),
          });
        });
    },
    64289: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P });
      var r = p(89856),
        a = p(76975);
      let t = (0, r.A)(),
        P = function (e = t) {
          return (0, a.A)(e);
        };
    },
    66313: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(61637).A;
    },
    67360: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => i });
      var r = p(61637),
        a = p(26008),
        t = p(60255),
        P = p(43903);
      function i(e, n) {
        let {
            className: p,
            elementType: i,
            ownerState: o,
            externalForwardedProps: s,
            internalForwardedProps: l,
            shouldForwardComponentProp: c = !1,
            ...b
          } = n,
          {
            component: f,
            slots: m = { [e]: void 0 },
            slotProps: u = { [e]: void 0 },
            ...d
          } = s,
          R = m[e] || i,
          B = (0, t.A)(u[e], o),
          {
            props: { component: N, ...h },
            internalRef: k,
          } = (0, P.A)({
            className: p,
            ...b,
            externalForwardedProps: "root" === e ? d : void 0,
            externalSlotProps: B,
          }),
          g = (0, r.A)(k, null == B ? void 0 : B.ref, n.ref),
          K = "root" === e ? N || f : N,
          Q = (0, a.A)(
            R,
            {
              ...("root" === e && !f && !m[e] && l),
              ...("root" !== e && !m[e] && l),
              ...h,
              ...(K && !c && { as: K }),
              ...(K && c && { component: K }),
              ref: g,
            },
            o
          );
        return [R, Q];
      }
    },
    67405: (e, n, p) => {
      "use strict";
      p.d(n, { Y: () => h });
      var r = p(4393),
        a = p(26611),
        t = p(73004);
      let P = (e) => {
          let n = e.map(t.g),
            p = o(n),
            r = s(n);
          return { white: i(r, p, "white"), black: i(r, p, "black") };
        },
        i = (e, n, p) => {
          let r = +("white" !== p),
            t = e.filter((e, n) => n % 2 === r),
            P = n.filter((e, n) => n % 2 === r);
          return ((0, a.f8)(t, P) + (0, a.d4)(t)) / 2;
        },
        o = (e) => {
          let n = (0, a.Go)(Math.ceil(e.length / 10), 2, 8),
            p = [],
            r = Math.round(n / 2);
          for (let a = 1; a < e.length; a++) {
            let t = a - r,
              P = a + r;
            if (t < 0) {
              p.push(e.slice(0, n));
              continue;
            }
            if (P > e.length) {
              p.push(e.slice(-n));
              continue;
            }
            p.push(e.slice(t, P));
          }
          return p.map((e) => {
            let n = (0, a.lW)(e);
            return (0, a.Go)(n, 0.5, 12);
          });
        },
        s = (e) =>
          e.slice(1).map((n, p) => {
            let r = e[p];
            return Math.min(
              100,
              Math.max(
                0,
                103.1668100711649 *
                  Math.exp(
                    -0.04354415386753951 *
                      (p % 2 == 0 ? Math.max(0, r - n) : Math.max(0, n - r))
                  ) -
                  3.166924740191411 +
                  1
              )
            );
          });
      var l = p(24307),
        c = p(3242),
        b = p(29791);
      let f = (e, n, p) => {
          if (e.length < 2) return;
          let { whiteCpl: r, blackCpl: a } = u(e);
          return {
            white: B(r, null != n ? n : p),
            black: B(a, null != p ? p : n),
          };
        },
        m = (e) => {
          let n = e.lines[0];
          if (void 0 !== n.cp) return (0, a.Go)(n.cp, -1e3, 1e3);
          if (void 0 !== n.mate) return (0, a.Go)(n.mate * (1 / 0), -1e3, 1e3);
          throw Error("No cp or mate in line");
        },
        u = (e) => {
          let n = m(e[0]),
            { whiteCpl: p, blackCpl: r } = e.slice(1).reduce(
              (e, p, r) => {
                let a = m(p);
                return (
                  r % 2 == 0
                    ? (e.whiteCpl += a > n ? 0 : Math.min(n - a, 1e3))
                    : (e.blackCpl += a < n ? 0 : Math.min(a - n, 1e3)),
                  (n = a),
                  e
                );
              },
              { whiteCpl: 0, blackCpl: 0 }
            );
          return {
            whiteCpl: p / Math.ceil((e.length - 1) / 2),
            blackCpl: r / Math.floor((e.length - 1) / 2),
          };
        },
        d = (e) => 3100 * Math.exp(-0.01 * e),
        R = (e) => -100 * Math.log(Math.min(e, 3100) / 3100),
        B = (e, n) => {
          let p = d(e);
          if (!n) return p;
          let r = e - R(n);
          return 0 === r
            ? p
            : r > 0
              ? n * Math.exp(-0.005 * r)
              : n / Math.exp(-(-0.005 * r));
        };
      var N = p(92634);
      class h {
        static async create(e, n, p) {
          let r = new h(e, n, p);
          return await r.addNewWorker(), (r.isReady = !0), r;
        }
        acquireWorker() {
          for (let e of this.workers) if (e.isReady) return (e.isReady = !1), e;
        }
        async releaseWorker(e) {
          let n = this.workerQueue.shift();
          if (!n) {
            e.isReady = !0;
            return;
          }
          let p = await (0, N.Wj)(
            e,
            n.commands,
            n.finalMessage,
            n.onNewMessage
          );
          this.releaseWorker(e), n.resolve(p);
        }
        async setMultiPv(e) {
          if (e !== this.multiPv) {
            if (e < 2 || e > 6)
              throw Error("Invalid MultiPV value : ".concat(e));
            await this.sendCommandsToEachWorker(
              ["setoption name MultiPV value ".concat(e), "isready"],
              "readyok"
            ),
              (this.multiPv = e);
          }
        }
        async setElo(e) {
          if (e !== this.elo) {
            if (e < 1320 || e > 3190)
              throw Error("Invalid Elo value : ".concat(e));
            await this.sendCommandsToEachWorker(
              ["setoption name UCI_LimitStrength value true", "isready"],
              "readyok"
            ),
              await this.sendCommandsToEachWorker(
                ["setoption name UCI_Elo value ".concat(e), "isready"],
                "readyok"
              ),
              (this.elo = e);
          }
        }
        getIsReady() {
          return this.isReady;
        }
        throwErrorIfNotReady() {
          if (!this.isReady) throw Error("".concat(this.name, " is not ready"));
        }
        shutdown() {
          for (let e of ((this.isReady = !1),
          (this.workerQueue = []),
          this.workers))
            this.terminateWorker(e);
          this.workers = [];
        }
        terminateWorker(e) {
          console.log("Terminating worker from ".concat(this.enginePath)),
            (e.isReady = !1),
            e.uci("quit"),
            e.terminate();
        }
        async stopAllCurrentJobs() {
          for (let e of ((this.workerQueue = []),
          await this.sendCommandsToEachWorker(["stop", "isready"], "readyok"),
          this.workers))
            this.releaseWorker(e);
        }
        async sendCommands(e, n, p) {
          let r = this.acquireWorker();
          if (!r)
            return new Promise((r) => {
              this.workerQueue.push({
                commands: e,
                finalMessage: n,
                onNewMessage: p,
                resolve: r,
              });
            });
          let a = await (0, N.Wj)(r, e, n, p);
          return this.releaseWorker(r), a;
        }
        async sendCommandsToEachWorker(e, n, p) {
          await Promise.all(
            this.workers.map(async (r) => {
              await (0, N.Wj)(r, e, n, p), this.releaseWorker(r);
            })
          );
        }
        async addNewWorker() {
          var e;
          let n = (0, N.JX)(this.enginePath);
          await (0, N.Wj)(n, ["uci"], "uciok"),
            await (0, N.Wj)(
              n,
              ["setoption name MultiPV value ".concat(this.multiPv), "isready"],
              "readyok"
            ),
            await (null === (e = this.customEngineInit) || void 0 === e
              ? void 0
              : e.call(this, n)),
            await (0, N.Wj)(n, ["ucinewgame", "isready"], "readyok"),
            this.workers.push(n),
            this.releaseWorker(n);
        }
        async setWorkersNb(e) {
          if (e === this.workers.length) return;
          if (e < 1)
            throw Error(
              "Number of workers must be greater than 0, got ".concat(
                e,
                " instead"
              )
            );
          if (e < this.workers.length) {
            let n = this.workers.slice(e);
            for (let p of ((this.workers = this.workers.slice(0, e)), n))
              this.terminateWorker(p);
            return;
          }
          let n = e - this.workers.length;
          await Promise.all(
            Array(n)
              .fill(0)
              .map(() => this.addNewWorker())
          );
        }
        async evaluateGame(e) {
          let {
            fens: n,
            uciMoves: p,
            depth: r = 16,
            multiPv: a = this.multiPv,
            setEvaluationProgress: t,
            playersRatings: i,
            workersNb: o = 1,
          } = e;
          this.throwErrorIfNotReady(),
            (this.isReady = !1),
            null == t || t(1),
            await this.setMultiPv(a),
            await this.sendCommandsToEachWorker(
              ["ucinewgame", "isready"],
              "readyok"
            ),
            this.setWorkersNb(o);
          let s = Array(n.length),
            c = 0,
            m = (e, p) => {
              c++, (s[e] = p);
              let r = c / n.length;
              null == t || t(99 - 99 * Math.exp(-4 * r));
            };
          await Promise.all(
            n.map(async (e, n) => {
              let p = (0, l.sI)(e);
              if (p) {
                m(n, {
                  lines: [
                    { pv: [], depth: 0, multiPv: 1, mate: "w" === p ? -1 : 1 },
                  ],
                });
                return;
              }
              if ((0, l.RS)(e)) {
                m(n, { lines: [{ pv: [], depth: 0, multiPv: 1, cp: 0 }] });
                return;
              }
              m(n, await this.evaluatePosition(e, r, o));
            })
          ),
            await this.setWorkersNb(1),
            (this.isReady = !0);
          let u = (0, b.R)(s, p, n),
            d = P(s);
          return {
            positions: u,
            estimatedElo: f(
              s,
              null == i ? void 0 : i.white,
              null == i ? void 0 : i.black
            ),
            accuracy: d,
            settings: {
              engine: this.name,
              date: new Date().toISOString(),
              depth: r,
              multiPv: a,
            },
          };
        }
        async evaluatePosition(e) {
          let n =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 16,
            p = arguments.length > 2 ? arguments[2] : void 0;
          if (p < 2) {
            let p = await (0, c.Cv)(e, this.multiPv);
            if (p.lines.length >= this.multiPv && p.lines[0].depth >= n)
              return p;
          }
          let a = await this.sendCommands(
            ["position fen ".concat(e), "go depth ".concat(n)],
            "bestmove"
          );
          return (0, r.ue)(a, e);
        }
        async evaluatePositionWithUpdate(e) {
          let {
            fen: n,
            depth: p = 16,
            multiPv: a = this.multiPv,
            setPartialEval: t,
          } = e;
          this.throwErrorIfNotReady();
          let P = (0, c.Cv)(n, a);
          await this.stopAllCurrentJobs(),
            await this.setMultiPv(a),
            console.log("Evaluating position: ".concat(n));
          let i = await P;
          if (i.lines.length >= a && i.lines[0].depth >= p)
            return null == t || t(i), i;
          let o = await this.sendCommands(
            ["position fen ".concat(n), "go depth ".concat(p)],
            "bestmove",
            (e) => {
              t && t((0, r.ue)(e, n));
            }
          );
          return (0, r.ue)(o, n);
        }
        async getEngineNextMove(e, n) {
          let p =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 16;
          this.throwErrorIfNotReady(),
            await this.stopAllCurrentJobs(),
            await this.setElo(n),
            console.log("Evaluating position: ".concat(e));
          let a = (
              await this.sendCommands(
                ["position fen ".concat(e), "go depth ".concat(p)],
                "bestmove"
              )
            ).find((e) => e.startsWith("bestmove")),
            t = (0, r.VJ)(null != a ? a : "", "bestmove");
          if (!t) throw Error("No move found");
          return "(none)" === t ? void 0 : t;
        }
        constructor(e, n, p) {
          (this.workers = []),
            (this.workerQueue = []),
            (this.isReady = !1),
            (this.customEngineInit = void 0),
            (this.multiPv = 3),
            (this.elo = void 0),
            (this.name = e),
            (this.enginePath = n),
            (this.customEngineInit = p);
        }
      }
    },
    67629: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, E: () => t });
      var r = p(86965),
        a = p(43591);
      class t {
        static create() {
          return new t();
        }
        currentId = null;
        start(e, n) {
          this.clear(),
            (this.currentId = setTimeout(() => {
              (this.currentId = null), n();
            }, e));
        }
        clear = () => {
          null !== this.currentId &&
            (clearTimeout(this.currentId), (this.currentId = null));
        };
        disposeEffect = () => this.clear;
      }
      function P() {
        let e = (0, r.A)(t.create).current;
        return (0, a.A)(e.disposeEffect), e;
      }
    },
    67768: (e, n, p) => {
      "use strict";
      p.d(n, { Ht: () => i, jE: () => P });
      var r = p(14232),
        a = p(37876),
        t = r.createContext(void 0),
        P = (e) => {
          let n = r.useContext(t);
          if (e) return e;
          if (!n)
            throw Error(
              "No QueryClient set, use QueryClientProvider to set one"
            );
          return n;
        },
        i = ({ client: e, children: n }) => (
          r.useEffect(
            () => (
              e.mount(),
              () => {
                e.unmount();
              }
            ),
            [e]
          ),
          (0, a.jsx)(t.Provider, { value: e, children: n })
        );
    },
    67955: (e, n, p) => {
      "use strict";
      p.d(n, { J: () => m });
      var r,
        a = {
          animationIterationCount: 1,
          aspectRatio: 1,
          borderImageOutset: 1,
          borderImageSlice: 1,
          borderImageWidth: 1,
          boxFlex: 1,
          boxFlexGroup: 1,
          boxOrdinalGroup: 1,
          columnCount: 1,
          columns: 1,
          flex: 1,
          flexGrow: 1,
          flexPositive: 1,
          flexShrink: 1,
          flexNegative: 1,
          flexOrder: 1,
          gridRow: 1,
          gridRowEnd: 1,
          gridRowSpan: 1,
          gridRowStart: 1,
          gridColumn: 1,
          gridColumnEnd: 1,
          gridColumnSpan: 1,
          gridColumnStart: 1,
          msGridRow: 1,
          msGridRowSpan: 1,
          msGridColumn: 1,
          msGridColumnSpan: 1,
          fontWeight: 1,
          lineHeight: 1,
          opacity: 1,
          order: 1,
          orphans: 1,
          scale: 1,
          tabSize: 1,
          widows: 1,
          zIndex: 1,
          zoom: 1,
          WebkitLineClamp: 1,
          fillOpacity: 1,
          floodOpacity: 1,
          stopOpacity: 1,
          strokeDasharray: 1,
          strokeDashoffset: 1,
          strokeMiterlimit: 1,
          strokeOpacity: 1,
          strokeWidth: 1,
        },
        t = p(41945),
        P = /[A-Z]|^ms/g,
        i = /_EMO_([^_]+?)_([^]*?)_EMO_/g,
        o = function (e) {
          return 45 === e.charCodeAt(1);
        },
        s = function (e) {
          return null != e && "boolean" != typeof e;
        },
        l = (0, t.A)(function (e) {
          return o(e) ? e : e.replace(P, "-$&").toLowerCase();
        }),
        c = function (e, n) {
          switch (e) {
            case "animation":
            case "animationName":
              if ("string" == typeof n)
                return n.replace(i, function (e, n, p) {
                  return (r = { name: n, styles: p, next: r }), n;
                });
          }
          return 1 === a[e] || o(e) || "number" != typeof n || 0 === n
            ? n
            : n + "px";
        };
      function b(e, n, p) {
        if (null == p) return "";
        if (void 0 !== p.__emotion_styles) return p;
        switch (typeof p) {
          case "boolean":
            return "";
          case "object":
            if (1 === p.anim)
              return (r = { name: p.name, styles: p.styles, next: r }), p.name;
            if (void 0 !== p.styles) {
              var a = p.next;
              if (void 0 !== a)
                for (; void 0 !== a; )
                  (r = { name: a.name, styles: a.styles, next: r }),
                    (a = a.next);
              return p.styles + ";";
            }
            return (function (e, n, p) {
              var r = "";
              if (Array.isArray(p))
                for (var a = 0; a < p.length; a++) r += b(e, n, p[a]) + ";";
              else
                for (var t in p) {
                  var P = p[t];
                  if ("object" != typeof P)
                    null != n && void 0 !== n[P]
                      ? (r += t + "{" + n[P] + "}")
                      : s(P) && (r += l(t) + ":" + c(t, P) + ";");
                  else if (
                    Array.isArray(P) &&
                    "string" == typeof P[0] &&
                    (null == n || void 0 === n[P[0]])
                  )
                    for (var i = 0; i < P.length; i++)
                      s(P[i]) && (r += l(t) + ":" + c(t, P[i]) + ";");
                  else {
                    var o = b(e, n, P);
                    switch (t) {
                      case "animation":
                      case "animationName":
                        r += l(t) + ":" + o + ";";
                        break;
                      default:
                        r += t + "{" + o + "}";
                    }
                  }
                }
              return r;
            })(e, n, p);
          case "function":
            if (void 0 !== e) {
              var t = r,
                P = p(e);
              return (r = t), b(e, n, P);
            }
        }
        if (null == n) return p;
        var i = n[p];
        return void 0 !== i ? i : p;
      }
      var f = /label:\s*([^\s;{]+)\s*(;|$)/g;
      function m(e, n, p) {
        if (
          1 === e.length &&
          "object" == typeof e[0] &&
          null !== e[0] &&
          void 0 !== e[0].styles
        )
          return e[0];
        var a,
          t = !0,
          P = "";
        r = void 0;
        var i = e[0];
        null == i || void 0 === i.raw
          ? ((t = !1), (P += b(p, n, i)))
          : (P += i[0]);
        for (var o = 1; o < e.length; o++)
          (P += b(p, n, e[o])), t && (P += i[o]);
        f.lastIndex = 0;
        for (var s = ""; null !== (a = f.exec(P)); ) s += "-" + a[1];
        return {
          name:
            (function (e) {
              for (var n, p = 0, r = 0, a = e.length; a >= 4; ++r, a -= 4)
                (n =
                  (65535 &
                    (n =
                      (255 & e.charCodeAt(r)) |
                      ((255 & e.charCodeAt(++r)) << 8) |
                      ((255 & e.charCodeAt(++r)) << 16) |
                      ((255 & e.charCodeAt(++r)) << 24))) *
                    0x5bd1e995 +
                  (((n >>> 16) * 59797) << 16)),
                  (n ^= n >>> 24),
                  (p =
                    ((65535 & n) * 0x5bd1e995 + (((n >>> 16) * 59797) << 16)) ^
                    ((65535 & p) * 0x5bd1e995 + (((p >>> 16) * 59797) << 16)));
              switch (a) {
                case 3:
                  p ^= (255 & e.charCodeAt(r + 2)) << 16;
                case 2:
                  p ^= (255 & e.charCodeAt(r + 1)) << 8;
                case 1:
                  (p ^= 255 & e.charCodeAt(r)),
                    (p =
                      (65535 & p) * 0x5bd1e995 + (((p >>> 16) * 59797) << 16));
              }
              return (
                (p ^= p >>> 13),
                (
                  ((p =
                    (65535 & p) * 0x5bd1e995 + (((p >>> 16) * 59797) << 16)) ^
                    (p >>> 15)) >>>
                  0
                ).toString(36)
              );
            })(P) + s,
          styles: P,
          next: r,
        };
      }
    },
    68128: (e, n, p) => {
      "use strict";
      e.exports = p(29044);
    },
    68197: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => _ });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(97369),
        i = p(54773),
        o = p(52196),
        s = p(66313),
        l = p(97395),
        c = p(86965);
      class b {
        static create() {
          return new b();
        }
        static use() {
          let e = (0, c.A)(b.create).current,
            [n, p] = r.useState(!1);
          return (
            (e.shouldMount = n),
            (e.setShouldMount = p),
            r.useEffect(e.mountEffect, [n]),
            e
          );
        }
        mount() {
          return (
            this.mounted ||
              ((this.mounted = (function () {
                let e, n;
                let p = new Promise((p, r) => {
                  (e = p), (n = r);
                });
                return (p.resolve = e), (p.reject = n), p;
              })()),
              (this.shouldMount = !0),
              this.setShouldMount(this.shouldMount)),
            this.mounted
          );
        }
        start() {
          for (var e = arguments.length, n = Array(e), p = 0; p < e; p++)
            n[p] = arguments[p];
          this.mount().then(() => {
            var e;
            return null === (e = this.ref.current) || void 0 === e
              ? void 0
              : e.start(...n);
          });
        }
        stop() {
          for (var e = arguments.length, n = Array(e), p = 0; p < e; p++)
            n[p] = arguments[p];
          this.mount().then(() => {
            var e;
            return null === (e = this.ref.current) || void 0 === e
              ? void 0
              : e.stop(...n);
          });
        }
        pulsate() {
          for (var e = arguments.length, n = Array(e), p = 0; p < e; p++)
            n[p] = arguments[p];
          this.mount().then(() => {
            var e;
            return null === (e = this.ref.current) || void 0 === e
              ? void 0
              : e.pulsate(...n);
          });
        }
        constructor() {
          (this.mountEffect = () => {
            this.shouldMount &&
              !this.didMount &&
              null !== this.ref.current &&
              ((this.didMount = !0), this.mounted.resolve());
          }),
            (this.ref = { current: null }),
            (this.mounted = null),
            (this.didMount = !1),
            (this.shouldMount = !1),
            (this.setShouldMount = null);
        }
      }
      var f = p(28888),
        m = p(40670),
        u = p(44501),
        d = p(16724),
        R = p(4073);
      function B(e, n) {
        var p = Object.create(null);
        return (
          e &&
            r.Children.map(e, function (e) {
              return e;
            }).forEach(function (e) {
              p[e.key] = n && (0, r.isValidElement)(e) ? n(e) : e;
            }),
          p
        );
      }
      function N(e, n, p) {
        return null != p[n] ? p[n] : e.props[n];
      }
      var h =
          Object.values ||
          function (e) {
            return Object.keys(e).map(function (n) {
              return e[n];
            });
          },
        k = (function (e) {
          function n(n, p) {
            var r = e.call(this, n, p) || this,
              a = r.handleExited.bind(
                (function (e) {
                  if (void 0 === e)
                    throw ReferenceError(
                      "this hasn't been initialised - super() hasn't been called"
                    );
                  return e;
                })(r)
              );
            return (
              (r.state = {
                contextValue: { isMounting: !0 },
                handleExited: a,
                firstRender: !0,
              }),
              r
            );
          }
          (0, d.A)(n, e);
          var p = n.prototype;
          return (
            (p.componentDidMount = function () {
              (this.mounted = !0),
                this.setState({ contextValue: { isMounting: !1 } });
            }),
            (p.componentWillUnmount = function () {
              this.mounted = !1;
            }),
            (n.getDerivedStateFromProps = function (e, n) {
              var p,
                a,
                t = n.children,
                P = n.handleExited;
              return {
                children: n.firstRender
                  ? B(e.children, function (n) {
                      return (0, r.cloneElement)(n, {
                        onExited: P.bind(null, n),
                        in: !0,
                        appear: N(n, "appear", e),
                        enter: N(n, "enter", e),
                        exit: N(n, "exit", e),
                      });
                    })
                  : (Object.keys(
                      (a = (function (e, n) {
                        function p(p) {
                          return p in n ? n[p] : e[p];
                        }
                        (e = e || {}), (n = n || {});
                        var r,
                          a = Object.create(null),
                          t = [];
                        for (var P in e)
                          P in n
                            ? t.length && ((a[P] = t), (t = []))
                            : t.push(P);
                        var i = {};
                        for (var o in n) {
                          if (a[o])
                            for (r = 0; r < a[o].length; r++) {
                              var s = a[o][r];
                              i[a[o][r]] = p(s);
                            }
                          i[o] = p(o);
                        }
                        for (r = 0; r < t.length; r++) i[t[r]] = p(t[r]);
                        return i;
                      })(t, (p = B(e.children))))
                    ).forEach(function (n) {
                      var i = a[n];
                      if ((0, r.isValidElement)(i)) {
                        var o = n in t,
                          s = n in p,
                          l = t[n],
                          c = (0, r.isValidElement)(l) && !l.props.in;
                        s && (!o || c)
                          ? (a[n] = (0, r.cloneElement)(i, {
                              onExited: P.bind(null, i),
                              in: !0,
                              exit: N(i, "exit", e),
                              enter: N(i, "enter", e),
                            }))
                          : s || !o || c
                            ? s &&
                              o &&
                              (0, r.isValidElement)(l) &&
                              (a[n] = (0, r.cloneElement)(i, {
                                onExited: P.bind(null, i),
                                in: l.props.in,
                                exit: N(i, "exit", e),
                                enter: N(i, "enter", e),
                              }))
                            : (a[n] = (0, r.cloneElement)(i, { in: !1 }));
                      }
                    }),
                    a),
                firstRender: !1,
              };
            }),
            (p.handleExited = function (e, n) {
              var p = B(this.props.children);
              e.key in p ||
                (e.props.onExited && e.props.onExited(n),
                this.mounted &&
                  this.setState(function (n) {
                    var p = (0, u.A)({}, n.children);
                    return delete p[e.key], { children: p };
                  }));
            }),
            (p.render = function () {
              var e = this.props,
                n = e.component,
                p = e.childFactory,
                a = (0, m.A)(e, ["component", "childFactory"]),
                t = this.state.contextValue,
                P = h(this.state.children).map(p);
              return (delete a.appear,
              delete a.enter,
              delete a.exit,
              null === n)
                ? r.createElement(R.A.Provider, { value: t }, P)
                : r.createElement(
                    R.A.Provider,
                    { value: t },
                    r.createElement(n, a, P)
                  );
            }),
            n
          );
        })(r.Component);
      (k.propTypes = {}),
        (k.defaultProps = {
          component: "div",
          childFactory: function (e) {
            return e;
          },
        });
      var g = p(67629),
        K = p(38993),
        Q = p(37876),
        q = p(47951);
      let y = (0, q.A)("MuiTouchRipple", [
        "root",
        "ripple",
        "rippleVisible",
        "ripplePulsate",
        "child",
        "childLeaving",
        "childPulsate",
      ]);
      function v() {
        let e = (0, f._)([
          "\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n",
        ]);
        return (
          (v = function () {
            return e;
          }),
          e
        );
      }
      function D() {
        let e = (0, f._)([
          "\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n",
        ]);
        return (
          (D = function () {
            return e;
          }),
          e
        );
      }
      function S() {
        let e = (0, f._)([
          "\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n",
        ]);
        return (
          (S = function () {
            return e;
          }),
          e
        );
      }
      function A() {
        let e = (0, f._)([
          "\n  opacity: 0;\n  position: absolute;\n\n  &.",
          " {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ",
          ";\n    animation-duration: ",
          "ms;\n    animation-timing-function: ",
          ";\n  }\n\n  &.",
          " {\n    animation-duration: ",
          "ms;\n  }\n\n  & .",
          " {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .",
          " {\n    opacity: 0;\n    animation-name: ",
          ";\n    animation-duration: ",
          "ms;\n    animation-timing-function: ",
          ";\n  }\n\n  & .",
          " {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ",
          ";\n    animation-duration: 2500ms;\n    animation-timing-function: ",
          ";\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n",
        ]);
        return (
          (A = function () {
            return e;
          }),
          e
        );
      }
      let V = (0, K.i7)(v()),
        G = (0, K.i7)(D()),
        C = (0, K.i7)(S()),
        w = (0, i.Ay)("span", { name: "MuiTouchRipple", slot: "Root" })({
          overflow: "hidden",
          pointerEvents: "none",
          position: "absolute",
          zIndex: 0,
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          borderRadius: "inherit",
        }),
        x = (0, i.Ay)(
          function (e) {
            let {
                className: n,
                classes: p,
                pulsate: t = !1,
                rippleX: P,
                rippleY: i,
                rippleSize: o,
                in: s,
                onExited: l,
                timeout: c,
              } = e,
              [b, f] = r.useState(!1),
              m = (0, a.A)(n, p.ripple, p.rippleVisible, t && p.ripplePulsate),
              u = (0, a.A)(p.child, b && p.childLeaving, t && p.childPulsate);
            return (
              s || b || f(!0),
              r.useEffect(() => {
                if (!s && null != l) {
                  let e = setTimeout(l, c);
                  return () => {
                    clearTimeout(e);
                  };
                }
              }, [l, s, c]),
              (0, Q.jsx)("span", {
                className: m,
                style: {
                  width: o,
                  height: o,
                  top: -(o / 2) + i,
                  left: -(o / 2) + P,
                },
                children: (0, Q.jsx)("span", { className: u }),
              })
            );
          },
          { name: "MuiTouchRipple", slot: "Ripple" }
        )(
          A(),
          y.rippleVisible,
          V,
          550,
          (e) => {
            let { theme: n } = e;
            return n.transitions.easing.easeInOut;
          },
          y.ripplePulsate,
          (e) => {
            let { theme: n } = e;
            return n.transitions.duration.shorter;
          },
          y.child,
          y.childLeaving,
          G,
          550,
          (e) => {
            let { theme: n } = e;
            return n.transitions.easing.easeInOut;
          },
          y.childPulsate,
          C,
          (e) => {
            let { theme: n } = e;
            return n.transitions.easing.easeInOut;
          }
        ),
        M = r.forwardRef(function (e, n) {
          let {
              center: p = !1,
              classes: t = {},
              className: P,
              ...i
            } = (0, o.b)({ props: e, name: "MuiTouchRipple" }),
            [s, l] = r.useState([]),
            c = r.useRef(0),
            b = r.useRef(null);
          r.useEffect(() => {
            b.current && (b.current(), (b.current = null));
          }, [s]);
          let f = r.useRef(!1),
            m = (0, g.A)(),
            u = r.useRef(null),
            d = r.useRef(null),
            R = r.useCallback(
              (e) => {
                let {
                  pulsate: n,
                  rippleX: p,
                  rippleY: r,
                  rippleSize: P,
                  cb: i,
                } = e;
                l((e) => [
                  ...e,
                  (0, Q.jsx)(
                    x,
                    {
                      classes: {
                        ripple: (0, a.A)(t.ripple, y.ripple),
                        rippleVisible: (0, a.A)(
                          t.rippleVisible,
                          y.rippleVisible
                        ),
                        ripplePulsate: (0, a.A)(
                          t.ripplePulsate,
                          y.ripplePulsate
                        ),
                        child: (0, a.A)(t.child, y.child),
                        childLeaving: (0, a.A)(t.childLeaving, y.childLeaving),
                        childPulsate: (0, a.A)(t.childPulsate, y.childPulsate),
                      },
                      timeout: 550,
                      pulsate: n,
                      rippleX: p,
                      rippleY: r,
                      rippleSize: P,
                    },
                    c.current
                  ),
                ]),
                  (c.current += 1),
                  (b.current = i);
              },
              [t]
            ),
            B = r.useCallback(
              function () {
                let e,
                  n,
                  r,
                  a =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : {},
                  t =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : {},
                  P =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : () => {},
                  {
                    pulsate: i = !1,
                    center: o = p || t.pulsate,
                    fakeElement: s = !1,
                  } = t;
                if (
                  (null == a ? void 0 : a.type) === "mousedown" &&
                  f.current
                ) {
                  f.current = !1;
                  return;
                }
                (null == a ? void 0 : a.type) === "touchstart" &&
                  (f.current = !0);
                let l = s ? null : d.current,
                  c = l
                    ? l.getBoundingClientRect()
                    : { width: 0, height: 0, left: 0, top: 0 };
                if (
                  !o &&
                  void 0 !== a &&
                  (0 !== a.clientX || 0 !== a.clientY) &&
                  (a.clientX || a.touches)
                ) {
                  let { clientX: p, clientY: r } =
                    a.touches && a.touches.length > 0 ? a.touches[0] : a;
                  (e = Math.round(p - c.left)), (n = Math.round(r - c.top));
                } else
                  (e = Math.round(c.width / 2)), (n = Math.round(c.height / 2));
                o
                  ? (r = Math.sqrt((2 * c.width ** 2 + c.height ** 2) / 3)) %
                      2 ==
                      0 && (r += 1)
                  : (r = Math.sqrt(
                      (2 * Math.max(Math.abs((l ? l.clientWidth : 0) - e), e) +
                        2) **
                        2 +
                        (2 *
                          Math.max(Math.abs((l ? l.clientHeight : 0) - n), n) +
                          2) **
                          2
                    )),
                  (null == a ? void 0 : a.touches)
                    ? null === u.current &&
                      ((u.current = () => {
                        R({
                          pulsate: i,
                          rippleX: e,
                          rippleY: n,
                          rippleSize: r,
                          cb: P,
                        });
                      }),
                      m.start(80, () => {
                        u.current && (u.current(), (u.current = null));
                      }))
                    : R({
                        pulsate: i,
                        rippleX: e,
                        rippleY: n,
                        rippleSize: r,
                        cb: P,
                      });
              },
              [p, R, m]
            ),
            N = r.useCallback(() => {
              B({}, { pulsate: !0 });
            }, [B]),
            h = r.useCallback(
              (e, n) => {
                if (
                  (m.clear(),
                  (null == e ? void 0 : e.type) === "touchend" && u.current)
                ) {
                  u.current(),
                    (u.current = null),
                    m.start(0, () => {
                      h(e, n);
                    });
                  return;
                }
                (u.current = null),
                  l((e) => (e.length > 0 ? e.slice(1) : e)),
                  (b.current = n);
              },
              [m]
            );
          return (
            r.useImperativeHandle(
              n,
              () => ({ pulsate: N, start: B, stop: h }),
              [N, B, h]
            ),
            (0, Q.jsx)(w, {
              className: (0, a.A)(y.root, t.root, P),
              ref: d,
              ...i,
              children: (0, Q.jsx)(k, {
                component: null,
                exit: !0,
                children: s,
              }),
            })
          );
        });
      var O = p(45879);
      function E(e) {
        return (0, O.Ay)("MuiButtonBase", e);
      }
      let I = (0, q.A)("MuiButtonBase", ["root", "disabled", "focusVisible"]),
        L = (e) => {
          let {
              disabled: n,
              focusVisible: p,
              focusVisibleClassName: r,
              classes: a,
            } = e,
            P = (0, t.A)(
              { root: ["root", n && "disabled", p && "focusVisible"] },
              E,
              a
            );
          return p && r && (P.root += " ".concat(r)), P;
        },
        z = (0, i.Ay)("button", {
          name: "MuiButtonBase",
          slot: "Root",
          overridesResolver: (e, n) => n.root,
        })({
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center",
          position: "relative",
          boxSizing: "border-box",
          WebkitTapHighlightColor: "transparent",
          backgroundColor: "transparent",
          outline: 0,
          border: 0,
          margin: 0,
          borderRadius: 0,
          padding: 0,
          cursor: "pointer",
          userSelect: "none",
          verticalAlign: "middle",
          MozAppearance: "none",
          WebkitAppearance: "none",
          textDecoration: "none",
          color: "inherit",
          "&::-moz-focus-inner": { borderStyle: "none" },
          ["&.".concat(I.disabled)]: {
            pointerEvents: "none",
            cursor: "default",
          },
          "@media print": { colorAdjust: "exact" },
        });
      function T(e, n, p) {
        let r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        return (0, l.A)((a) => (p && p(a), r || e[n](a), !0));
      }
      let _ = r.forwardRef(function (e, n) {
        let p = (0, o.b)({ props: e, name: "MuiButtonBase" }),
          {
            action: t,
            centerRipple: i = !1,
            children: c,
            className: f,
            component: m = "button",
            disabled: u = !1,
            disableRipple: d = !1,
            disableTouchRipple: R = !1,
            focusRipple: B = !1,
            focusVisibleClassName: N,
            LinkComponent: h = "a",
            onBlur: k,
            onClick: g,
            onContextMenu: K,
            onDragLeave: q,
            onFocus: y,
            onFocusVisible: v,
            onKeyDown: D,
            onKeyUp: S,
            onMouseDown: A,
            onMouseLeave: V,
            onMouseUp: G,
            onTouchEnd: C,
            onTouchMove: w,
            onTouchStart: x,
            tabIndex: O = 0,
            TouchRippleProps: E,
            touchRippleRef: I,
            type: _,
            ...F
          } = p,
          j = r.useRef(null),
          W = b.use(),
          H = (0, s.A)(W.ref, I),
          [$, U] = r.useState(!1);
        u && $ && U(!1),
          r.useImperativeHandle(
            t,
            () => ({
              focusVisible: () => {
                U(!0), j.current.focus();
              },
            }),
            []
          );
        let Z = W.shouldMount && !d && !u;
        r.useEffect(() => {
          $ && B && !d && W.pulsate();
        }, [d, B, $, W]);
        let Y = T(W, "start", A, R),
          J = T(W, "stop", K, R),
          X = T(W, "stop", q, R),
          ee = T(W, "stop", G, R),
          en = T(
            W,
            "stop",
            (e) => {
              $ && e.preventDefault(), V && V(e);
            },
            R
          ),
          ep = T(W, "start", x, R),
          er = T(W, "stop", C, R),
          ea = T(W, "stop", w, R),
          et = T(
            W,
            "stop",
            (e) => {
              (0, P.A)(e.target) || U(!1), k && k(e);
            },
            !1
          ),
          eP = (0, l.A)((e) => {
            j.current || (j.current = e.currentTarget),
              (0, P.A)(e.target) && (U(!0), v && v(e)),
              y && y(e);
          }),
          ei = () => {
            let e = j.current;
            return m && "button" !== m && !("A" === e.tagName && e.href);
          },
          eo = (0, l.A)((e) => {
            B &&
              !e.repeat &&
              $ &&
              " " === e.key &&
              W.stop(e, () => {
                W.start(e);
              }),
              e.target === e.currentTarget &&
                ei() &&
                " " === e.key &&
                e.preventDefault(),
              D && D(e),
              e.target === e.currentTarget &&
                ei() &&
                "Enter" === e.key &&
                !u &&
                (e.preventDefault(), g && g(e));
          }),
          es = (0, l.A)((e) => {
            B &&
              " " === e.key &&
              $ &&
              !e.defaultPrevented &&
              W.stop(e, () => {
                W.pulsate(e);
              }),
              S && S(e),
              g &&
                e.target === e.currentTarget &&
                ei() &&
                " " === e.key &&
                !e.defaultPrevented &&
                g(e);
          }),
          el = m;
        "button" === el && (F.href || F.to) && (el = h);
        let ec = {};
        "button" === el
          ? ((ec.type = void 0 === _ ? "button" : _), (ec.disabled = u))
          : (F.href || F.to || (ec.role = "button"),
            u && (ec["aria-disabled"] = u));
        let eb = (0, s.A)(n, j),
          ef = {
            ...p,
            centerRipple: i,
            component: m,
            disabled: u,
            disableRipple: d,
            disableTouchRipple: R,
            focusRipple: B,
            tabIndex: O,
            focusVisible: $,
          },
          em = L(ef);
        return (0, Q.jsxs)(z, {
          as: el,
          className: (0, a.A)(em.root, f),
          ownerState: ef,
          onBlur: et,
          onClick: g,
          onContextMenu: J,
          onFocus: eP,
          onKeyDown: eo,
          onKeyUp: es,
          onMouseDown: Y,
          onMouseLeave: en,
          onMouseUp: ee,
          onDragLeave: X,
          onTouchEnd: er,
          onTouchMove: ea,
          onTouchStart: ep,
          ref: eb,
          tabIndex: u ? -1 : O,
          type: _,
          ...ec,
          ...F,
          children: [c, Z ? (0, Q.jsx)(M, { ref: H, center: i, ...E }) : null],
        });
      });
    },
    68275: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(46871);
      let a = (e) => (0, r.A)(e) && "classes" !== e;
    },
    69135: (e, n, p) => {
      "use strict";
      function r(e, ...n) {
        let p = new URL(`https://mui.com/production-error/?code=${e}`);
        return (
          n.forEach((e) => p.searchParams.append("args[]", e)),
          `Minified MUI error #${e}; visit ${p} for the full message.`
        );
      }
      p.d(n, { A: () => r });
    },
    69241: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = function () {
        for (var e, n, p = 0, r = "", a = arguments.length; p < a; p++)
          (e = arguments[p]) &&
            (n = (function e(n) {
              var p,
                r,
                a = "";
              if ("string" == typeof n || "number" == typeof n) a += n;
              else if ("object" == typeof n) {
                if (Array.isArray(n)) {
                  var t = n.length;
                  for (p = 0; p < t; p++)
                    n[p] && (r = e(n[p])) && (a && (a += " "), (a += r));
                } else for (r in n) n[r] && (a && (a += " "), (a += r));
              }
              return a;
            })(e)) &&
            (r && (r += " "), (r += n));
        return r;
      };
    },
    69390: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => u });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(54773),
        i = p(82987),
        o = p(52196),
        s = p(47951),
        l = p(45879);
      function c(e) {
        return (0, l.Ay)("MuiToolbar", e);
      }
      (0, s.A)("MuiToolbar", ["root", "gutters", "regular", "dense"]);
      var b = p(37876);
      let f = (e) => {
          let { classes: n, disableGutters: p, variant: r } = e;
          return (0, t.A)({ root: ["root", !p && "gutters", r] }, c, n);
        },
        m = (0, P.Ay)("div", {
          name: "MuiToolbar",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [n.root, !p.disableGutters && n.gutters, n[p.variant]];
          },
        })(
          (0, i.A)((e) => {
            let { theme: n } = e;
            return {
              position: "relative",
              display: "flex",
              alignItems: "center",
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disableGutters;
                  },
                  style: {
                    paddingLeft: n.spacing(2),
                    paddingRight: n.spacing(2),
                    [n.breakpoints.up("sm")]: {
                      paddingLeft: n.spacing(3),
                      paddingRight: n.spacing(3),
                    },
                  },
                },
                { props: { variant: "dense" }, style: { minHeight: 48 } },
                { props: { variant: "regular" }, style: n.mixins.toolbar },
              ],
            };
          })
        ),
        u = r.forwardRef(function (e, n) {
          let p = (0, o.b)({ props: e, name: "MuiToolbar" }),
            {
              className: r,
              component: t = "div",
              disableGutters: P = !1,
              variant: i = "regular",
              ...s
            } = p,
            l = { ...p, component: t, disableGutters: P, variant: i },
            c = f(l);
          return (0, b.jsx)(m, {
            as: t,
            className: (0, a.A)(c.root, r),
            ref: n,
            ownerState: l,
            ...s,
          });
        });
    },
    70946: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => K });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(27449),
        i = p(54843),
        o = p(54773),
        s = p(82987),
        l = p(78457),
        c = p(52196),
        b = p(68197),
        f = p(7957),
        m = p(80027),
        u = p(47951),
        d = p(45879);
      function R(e) {
        return (0, d.Ay)("MuiIconButton", e);
      }
      let B = (0, u.A)("MuiIconButton", [
        "root",
        "disabled",
        "colorInherit",
        "colorPrimary",
        "colorSecondary",
        "colorError",
        "colorInfo",
        "colorSuccess",
        "colorWarning",
        "edgeStart",
        "edgeEnd",
        "sizeSmall",
        "sizeMedium",
        "sizeLarge",
        "loading",
        "loadingIndicator",
        "loadingWrapper",
      ]);
      var N = p(37876);
      let h = (e) => {
          let {
              classes: n,
              disabled: p,
              color: r,
              edge: a,
              size: P,
              loading: i,
            } = e,
            o = {
              root: [
                "root",
                i && "loading",
                p && "disabled",
                "default" !== r && "color".concat((0, m.A)(r)),
                a && "edge".concat((0, m.A)(a)),
                "size".concat((0, m.A)(P)),
              ],
              loadingIndicator: ["loadingIndicator"],
              loadingWrapper: ["loadingWrapper"],
            };
          return (0, t.A)(o, R, n);
        },
        k = (0, o.Ay)(b.A, {
          name: "MuiIconButton",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              p.loading && n.loading,
              "default" !== p.color && n["color".concat((0, m.A)(p.color))],
              p.edge && n["edge".concat((0, m.A)(p.edge))],
              n["size".concat((0, m.A)(p.size))],
            ];
          },
        })(
          (0, s.A)((e) => {
            let { theme: n } = e;
            return {
              textAlign: "center",
              flex: "0 0 auto",
              fontSize: n.typography.pxToRem(24),
              padding: 8,
              borderRadius: "50%",
              color: (n.vars || n).palette.action.active,
              transition: n.transitions.create("background-color", {
                duration: n.transitions.duration.shortest,
              }),
              variants: [
                {
                  props: (e) => !e.disableRipple,
                  style: {
                    "--IconButton-hoverBg": n.vars
                      ? "rgba("
                          .concat(n.vars.palette.action.activeChannel, " / ")
                          .concat(n.vars.palette.action.hoverOpacity, ")")
                      : (0, i.X4)(
                          n.palette.action.active,
                          n.palette.action.hoverOpacity
                        ),
                    "&:hover": {
                      backgroundColor: "var(--IconButton-hoverBg)",
                      "@media (hover: none)": {
                        backgroundColor: "transparent",
                      },
                    },
                  },
                },
                { props: { edge: "start" }, style: { marginLeft: -12 } },
                {
                  props: { edge: "start", size: "small" },
                  style: { marginLeft: -3 },
                },
                { props: { edge: "end" }, style: { marginRight: -12 } },
                {
                  props: { edge: "end", size: "small" },
                  style: { marginRight: -3 },
                },
              ],
            };
          }),
          (0, s.A)((e) => {
            let { theme: n } = e;
            return {
              variants: [
                { props: { color: "inherit" }, style: { color: "inherit" } },
                ...Object.entries(n.palette)
                  .filter((0, l.A)())
                  .map((e) => {
                    let [p] = e;
                    return {
                      props: { color: p },
                      style: { color: (n.vars || n).palette[p].main },
                    };
                  }),
                ...Object.entries(n.palette)
                  .filter((0, l.A)())
                  .map((e) => {
                    let [p] = e;
                    return {
                      props: { color: p },
                      style: {
                        "--IconButton-hoverBg": n.vars
                          ? "rgba("
                              .concat(
                                (n.vars || n).palette[p].mainChannel,
                                " / "
                              )
                              .concat(n.vars.palette.action.hoverOpacity, ")")
                          : (0, i.X4)(
                              (n.vars || n).palette[p].main,
                              n.palette.action.hoverOpacity
                            ),
                      },
                    };
                  }),
                {
                  props: { size: "small" },
                  style: { padding: 5, fontSize: n.typography.pxToRem(18) },
                },
                {
                  props: { size: "large" },
                  style: { padding: 12, fontSize: n.typography.pxToRem(28) },
                },
              ],
              ["&.".concat(B.disabled)]: {
                backgroundColor: "transparent",
                color: (n.vars || n).palette.action.disabled,
              },
              ["&.".concat(B.loading)]: { color: "transparent" },
            };
          })
        ),
        g = (0, o.Ay)("span", {
          name: "MuiIconButton",
          slot: "LoadingIndicator",
          overridesResolver: (e, n) => n.loadingIndicator,
        })((e) => {
          let { theme: n } = e;
          return {
            display: "none",
            position: "absolute",
            visibility: "visible",
            top: "50%",
            left: "50%",
            transform: "translate(-50%, -50%)",
            color: (n.vars || n).palette.action.disabled,
            variants: [{ props: { loading: !0 }, style: { display: "flex" } }],
          };
        }),
        K = r.forwardRef(function (e, n) {
          let p = (0, c.b)({ props: e, name: "MuiIconButton" }),
            {
              edge: r = !1,
              children: t,
              className: i,
              color: o = "default",
              disabled: s = !1,
              disableFocusRipple: l = !1,
              size: b = "medium",
              id: m,
              loading: u = null,
              loadingIndicator: d,
              ...R
            } = p,
            B = (0, P.A)(m),
            K =
              null != d
                ? d
                : (0, N.jsx)(f.A, {
                    "aria-labelledby": B,
                    color: "inherit",
                    size: 16,
                  }),
            Q = {
              ...p,
              edge: r,
              color: o,
              disabled: s,
              disableFocusRipple: l,
              loading: u,
              loadingIndicator: K,
              size: b,
            },
            q = h(Q);
          return (0, N.jsxs)(k, {
            id: u ? B : m,
            className: (0, a.A)(q.root, i),
            centerRipple: !0,
            focusRipple: !l,
            disabled: s || u,
            ref: n,
            ...R,
            ownerState: Q,
            children: [
              "boolean" == typeof u &&
                (0, N.jsx)("span", {
                  className: q.loadingWrapper,
                  style: { display: "contents" },
                  children: (0, N.jsx)(g, {
                    className: q.loadingIndicator,
                    ownerState: Q,
                    children: u && K,
                  }),
                }),
              t,
            ],
          });
        });
    },
    72311: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(14232);
      function a(e, n) {
        return (
          r.isValidElement(e) &&
          -1 !== n.indexOf(e.type.muiName ?? e.type?._payload?.value?.muiName)
        );
      }
    },
    72484: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => s });
      var r = p(14232),
        a = p(98477),
        t = p(61637),
        P = p(43165),
        i = p(99659),
        o = p(22775);
      let s = r.forwardRef(function (e, n) {
        let { children: p, container: s, disablePortal: l = !1 } = e,
          [c, b] = r.useState(null),
          f = (0, t.A)(r.isValidElement(p) ? (0, P.A)(p) : null, n);
        return ((0, i.A)(() => {
          if (!l) b(("function" == typeof s ? s() : s) || document.body);
        }, [s, l]),
        (0, i.A)(() => {
          if (c && !l)
            return (
              (0, o.A)(n, c),
              () => {
                (0, o.A)(n, null);
              }
            );
        }, [n, c, l]),
        l)
          ? r.isValidElement(p)
            ? r.cloneElement(p, { ref: f })
            : p
          : c
            ? a.createPortal(p, c)
            : c;
      });
    },
    72487: (e, n, p) => {
      "use strict";
      p.d(n, {
        EU: () => s,
        NI: () => o,
        iZ: () => c,
        kW: () => b,
        vf: () => l,
        zu: () => t,
      });
      var r = p(12535),
        a = p(903);
      let t = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
        P = {
          keys: ["xs", "sm", "md", "lg", "xl"],
          up: (e) => `@media (min-width:${t[e]}px)`,
        },
        i = {
          containerQueries: (e) => ({
            up: (n) => {
              let p = "number" == typeof n ? n : t[n] || n;
              return (
                "number" == typeof p && (p = `${p}px`),
                e
                  ? `@container ${e} (min-width:${p})`
                  : `@container (min-width:${p})`
              );
            },
          }),
        };
      function o(e, n, p) {
        let r = e.theme || {};
        if (Array.isArray(n)) {
          let e = r.breakpoints || P;
          return n.reduce((r, a, t) => ((r[e.up(e.keys[t])] = p(n[t])), r), {});
        }
        if ("object" == typeof n) {
          let e = r.breakpoints || P;
          return Object.keys(n).reduce((P, o) => {
            if ((0, a.ob)(e.keys, o)) {
              let e = (0, a.CT)(r.containerQueries ? r : i, o);
              e && (P[e] = p(n[o], o));
            } else
              Object.keys(e.values || t).includes(o)
                ? (P[e.up(o)] = p(n[o], o))
                : (P[o] = n[o]);
            return P;
          }, {});
        }
        return p(n);
      }
      function s(e = {}) {
        return e.keys?.reduce((n, p) => ((n[e.up(p)] = {}), n), {}) || {};
      }
      function l(e, n) {
        return e.reduce((e, n) => {
          let p = e[n];
          return (p && 0 !== Object.keys(p).length) || delete e[n], e;
        }, n);
      }
      function c(e, ...n) {
        let p = s(e),
          a = [p, ...n].reduce((e, n) => (0, r.A)(e, n), {});
        return l(Object.keys(p), a);
      }
      function b({ values: e, breakpoints: n, base: p }) {
        let r;
        let a = Object.keys(
          p ||
            (function (e, n) {
              if ("object" != typeof e) return {};
              let p = {},
                r = Object.keys(n);
              return (
                Array.isArray(e)
                  ? r.forEach((n, r) => {
                      r < e.length && (p[n] = !0);
                    })
                  : r.forEach((n) => {
                      null != e[n] && (p[n] = !0);
                    }),
                p
              );
            })(e, n)
        );
        return 0 === a.length
          ? e
          : a.reduce(
              (n, p, a) => (
                Array.isArray(e)
                  ? ((n[p] = null != e[a] ? e[a] : e[r]), (r = a))
                  : "object" == typeof e
                    ? ((n[p] = null != e[p] ? e[p] : e[r]), (r = p))
                    : (n[p] = e),
                n
              ),
              {}
            );
      }
    },
    73004: (e, n, p) => {
      "use strict";
      p.d(n, { g: () => a, h: () => t });
      var r = p(26611);
      let a = (e) => t(e.lines[0]),
        t = (e) => {
          if (void 0 !== e.cp) return i(e.cp);
          if (void 0 !== e.mate) return P(e.mate);
          throw Error("No cp or mate in line");
        },
        P = (e) => i((1 / 0) * e),
        i = (e) =>
          50 +
          50 * (2 / (1 + Math.exp(-0.00368208 * (0, r.Go)(e, -1e3, 1e3))) - 1);
    },
    73194: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(72311).A;
    },
    73898: () => {},
    74073: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t });
      var r = p(14232),
        a = p(55509);
      function t() {
        return r.useContext(a.A);
      }
    },
    74253: (e, n, p) => {
      "use strict";
      p.d(n, { Ay: () => d });
      var r = p(40670),
        a = p(16724),
        t = p(14232),
        P = p(98477);
      let i = { disabled: !1 };
      var o = p(4073),
        s = "unmounted",
        l = "exited",
        c = "entering",
        b = "entered",
        f = "exiting",
        m = (function (e) {
          function n(n, p) {
            var r,
              a = e.call(this, n, p) || this,
              t = p && !p.isMounting ? n.enter : n.appear;
            return (
              (a.appearStatus = null),
              n.in
                ? t
                  ? ((r = l), (a.appearStatus = c))
                  : (r = b)
                : (r = n.unmountOnExit || n.mountOnEnter ? s : l),
              (a.state = { status: r }),
              (a.nextCallback = null),
              a
            );
          }
          (0, a.A)(n, e),
            (n.getDerivedStateFromProps = function (e, n) {
              return e.in && n.status === s ? { status: l } : null;
            });
          var p = n.prototype;
          return (
            (p.componentDidMount = function () {
              this.updateStatus(!0, this.appearStatus);
            }),
            (p.componentDidUpdate = function (e) {
              var n = null;
              if (e !== this.props) {
                var p = this.state.status;
                this.props.in
                  ? p !== c && p !== b && (n = c)
                  : (p === c || p === b) && (n = f);
              }
              this.updateStatus(!1, n);
            }),
            (p.componentWillUnmount = function () {
              this.cancelNextCallback();
            }),
            (p.getTimeouts = function () {
              var e,
                n,
                p,
                r = this.props.timeout;
              return (
                (e = n = p = r),
                null != r &&
                  "number" != typeof r &&
                  ((e = r.exit),
                  (n = r.enter),
                  (p = void 0 !== r.appear ? r.appear : n)),
                { exit: e, enter: n, appear: p }
              );
            }),
            (p.updateStatus = function (e, n) {
              if ((void 0 === e && (e = !1), null !== n)) {
                if ((this.cancelNextCallback(), n === c)) {
                  if (this.props.unmountOnExit || this.props.mountOnEnter) {
                    var p = this.props.nodeRef
                      ? this.props.nodeRef.current
                      : P.findDOMNode(this);
                    p && p.scrollTop;
                  }
                  this.performEnter(e);
                } else this.performExit();
              } else
                this.props.unmountOnExit &&
                  this.state.status === l &&
                  this.setState({ status: s });
            }),
            (p.performEnter = function (e) {
              var n = this,
                p = this.props.enter,
                r = this.context ? this.context.isMounting : e,
                a = this.props.nodeRef ? [r] : [P.findDOMNode(this), r],
                t = a[0],
                o = a[1],
                s = this.getTimeouts(),
                l = r ? s.appear : s.enter;
              if ((!e && !p) || i.disabled) {
                this.safeSetState({ status: b }, function () {
                  n.props.onEntered(t);
                });
                return;
              }
              this.props.onEnter(t, o),
                this.safeSetState({ status: c }, function () {
                  n.props.onEntering(t, o),
                    n.onTransitionEnd(l, function () {
                      n.safeSetState({ status: b }, function () {
                        n.props.onEntered(t, o);
                      });
                    });
                });
            }),
            (p.performExit = function () {
              var e = this,
                n = this.props.exit,
                p = this.getTimeouts(),
                r = this.props.nodeRef ? void 0 : P.findDOMNode(this);
              if (!n || i.disabled) {
                this.safeSetState({ status: l }, function () {
                  e.props.onExited(r);
                });
                return;
              }
              this.props.onExit(r),
                this.safeSetState({ status: f }, function () {
                  e.props.onExiting(r),
                    e.onTransitionEnd(p.exit, function () {
                      e.safeSetState({ status: l }, function () {
                        e.props.onExited(r);
                      });
                    });
                });
            }),
            (p.cancelNextCallback = function () {
              null !== this.nextCallback &&
                (this.nextCallback.cancel(), (this.nextCallback = null));
            }),
            (p.safeSetState = function (e, n) {
              (n = this.setNextCallback(n)), this.setState(e, n);
            }),
            (p.setNextCallback = function (e) {
              var n = this,
                p = !0;
              return (
                (this.nextCallback = function (r) {
                  p && ((p = !1), (n.nextCallback = null), e(r));
                }),
                (this.nextCallback.cancel = function () {
                  p = !1;
                }),
                this.nextCallback
              );
            }),
            (p.onTransitionEnd = function (e, n) {
              this.setNextCallback(n);
              var p = this.props.nodeRef
                  ? this.props.nodeRef.current
                  : P.findDOMNode(this),
                r = null == e && !this.props.addEndListener;
              if (!p || r) {
                setTimeout(this.nextCallback, 0);
                return;
              }
              if (this.props.addEndListener) {
                var a = this.props.nodeRef
                    ? [this.nextCallback]
                    : [p, this.nextCallback],
                  t = a[0],
                  i = a[1];
                this.props.addEndListener(t, i);
              }
              null != e && setTimeout(this.nextCallback, e);
            }),
            (p.render = function () {
              var e = this.state.status;
              if (e === s) return null;
              var n = this.props,
                p = n.children,
                a =
                  (n.in,
                  n.mountOnEnter,
                  n.unmountOnExit,
                  n.appear,
                  n.enter,
                  n.exit,
                  n.timeout,
                  n.addEndListener,
                  n.onEnter,
                  n.onEntering,
                  n.onEntered,
                  n.onExit,
                  n.onExiting,
                  n.onExited,
                  n.nodeRef,
                  (0, r.A)(n, [
                    "children",
                    "in",
                    "mountOnEnter",
                    "unmountOnExit",
                    "appear",
                    "enter",
                    "exit",
                    "timeout",
                    "addEndListener",
                    "onEnter",
                    "onEntering",
                    "onEntered",
                    "onExit",
                    "onExiting",
                    "onExited",
                    "nodeRef",
                  ]));
              return t.createElement(
                o.A.Provider,
                { value: null },
                "function" == typeof p
                  ? p(e, a)
                  : t.cloneElement(t.Children.only(p), a)
              );
            }),
            n
          );
        })(t.Component);
      function u() {}
      (m.contextType = o.A),
        (m.propTypes = {}),
        (m.defaultProps = {
          in: !1,
          mountOnEnter: !1,
          unmountOnExit: !1,
          appear: !1,
          enter: !0,
          exit: !0,
          onEnter: u,
          onEntering: u,
          onEntered: u,
          onExit: u,
          onExiting: u,
          onExited: u,
        }),
        (m.UNMOUNTED = s),
        (m.EXITED = l),
        (m.ENTERING = c),
        (m.ENTERED = b),
        (m.EXITING = f);
      let d = m;
    },
    74615: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => l });
      var r = p(93725),
        a = p(45519),
        t = p(50327),
        P = p(72487),
        i = p(903),
        o = p(31061);
      let s = (function () {
        function e(e, n, p, a) {
          let i = { [e]: n, theme: p },
            o = a[e];
          if (!o) return { [e]: n };
          let { cssProperty: s = e, themeKey: l, transform: c, style: b } = o;
          if (null == n) return null;
          if ("typography" === l && "inherit" === n) return { [e]: n };
          let f = (0, t.Yn)(p, l) || {};
          return b
            ? b(i)
            : (0, P.NI)(i, n, (n) => {
                let p = (0, t.BO)(f, c, n);
                return (n === p &&
                  "string" == typeof n &&
                  (p = (0, t.BO)(
                    f,
                    c,
                    `${e}${"default" === n ? "" : (0, r.A)(n)}`,
                    n
                  )),
                !1 === s)
                  ? p
                  : { [s]: p };
              });
        }
        return function n(p) {
          let { sx: r, theme: t = {} } = p || {};
          if (!r) return null;
          let s = t.unstable_sxConfig ?? o.A;
          function l(p) {
            let r = p;
            if ("function" == typeof p) r = p(t);
            else if ("object" != typeof p) return p;
            if (!r) return null;
            let o = (0, P.EU)(t.breakpoints),
              l = Object.keys(o),
              c = o;
            return (
              Object.keys(r).forEach((p) => {
                var i;
                let o = "function" == typeof (i = r[p]) ? i(t) : i;
                if (null != o) {
                  if ("object" == typeof o) {
                    if (s[p]) c = (0, a.A)(c, e(p, o, t, s));
                    else {
                      let e = (0, P.NI)({ theme: t }, o, (e) => ({ [p]: e }));
                      (function (...e) {
                        let n = new Set(
                          e.reduce((e, n) => e.concat(Object.keys(n)), [])
                        );
                        return e.every((e) => n.size === Object.keys(e).length);
                      })(e, o)
                        ? (c[p] = n({ sx: o, theme: t }))
                        : (c = (0, a.A)(c, e));
                    }
                  } else c = (0, a.A)(c, e(p, o, t, s));
                }
              }),
              (0, i._S)(t, (0, P.vf)(l, c))
            );
          }
          return Array.isArray(r) ? r.map(l) : l(r);
        };
      })();
      s.filterProps = ["sx"];
      let l = s;
    },
    74849: (e, n, p) => {
      "use strict";
      function r(e, n, p) {
        var r = "";
        return (
          p.split(" ").forEach(function (p) {
            void 0 !== e[p] ? n.push(e[p] + ";") : p && (r += p + " ");
          }),
          r
        );
      }
      p.d(n, { Rk: () => r, SF: () => a, sk: () => t });
      var a = function (e, n, p) {
          var r = e.key + "-" + n.name;
          !1 === p &&
            void 0 === e.registered[r] &&
            (e.registered[r] = n.styles);
        },
        t = function (e, n, p) {
          a(e, n, p);
          var r = e.key + "-" + n.name;
          if (void 0 === e.inserted[n.name]) {
            var t = n;
            do e.insert(n === t ? "." + r : "", t, e.sheet, !0), (t = t.next);
            while (void 0 !== t);
          }
        };
    },
    76975: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t });
      var r = p(14232),
        a = p(21398);
      let t = function (e = null) {
        let n = r.useContext(a.T);
        return n && 0 !== Object.keys(n).length ? n : e;
      };
    },
    77018: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => N });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(37551),
        i = p(54773),
        o = p(82987),
        s = p(52196),
        l = p(80027),
        c = p(78457),
        b = p(54638),
        f = p(37876);
      let m = {
          primary: !0,
          secondary: !0,
          error: !0,
          info: !0,
          success: !0,
          warning: !0,
          textPrimary: !0,
          textSecondary: !0,
          textDisabled: !0,
        },
        u = (0, P.Dg)(),
        d = (e) => {
          let {
              align: n,
              gutterBottom: p,
              noWrap: r,
              paragraph: a,
              variant: P,
              classes: i,
            } = e,
            o = {
              root: [
                "root",
                P,
                "inherit" !== e.align && "align".concat((0, l.A)(n)),
                p && "gutterBottom",
                r && "noWrap",
                a && "paragraph",
              ],
            };
          return (0, t.A)(o, b.y, i);
        },
        R = (0, i.Ay)("span", {
          name: "MuiTypography",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              p.variant && n[p.variant],
              "inherit" !== p.align && n["align".concat((0, l.A)(p.align))],
              p.noWrap && n.noWrap,
              p.gutterBottom && n.gutterBottom,
              p.paragraph && n.paragraph,
            ];
          },
        })(
          (0, o.A)((e) => {
            var n;
            let { theme: p } = e;
            return {
              margin: 0,
              variants: [
                {
                  props: { variant: "inherit" },
                  style: {
                    font: "inherit",
                    lineHeight: "inherit",
                    letterSpacing: "inherit",
                  },
                },
                ...Object.entries(p.typography)
                  .filter((e) => {
                    let [n, p] = e;
                    return "inherit" !== n && p && "object" == typeof p;
                  })
                  .map((e) => {
                    let [n, p] = e;
                    return { props: { variant: n }, style: p };
                  }),
                ...Object.entries(p.palette)
                  .filter((0, c.A)())
                  .map((e) => {
                    let [n] = e;
                    return {
                      props: { color: n },
                      style: { color: (p.vars || p).palette[n].main },
                    };
                  }),
                ...Object.entries(
                  (null === (n = p.palette) || void 0 === n
                    ? void 0
                    : n.text) || {}
                )
                  .filter((e) => {
                    let [, n] = e;
                    return "string" == typeof n;
                  })
                  .map((e) => {
                    let [n] = e;
                    return {
                      props: { color: "text".concat((0, l.A)(n)) },
                      style: { color: (p.vars || p).palette.text[n] },
                    };
                  }),
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return "inherit" !== n.align;
                  },
                  style: { textAlign: "var(--Typography-textAlign)" },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.noWrap;
                  },
                  style: {
                    overflow: "hidden",
                    textOverflow: "ellipsis",
                    whiteSpace: "nowrap",
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.gutterBottom;
                  },
                  style: { marginBottom: "0.35em" },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.paragraph;
                  },
                  style: { marginBottom: 16 },
                },
              ],
            };
          })
        ),
        B = {
          h1: "h1",
          h2: "h2",
          h3: "h3",
          h4: "h4",
          h5: "h5",
          h6: "h6",
          subtitle1: "h6",
          subtitle2: "h6",
          body1: "p",
          body2: "p",
          inherit: "p",
        },
        N = r.forwardRef(function (e, n) {
          let { color: p, ...r } = (0, s.b)({
              props: e,
              name: "MuiTypography",
            }),
            t = !m[p],
            P = u({ ...r, ...(t && { color: p }) }),
            {
              align: i = "inherit",
              className: o,
              component: l,
              gutterBottom: c = !1,
              noWrap: b = !1,
              paragraph: N = !1,
              variant: h = "body1",
              variantMapping: k = B,
              ...g
            } = P,
            K = {
              ...P,
              align: i,
              color: p,
              className: o,
              component: l,
              gutterBottom: c,
              noWrap: b,
              paragraph: N,
              variant: h,
              variantMapping: k,
            },
            Q = l || (N ? "p" : k[h] || B[h]) || "span",
            q = d(K);
          return (0, f.jsx)(R, {
            as: Q,
            ref: n,
            className: (0, a.A)(q.root, o),
            ...g,
            ownerState: K,
            style: {
              ...("inherit" !== i && { "--Typography-textAlign": i }),
              ...g.style,
            },
          });
        });
    },
    77935: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => C });
      var r,
        a = p(14232),
        t = p(69241),
        P = p(4697),
        i = p(53855),
        o = p(54773),
        s = p(52196),
        l = p(36850),
        c = p(21998),
        b = p(83290),
        f = p(90405),
        m = p(88713),
        u = p(27367),
        d = p(74073),
        R = p(82987),
        B = p(80027),
        N = p(47951),
        h = p(45879);
      function k(e) {
        return (0, h.Ay)("MuiFormHelperText", e);
      }
      let g = (0, N.A)("MuiFormHelperText", [
        "root",
        "error",
        "disabled",
        "sizeSmall",
        "sizeMedium",
        "contained",
        "focused",
        "filled",
        "required",
      ]);
      var K = p(37876);
      let Q = (e) => {
          let {
              classes: n,
              contained: p,
              size: r,
              disabled: a,
              error: t,
              filled: i,
              focused: o,
              required: s,
            } = e,
            l = {
              root: [
                "root",
                a && "disabled",
                t && "error",
                r && "size".concat((0, B.A)(r)),
                p && "contained",
                o && "focused",
                i && "filled",
                s && "required",
              ],
            };
          return (0, P.A)(l, k, n);
        },
        q = (0, o.Ay)("p", {
          name: "MuiFormHelperText",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              p.size && n["size".concat((0, B.A)(p.size))],
              p.contained && n.contained,
              p.filled && n.filled,
            ];
          },
        })(
          (0, R.A)((e) => {
            let { theme: n } = e;
            return {
              color: (n.vars || n).palette.text.secondary,
              ...n.typography.caption,
              textAlign: "left",
              marginTop: 3,
              marginRight: 0,
              marginBottom: 0,
              marginLeft: 0,
              ["&.".concat(g.disabled)]: {
                color: (n.vars || n).palette.text.disabled,
              },
              ["&.".concat(g.error)]: {
                color: (n.vars || n).palette.error.main,
              },
              variants: [
                { props: { size: "small" }, style: { marginTop: 4 } },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.contained;
                  },
                  style: { marginLeft: 14, marginRight: 14 },
                },
              ],
            };
          })
        ),
        y = a.forwardRef(function (e, n) {
          let p = (0, s.b)({ props: e, name: "MuiFormHelperText" }),
            {
              children: a,
              className: P,
              component: i = "p",
              disabled: o,
              error: l,
              filled: c,
              focused: b,
              margin: f,
              required: m,
              variant: R,
              ...B
            } = p,
            N = (0, d.A)(),
            h = (0, u.A)({
              props: p,
              muiFormControl: N,
              states: [
                "variant",
                "size",
                "disabled",
                "error",
                "filled",
                "focused",
                "required",
              ],
            }),
            k = {
              ...p,
              component: i,
              contained: "filled" === h.variant || "outlined" === h.variant,
              variant: h.variant,
              size: h.size,
              disabled: h.disabled,
              error: h.error,
              filled: h.filled,
              focused: h.focused,
              required: h.required,
            };
          delete k.ownerState;
          let g = Q(k);
          return (0, K.jsx)(q, {
            as: i,
            className: (0, t.A)(g.root, P),
            ref: n,
            ...B,
            ownerState: k,
            children:
              " " === a
                ? r ||
                  (r = (0, K.jsx)("span", {
                    className: "notranslate",
                    "aria-hidden": !0,
                    children: "​",
                  }))
                : a,
          });
        });
      var v = p(35779);
      function D(e) {
        return (0, h.Ay)("MuiTextField", e);
      }
      (0, N.A)("MuiTextField", ["root"]);
      var S = p(67360);
      let A = { standard: l.A, filled: c.A, outlined: b.A },
        V = (e) => {
          let { classes: n } = e;
          return (0, P.A)({ root: ["root"] }, D, n);
        },
        G = (0, o.Ay)(m.A, {
          name: "MuiTextField",
          slot: "Root",
          overridesResolver: (e, n) => n.root,
        })({}),
        C = a.forwardRef(function (e, n) {
          let p = (0, s.b)({ props: e, name: "MuiTextField" }),
            {
              autoComplete: r,
              autoFocus: a = !1,
              children: P,
              className: o,
              color: l = "primary",
              defaultValue: c,
              disabled: b = !1,
              error: m = !1,
              FormHelperTextProps: u,
              fullWidth: d = !1,
              helperText: R,
              id: B,
              InputLabelProps: N,
              inputProps: h,
              InputProps: k,
              inputRef: g,
              label: Q,
              maxRows: q,
              minRows: D,
              multiline: C = !1,
              name: w,
              onBlur: x,
              onChange: M,
              onFocus: O,
              placeholder: E,
              required: I = !1,
              rows: L,
              select: z = !1,
              SelectProps: T,
              slots: _ = {},
              slotProps: F = {},
              type: j,
              value: W,
              variant: H = "outlined",
              ...$
            } = p,
            U = {
              ...p,
              autoFocus: a,
              color: l,
              disabled: b,
              error: m,
              fullWidth: d,
              multiline: C,
              required: I,
              select: z,
              variant: H,
            },
            Z = V(U),
            Y = (0, i.A)(B),
            J = R && Y ? "".concat(Y, "-helper-text") : void 0,
            X = Q && Y ? "".concat(Y, "-label") : void 0,
            ee = A[H],
            en = {
              slots: _,
              slotProps: {
                input: k,
                inputLabel: N,
                htmlInput: h,
                formHelperText: u,
                select: T,
                ...F,
              },
            },
            ep = {},
            er = en.slotProps.inputLabel;
          "outlined" === H &&
            (er && void 0 !== er.shrink && (ep.notched = er.shrink),
            (ep.label = Q)),
            z &&
              ((T && T.native) || (ep.id = void 0),
              (ep["aria-describedby"] = void 0));
          let [ea, et] = (0, S.A)("root", {
              elementType: G,
              shouldForwardComponentProp: !0,
              externalForwardedProps: { ...en, ...$ },
              ownerState: U,
              className: (0, t.A)(Z.root, o),
              ref: n,
              additionalProps: {
                disabled: b,
                error: m,
                fullWidth: d,
                required: I,
                color: l,
                variant: H,
              },
            }),
            [eP, ei] = (0, S.A)("input", {
              elementType: ee,
              externalForwardedProps: en,
              additionalProps: ep,
              ownerState: U,
            }),
            [eo, es] = (0, S.A)("inputLabel", {
              elementType: f.A,
              externalForwardedProps: en,
              ownerState: U,
            }),
            [el, ec] = (0, S.A)("htmlInput", {
              elementType: "input",
              externalForwardedProps: en,
              ownerState: U,
            }),
            [eb, ef] = (0, S.A)("formHelperText", {
              elementType: y,
              externalForwardedProps: en,
              ownerState: U,
            }),
            [em, eu] = (0, S.A)("select", {
              elementType: v.A,
              externalForwardedProps: en,
              ownerState: U,
            }),
            ed = (0, K.jsx)(eP, {
              "aria-describedby": J,
              autoComplete: r,
              autoFocus: a,
              defaultValue: c,
              fullWidth: d,
              multiline: C,
              name: w,
              rows: L,
              maxRows: q,
              minRows: D,
              type: j,
              value: W,
              id: Y,
              inputRef: g,
              onBlur: x,
              onChange: M,
              onFocus: O,
              placeholder: E,
              inputProps: ec,
              slots: { input: _.htmlInput ? el : void 0 },
              ...ei,
            });
          return (0, K.jsxs)(ea, {
            ...et,
            children: [
              null != Q &&
                "" !== Q &&
                (0, K.jsx)(eo, { htmlFor: Y, id: X, ...es, children: Q }),
              z
                ? (0, K.jsx)(em, {
                    "aria-describedby": J,
                    id: Y,
                    labelId: X,
                    value: W,
                    input: ed,
                    ...eu,
                    children: P,
                  })
                : ed,
              R && (0, K.jsx)(eb, { id: J, ...ef, children: R }),
            ],
          });
        });
    },
    78217: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      let r = (e) => e,
        a = (() => {
          let e = r;
          return {
            configure(n) {
              e = n;
            },
            generate: (n) => e(n),
            reset() {
              e = r;
            },
          };
        })();
    },
    78455: (e, n, p) => {
      "use strict";
      p.d(n, { i: () => i, s: () => P });
      var r,
        a = p(14232),
        t =
          !!(r || (r = p.t(a, 2))).useInsertionEffect &&
          (r || (r = p.t(a, 2))).useInsertionEffect,
        P =
          t ||
          function (e) {
            return e();
          },
        i = t || a.useLayoutEffect;
    },
    78457: (e, n, p) => {
      "use strict";
      function r() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
        return (n) => {
          let [, p] = n;
          return (
            p &&
            (function (e) {
              let n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : [];
              if ("string" != typeof e.main) return !1;
              for (let p of n)
                if (!e.hasOwnProperty(p) || "string" != typeof e[p]) return !1;
              return !0;
            })(p, e)
          );
        };
      }
      p.d(n, { A: () => r });
    },
    78940: (e, n, p) => {
      "use strict";
      function r(e, n, p, r) {
        return !1;
      }
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "getDomainLocale", {
          enumerable: !0,
          get: function () {
            return r;
          },
        }),
        p(87810),
        ("function" == typeof n.default ||
          ("object" == typeof n.default && null !== n.default)) &&
          void 0 === n.default.__esModule &&
          (Object.defineProperty(n.default, "__esModule", { value: !0 }),
          Object.assign(n.default, n),
          (e.exports = n.default));
    },
    79550: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = function (e) {
        return "string" == typeof e;
      };
    },
    80027: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(93725).A;
    },
    80703: (e, n, p) => {
      "use strict";
      p.d(n, { Cp: () => D, Dp: () => A, o: () => S });
      let r = "8.55.0",
        a = globalThis;
      function t(e, n, p) {
        let t = p || a,
          P = (t.__SENTRY__ = t.__SENTRY__ || {}),
          i = (P[r] = P[r] || {});
        return i[e] || (i[e] = n());
      }
      function P(e) {
        let n = (e.__SENTRY__ = e.__SENTRY__ || {});
        return (n.version = n.version || r), (n[r] = n[r] || {});
      }
      function i() {
        return Date.now() / 1e3;
      }
      let o = (function () {
        let { performance: e } = a;
        if (!e || !e.now) return i;
        let n = Date.now() - e.now(),
          p = void 0 == e.timeOrigin ? n : e.timeOrigin;
        return () => (p + e.now()) / 1e3;
      })();
      function s() {
        let e = a.crypto || a.msCrypto,
          n = () => 16 * Math.random();
        try {
          if (e && e.randomUUID) return e.randomUUID().replace(/-/g, "");
          e &&
            e.getRandomValues &&
            (n = () => {
              let n = new Uint8Array(1);
              return e.getRandomValues(n), n[0];
            });
        } catch (e) {}
        return "10000000100040008000100000000000".replace(/[018]/g, (e) =>
          (e ^ ((15 & n()) >> (e / 4))).toString(16)
        );
      }
      (() => {
        let { performance: e } = a;
        if (!e || !e.now) return;
        let n = e.now(),
          p = Date.now(),
          r = e.timeOrigin ? Math.abs(e.timeOrigin + n - p) : 36e5,
          t = e.timing && e.timing.navigationStart,
          P = "number" == typeof t ? Math.abs(t + n - p) : 36e5;
        if (r < 36e5 || P < 36e5) return r <= P ? e.timeOrigin : void 0;
      })();
      let l = Object.prototype.toString,
        c = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__,
        b = ["debug", "info", "warn", "error", "log", "assert", "trace"],
        f = {},
        m = t("logger", function () {
          let e = !1,
            n = {
              enable: () => {
                e = !0;
              },
              disable: () => {
                e = !1;
              },
              isEnabled: () => e,
            };
          return (
            c
              ? b.forEach((p) => {
                  n[p] = (...n) => {
                    e &&
                      (function (e) {
                        if (!("console" in a)) return e();
                        let n = a.console,
                          p = {},
                          r = Object.keys(f);
                        r.forEach((e) => {
                          let r = f[e];
                          (p[e] = n[e]), (n[e] = r);
                        });
                        try {
                          return e();
                        } finally {
                          r.forEach((e) => {
                            n[e] = p[e];
                          });
                        }
                      })(() => {
                        a.console[p](`Sentry Logger [${p}]:`, ...n);
                      });
                  };
                })
              : b.forEach((e) => {
                  n[e] = () => void 0;
                }),
            n
          );
        });
      function u() {
        return s().substring(16);
      }
      let d = "_sentrySpan";
      function R(e, n) {
        n
          ? (function (e, n, p) {
              try {
                Object.defineProperty(e, n, {
                  value: p,
                  writable: !0,
                  configurable: !0,
                });
              } catch (p) {
                c &&
                  m.log(
                    `Failed to add non-enumerable property "${n}" to object`,
                    e
                  );
              }
            })(e, d, n)
          : delete e[d];
      }
      class B {
        constructor() {
          (this._notifyingListeners = !1),
            (this._scopeListeners = []),
            (this._eventProcessors = []),
            (this._breadcrumbs = []),
            (this._attachments = []),
            (this._user = {}),
            (this._tags = {}),
            (this._extra = {}),
            (this._contexts = {}),
            (this._sdkProcessingMetadata = {}),
            (this._propagationContext = { traceId: s(), spanId: u() });
        }
        clone() {
          let e = new B();
          return (
            (e._breadcrumbs = [...this._breadcrumbs]),
            (e._tags = { ...this._tags }),
            (e._extra = { ...this._extra }),
            (e._contexts = { ...this._contexts }),
            this._contexts.flags &&
              (e._contexts.flags = {
                values: [...this._contexts.flags.values],
              }),
            (e._user = this._user),
            (e._level = this._level),
            (e._session = this._session),
            (e._transactionName = this._transactionName),
            (e._fingerprint = this._fingerprint),
            (e._eventProcessors = [...this._eventProcessors]),
            (e._requestSession = this._requestSession),
            (e._attachments = [...this._attachments]),
            (e._sdkProcessingMetadata = { ...this._sdkProcessingMetadata }),
            (e._propagationContext = { ...this._propagationContext }),
            (e._client = this._client),
            (e._lastEventId = this._lastEventId),
            R(e, this[d]),
            e
          );
        }
        setClient(e) {
          this._client = e;
        }
        setLastEventId(e) {
          this._lastEventId = e;
        }
        getClient() {
          return this._client;
        }
        lastEventId() {
          return this._lastEventId;
        }
        addScopeListener(e) {
          this._scopeListeners.push(e);
        }
        addEventProcessor(e) {
          return this._eventProcessors.push(e), this;
        }
        setUser(e) {
          return (
            (this._user = e || {
              email: void 0,
              id: void 0,
              ip_address: void 0,
              username: void 0,
            }),
            this._session &&
              (function (e, n = {}) {
                if (
                  (!n.user ||
                    (!e.ipAddress &&
                      n.user.ip_address &&
                      (e.ipAddress = n.user.ip_address),
                    e.did ||
                      n.did ||
                      (e.did = n.user.id || n.user.email || n.user.username)),
                  (e.timestamp = n.timestamp || o()),
                  n.abnormal_mechanism &&
                    (e.abnormal_mechanism = n.abnormal_mechanism),
                  n.ignoreDuration && (e.ignoreDuration = n.ignoreDuration),
                  n.sid && (e.sid = 32 === n.sid.length ? n.sid : s()),
                  void 0 !== n.init && (e.init = n.init),
                  !e.did && n.did && (e.did = `${n.did}`),
                  "number" == typeof n.started && (e.started = n.started),
                  e.ignoreDuration)
                )
                  e.duration = void 0;
                else if ("number" == typeof n.duration) e.duration = n.duration;
                else {
                  let n = e.timestamp - e.started;
                  e.duration = n >= 0 ? n : 0;
                }
                n.release && (e.release = n.release),
                  n.environment && (e.environment = n.environment),
                  !e.ipAddress && n.ipAddress && (e.ipAddress = n.ipAddress),
                  !e.userAgent && n.userAgent && (e.userAgent = n.userAgent),
                  "number" == typeof n.errors && (e.errors = n.errors),
                  n.status && (e.status = n.status);
              })(this._session, { user: e }),
            this._notifyScopeListeners(),
            this
          );
        }
        getUser() {
          return this._user;
        }
        getRequestSession() {
          return this._requestSession;
        }
        setRequestSession(e) {
          return (this._requestSession = e), this;
        }
        setTags(e) {
          return (
            (this._tags = { ...this._tags, ...e }),
            this._notifyScopeListeners(),
            this
          );
        }
        setTag(e, n) {
          return (
            (this._tags = { ...this._tags, [e]: n }),
            this._notifyScopeListeners(),
            this
          );
        }
        setExtras(e) {
          return (
            (this._extra = { ...this._extra, ...e }),
            this._notifyScopeListeners(),
            this
          );
        }
        setExtra(e, n) {
          return (
            (this._extra = { ...this._extra, [e]: n }),
            this._notifyScopeListeners(),
            this
          );
        }
        setFingerprint(e) {
          return (this._fingerprint = e), this._notifyScopeListeners(), this;
        }
        setLevel(e) {
          return (this._level = e), this._notifyScopeListeners(), this;
        }
        setTransactionName(e) {
          return (
            (this._transactionName = e), this._notifyScopeListeners(), this
          );
        }
        setContext(e, n) {
          return (
            null === n ? delete this._contexts[e] : (this._contexts[e] = n),
            this._notifyScopeListeners(),
            this
          );
        }
        setSession(e) {
          return (
            e ? (this._session = e) : delete this._session,
            this._notifyScopeListeners(),
            this
          );
        }
        getSession() {
          return this._session;
        }
        update(e) {
          var n;
          if (!e) return this;
          let p = "function" == typeof e ? e(this) : e,
            [r, a] =
              p instanceof N
                ? [p.getScopeData(), p.getRequestSession()]
                : ((n = p), "[object Object]" === l.call(n))
                  ? [e, e.requestSession]
                  : [],
            {
              tags: t,
              extra: P,
              user: i,
              contexts: o,
              level: s,
              fingerprint: c = [],
              propagationContext: b,
            } = r || {};
          return (
            (this._tags = { ...this._tags, ...t }),
            (this._extra = { ...this._extra, ...P }),
            (this._contexts = { ...this._contexts, ...o }),
            i && Object.keys(i).length && (this._user = i),
            s && (this._level = s),
            c.length && (this._fingerprint = c),
            b && (this._propagationContext = b),
            a && (this._requestSession = a),
            this
          );
        }
        clear() {
          return (
            (this._breadcrumbs = []),
            (this._tags = {}),
            (this._extra = {}),
            (this._user = {}),
            (this._contexts = {}),
            (this._level = void 0),
            (this._transactionName = void 0),
            (this._fingerprint = void 0),
            (this._requestSession = void 0),
            (this._session = void 0),
            R(this, void 0),
            (this._attachments = []),
            this.setPropagationContext({ traceId: s() }),
            this._notifyScopeListeners(),
            this
          );
        }
        addBreadcrumb(e, n) {
          let p = "number" == typeof n ? n : 100;
          if (p <= 0) return this;
          let r = { timestamp: i(), ...e };
          return (
            this._breadcrumbs.push(r),
            this._breadcrumbs.length > p &&
              ((this._breadcrumbs = this._breadcrumbs.slice(-p)),
              this._client &&
                this._client.recordDroppedEvent("buffer_overflow", "log_item")),
            this._notifyScopeListeners(),
            this
          );
        }
        getLastBreadcrumb() {
          return this._breadcrumbs[this._breadcrumbs.length - 1];
        }
        clearBreadcrumbs() {
          return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
        }
        addAttachment(e) {
          return this._attachments.push(e), this;
        }
        clearAttachments() {
          return (this._attachments = []), this;
        }
        getScopeData() {
          return {
            breadcrumbs: this._breadcrumbs,
            attachments: this._attachments,
            contexts: this._contexts,
            tags: this._tags,
            extra: this._extra,
            user: this._user,
            level: this._level,
            fingerprint: this._fingerprint || [],
            eventProcessors: this._eventProcessors,
            propagationContext: this._propagationContext,
            sdkProcessingMetadata: this._sdkProcessingMetadata,
            transactionName: this._transactionName,
            span: this[d],
          };
        }
        setSDKProcessingMetadata(e) {
          return (
            (this._sdkProcessingMetadata = (function e(n, p, r = 2) {
              if (!p || "object" != typeof p || r <= 0) return p;
              if (n && p && 0 === Object.keys(p).length) return n;
              let a = { ...n };
              for (let n in p)
                Object.prototype.hasOwnProperty.call(p, n) &&
                  (a[n] = e(a[n], p[n], r - 1));
              return a;
            })(this._sdkProcessingMetadata, e, 2)),
            this
          );
        }
        setPropagationContext(e) {
          return (this._propagationContext = { spanId: u(), ...e }), this;
        }
        getPropagationContext() {
          return this._propagationContext;
        }
        captureException(e, n) {
          let p = n && n.event_id ? n.event_id : s();
          if (!this._client)
            return (
              m.warn(
                "No client configured on scope - will not capture exception!"
              ),
              p
            );
          let r = Error("Sentry syntheticException");
          return (
            this._client.captureException(
              e,
              {
                originalException: e,
                syntheticException: r,
                ...n,
                event_id: p,
              },
              this
            ),
            p
          );
        }
        captureMessage(e, n, p) {
          let r = p && p.event_id ? p.event_id : s();
          if (!this._client)
            return (
              m.warn(
                "No client configured on scope - will not capture message!"
              ),
              r
            );
          let a = Error(e);
          return (
            this._client.captureMessage(
              e,
              n,
              {
                originalException: e,
                syntheticException: a,
                ...p,
                event_id: r,
              },
              this
            ),
            r
          );
        }
        captureEvent(e, n) {
          let p = n && n.event_id ? n.event_id : s();
          return (
            this._client
              ? this._client.captureEvent(e, { ...n, event_id: p }, this)
              : m.warn(
                  "No client configured on scope - will not capture event!"
                ),
            p
          );
        }
        _notifyScopeListeners() {
          this._notifyingListeners ||
            ((this._notifyingListeners = !0),
            this._scopeListeners.forEach((e) => {
              e(this);
            }),
            (this._notifyingListeners = !1));
        }
      }
      let N = B;
      class h {
        constructor(e, n) {
          let p, r;
          (p = e || new N()),
            (r = n || new N()),
            (this._stack = [{ scope: p }]),
            (this._isolationScope = r);
        }
        withScope(e) {
          var n;
          let p;
          let r = this._pushScope();
          try {
            p = e(r);
          } catch (e) {
            throw (this._popScope(), e);
          }
          return (n = p) && n.then && "function" == typeof n.then
            ? p.then(
                (e) => (this._popScope(), e),
                (e) => {
                  throw (this._popScope(), e);
                }
              )
            : (this._popScope(), p);
        }
        getClient() {
          return this.getStackTop().client;
        }
        getScope() {
          return this.getStackTop().scope;
        }
        getIsolationScope() {
          return this._isolationScope;
        }
        getStackTop() {
          return this._stack[this._stack.length - 1];
        }
        _pushScope() {
          let e = this.getScope().clone();
          return this._stack.push({ client: this.getClient(), scope: e }), e;
        }
        _popScope() {
          return !(this._stack.length <= 1) && !!this._stack.pop();
        }
      }
      function k() {
        let e = (P(a), a),
          n = P(e);
        return (n.stack =
          n.stack ||
          new h(
            t("defaultCurrentScope", () => new N()),
            t("defaultIsolationScope", () => new N())
          ));
      }
      function g(e) {
        return k().withScope(e);
      }
      function K(e, n) {
        let p = k();
        return p.withScope(() => ((p.getStackTop().scope = e), n(e)));
      }
      function Q(e) {
        return k().withScope(() => e(k().getIsolationScope()));
      }
      function q(e) {
        let n = P(e);
        return n.acs
          ? n.acs
          : {
              withIsolationScope: Q,
              withScope: g,
              withSetScope: K,
              withSetIsolationScope: (e, n) => Q(n),
              getCurrentScope: () => k().getScope(),
              getIsolationScope: () => k().getIsolationScope(),
            };
      }
      function y() {
        return q((P(a), a)).getCurrentScope();
      }
      let v = [
        "user",
        "level",
        "extra",
        "contexts",
        "tags",
        "fingerprint",
        "requestSession",
        "propagationContext",
      ];
      function D(e, n) {
        var p;
        return y().captureException(
          e,
          n
            ? (p = n) instanceof N ||
              "function" == typeof p ||
              Object.keys(n).some((e) => v.includes(e))
              ? { captureContext: n }
              : n
            : void 0
        );
      }
      function S(e, n) {
        q((P(a), a))
          .getIsolationScope()
          .setContext(e, n);
      }
      function A() {
        return !!y().getClient();
      }
    },
    81639: (e, n, p) => {
      "use strict";
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "default", {
          enumerable: !0,
          get: function () {
            return N;
          },
        });
      let r = p(64252),
        a = p(37876),
        t = r._(p(14232)),
        P = p(46658),
        i = p(64232),
        o = p(96225),
        s = p(8407),
        l = p(2696),
        c = p(98265),
        b = p(42343),
        f = p(78940),
        m = p(27469),
        u = p(31026),
        d = new Set();
      function R(e, n, p, r) {
        if ((0, i.isLocalURL)(n)) {
          if (!r.bypassPrefetchedCheck) {
            let a =
              n +
              "%" +
              p +
              "%" +
              (void 0 !== r.locale
                ? r.locale
                : "locale" in e
                  ? e.locale
                  : void 0);
            if (d.has(a)) return;
            d.add(a);
          }
          e.prefetch(n, p, r).catch((e) => {});
        }
      }
      function B(e) {
        return "string" == typeof e ? e : (0, o.formatUrl)(e);
      }
      let N = t.default.forwardRef(function (e, n) {
        let p, r;
        let {
          href: o,
          as: d,
          children: N,
          prefetch: h = null,
          passHref: k,
          replace: g,
          shallow: K,
          scroll: Q,
          locale: q,
          onClick: y,
          onMouseEnter: v,
          onTouchStart: D,
          legacyBehavior: S = !1,
          ...A
        } = e;
        (p = N),
          S &&
            ("string" == typeof p || "number" == typeof p) &&
            (p = (0, a.jsx)("a", { children: p }));
        let V = t.default.useContext(c.RouterContext),
          G = !1 !== h,
          { href: C, as: w } = t.default.useMemo(() => {
            if (!V) {
              let e = B(o);
              return { href: e, as: d ? B(d) : e };
            }
            let [e, n] = (0, P.resolveHref)(V, o, !0);
            return { href: e, as: d ? (0, P.resolveHref)(V, d) : n || e };
          }, [V, o, d]),
          x = t.default.useRef(C),
          M = t.default.useRef(w);
        S && (r = t.default.Children.only(p));
        let O = S ? r && "object" == typeof r && r.ref : n,
          [E, I, L] = (0, b.useIntersection)({ rootMargin: "200px" }),
          z = t.default.useCallback(
            (e) => {
              (M.current !== w || x.current !== C) &&
                (L(), (M.current = w), (x.current = C)),
                E(e);
            },
            [w, C, L, E]
          ),
          T = (0, u.useMergedRef)(z, O);
        t.default.useEffect(() => {
          V && I && G && R(V, C, w, { locale: q });
        }, [w, C, I, q, G, null == V ? void 0 : V.locale, V]);
        let _ = {
          ref: T,
          onClick(e) {
            S || "function" != typeof y || y(e),
              S &&
                r.props &&
                "function" == typeof r.props.onClick &&
                r.props.onClick(e),
              V &&
                !e.defaultPrevented &&
                !(function (e, n, p, r, a, t, P, o) {
                  let { nodeName: s } = e.currentTarget;
                  !(
                    "A" === s.toUpperCase() &&
                    ((function (e) {
                      let n = e.currentTarget.getAttribute("target");
                      return (
                        (n && "_self" !== n) ||
                        e.metaKey ||
                        e.ctrlKey ||
                        e.shiftKey ||
                        e.altKey ||
                        (e.nativeEvent && 2 === e.nativeEvent.which)
                      );
                    })(e) ||
                      !(0, i.isLocalURL)(p))
                  ) &&
                    (e.preventDefault(),
                    (() => {
                      let e = null == P || P;
                      "beforePopState" in n
                        ? n[a ? "replace" : "push"](p, r, {
                            shallow: t,
                            locale: o,
                            scroll: e,
                          })
                        : n[a ? "replace" : "push"](r || p, { scroll: e });
                    })());
                })(e, V, C, w, g, K, Q, q);
          },
          onMouseEnter(e) {
            S || "function" != typeof v || v(e),
              S &&
                r.props &&
                "function" == typeof r.props.onMouseEnter &&
                r.props.onMouseEnter(e),
              V &&
                R(V, C, w, {
                  locale: q,
                  priority: !0,
                  bypassPrefetchedCheck: !0,
                });
          },
          onTouchStart: function (e) {
            S || "function" != typeof D || D(e),
              S &&
                r.props &&
                "function" == typeof r.props.onTouchStart &&
                r.props.onTouchStart(e),
              V &&
                R(V, C, w, {
                  locale: q,
                  priority: !0,
                  bypassPrefetchedCheck: !0,
                });
          },
        };
        if ((0, s.isAbsoluteUrl)(w)) _.href = w;
        else if (!S || k || ("a" === r.type && !("href" in r.props))) {
          let e = void 0 !== q ? q : null == V ? void 0 : V.locale;
          _.href =
            ((null == V ? void 0 : V.isLocaleDomain) &&
              (0, f.getDomainLocale)(
                w,
                e,
                null == V ? void 0 : V.locales,
                null == V ? void 0 : V.domainLocales
              )) ||
            (0, m.addBasePath)(
              (0, l.addLocale)(w, e, null == V ? void 0 : V.defaultLocale)
            );
        }
        return S
          ? t.default.cloneElement(r, _)
          : (0, a.jsx)("a", { ...A, ..._, children: p });
      });
      ("function" == typeof n.default ||
        ("object" == typeof n.default && null !== n.default)) &&
        void 0 === n.default.__esModule &&
        (Object.defineProperty(n.default, "__esModule", { value: !0 }),
        Object.assign(n.default, n),
        (e.exports = n.default));
    },
    81883: (e, n, p) => {
      "use strict";
      function r() {
        let e, n;
        let p = new Promise((p, r) => {
          (e = p), (n = r);
        });
        function r(e) {
          Object.assign(p, e), delete p.resolve, delete p.reject;
        }
        return (
          (p.status = "pending"),
          p.catch(() => {}),
          (p.resolve = (n) => {
            r({ status: "fulfilled", value: n }), e(n);
          }),
          (p.reject = (e) => {
            r({ status: "rejected", reason: e }), n(e);
          }),
          p
        );
      }
      p.d(n, { T: () => r });
    },
    82851: (e, n, p) => {
      "use strict";
      p.d(n, { M: () => a });
      var r = p(14232);
      function a(e, n) {
        let [p, a] = (0, r.useState)(null);
        return (
          (0, r.useEffect)(() => {
            let p = window.localStorage.getItem(e);
            if (p) {
              var r;
              let e = "undefined" === (r = p) ? void 0 : JSON.parse(r);
              if (e) {
                a(e);
                return;
              }
            }
            a(n);
          }, [e, n]),
          [
            p,
            (n) => {
              if (null === p)
                throw Error("setLocalStorage value isn't ready yet");
              let r = n instanceof Function ? n(p) : n;
              window.localStorage.setItem(e, JSON.stringify(r)), a(r);
            },
          ]
        );
      }
    },
    82987: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t });
      var r = p(98140);
      let a = { theme: void 0 },
        t = function (e) {
          let n, p;
          return function (t) {
            let P = n;
            return (
              (void 0 === P || t.theme !== p) &&
                ((a.theme = t.theme), (n = P = (0, r.A)(e(a))), (p = t.theme)),
              P
            );
          };
        };
    },
    83290: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => K });
      var r,
        a = p(14232),
        t = p(4697),
        P = p(68275),
        i = p(54773),
        o = p(82987),
        s = p(37876);
      let l = (0, i.Ay)("fieldset", { shouldForwardProp: P.A })({
          textAlign: "left",
          position: "absolute",
          bottom: 0,
          right: 0,
          top: -5,
          left: 0,
          margin: 0,
          padding: "0 8px",
          pointerEvents: "none",
          borderRadius: "inherit",
          borderStyle: "solid",
          borderWidth: 1,
          overflow: "hidden",
          minWidth: "0%",
        }),
        c = (0, i.Ay)("legend", { shouldForwardProp: P.A })(
          (0, o.A)((e) => {
            let { theme: n } = e;
            return {
              float: "unset",
              width: "auto",
              overflow: "hidden",
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.withLabel;
                  },
                  style: {
                    padding: 0,
                    lineHeight: "11px",
                    transition: n.transitions.create("width", {
                      duration: 150,
                      easing: n.transitions.easing.easeOut,
                    }),
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.withLabel;
                  },
                  style: {
                    display: "block",
                    padding: 0,
                    height: 11,
                    fontSize: "0.75em",
                    visibility: "hidden",
                    maxWidth: 0.01,
                    transition: n.transitions.create("max-width", {
                      duration: 50,
                      easing: n.transitions.easing.easeOut,
                    }),
                    whiteSpace: "nowrap",
                    "& > span": {
                      paddingLeft: 5,
                      paddingRight: 5,
                      display: "inline-block",
                      opacity: 0,
                      visibility: "visible",
                    },
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.withLabel && n.notched;
                  },
                  style: {
                    maxWidth: "100%",
                    transition: n.transitions.create("max-width", {
                      duration: 100,
                      easing: n.transitions.easing.easeOut,
                      delay: 50,
                    }),
                  },
                },
              ],
            };
          })
        );
      var b = p(74073),
        f = p(27367),
        m = p(78457),
        u = p(52196),
        d = p(7674),
        R = p(60129);
      let B = (e) => {
          let { classes: n } = e,
            p = (0, t.A)(
              {
                root: ["root"],
                notchedOutline: ["notchedOutline"],
                input: ["input"],
              },
              d.v,
              n
            );
          return { ...n, ...p };
        },
        N = (0, i.Ay)(R.Sh, {
          shouldForwardProp: (e) => (0, P.A)(e) || "classes" === e,
          name: "MuiOutlinedInput",
          slot: "Root",
          overridesResolver: R.WC,
        })(
          (0, o.A)((e) => {
            let { theme: n } = e,
              p =
                "light" === n.palette.mode
                  ? "rgba(0, 0, 0, 0.23)"
                  : "rgba(255, 255, 255, 0.23)";
            return {
              position: "relative",
              borderRadius: (n.vars || n).shape.borderRadius,
              ["&:hover .".concat(d.A.notchedOutline)]: {
                borderColor: (n.vars || n).palette.text.primary,
              },
              "@media (hover: none)": {
                ["&:hover .".concat(d.A.notchedOutline)]: {
                  borderColor: n.vars
                    ? "rgba(".concat(
                        n.vars.palette.common.onBackgroundChannel,
                        " / 0.23)"
                      )
                    : p,
                },
              },
              ["&.".concat(d.A.focused, " .").concat(d.A.notchedOutline)]: {
                borderWidth: 2,
              },
              variants: [
                ...Object.entries(n.palette)
                  .filter((0, m.A)())
                  .map((e) => {
                    let [p] = e;
                    return {
                      props: { color: p },
                      style: {
                        ["&."
                          .concat(d.A.focused, " .")
                          .concat(d.A.notchedOutline)]: {
                          borderColor: (n.vars || n).palette[p].main,
                        },
                      },
                    };
                  }),
                {
                  props: {},
                  style: {
                    ["&.".concat(d.A.error, " .").concat(d.A.notchedOutline)]: {
                      borderColor: (n.vars || n).palette.error.main,
                    },
                    ["&."
                      .concat(d.A.disabled, " .")
                      .concat(d.A.notchedOutline)]: {
                      borderColor: (n.vars || n).palette.action.disabled,
                    },
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.startAdornment;
                  },
                  style: { paddingLeft: 14 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.endAdornment;
                  },
                  style: { paddingRight: 14 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline;
                  },
                  style: { padding: "16.5px 14px" },
                },
                {
                  props: (e) => {
                    let { ownerState: n, size: p } = e;
                    return n.multiline && "small" === p;
                  },
                  style: { padding: "8.5px 14px" },
                },
              ],
            };
          })
        ),
        h = (0, i.Ay)(
          function (e) {
            let {
                children: n,
                classes: p,
                className: a,
                label: t,
                notched: P,
                ...i
              } = e,
              o = null != t && "" !== t,
              b = { ...e, notched: P, withLabel: o };
            return (0, s.jsx)(l, {
              "aria-hidden": !0,
              className: a,
              ownerState: b,
              ...i,
              children: (0, s.jsx)(c, {
                ownerState: b,
                children: o
                  ? (0, s.jsx)("span", { children: t })
                  : r ||
                    (r = (0, s.jsx)("span", {
                      className: "notranslate",
                      "aria-hidden": !0,
                      children: "​",
                    })),
              }),
            });
          },
          {
            name: "MuiOutlinedInput",
            slot: "NotchedOutline",
            overridesResolver: (e, n) => n.notchedOutline,
          }
        )(
          (0, o.A)((e) => {
            let { theme: n } = e,
              p =
                "light" === n.palette.mode
                  ? "rgba(0, 0, 0, 0.23)"
                  : "rgba(255, 255, 255, 0.23)";
            return {
              borderColor: n.vars
                ? "rgba(".concat(
                    n.vars.palette.common.onBackgroundChannel,
                    " / 0.23)"
                  )
                : p,
            };
          })
        ),
        k = (0, i.Ay)(R.ck, {
          name: "MuiOutlinedInput",
          slot: "Input",
          overridesResolver: R.Oj,
        })(
          (0, o.A)((e) => {
            let { theme: n } = e;
            return {
              padding: "16.5px 14px",
              ...(!n.vars && {
                "&:-webkit-autofill": {
                  WebkitBoxShadow:
                    "light" === n.palette.mode
                      ? null
                      : "0 0 0 100px #266798 inset",
                  WebkitTextFillColor:
                    "light" === n.palette.mode ? null : "#fff",
                  caretColor: "light" === n.palette.mode ? null : "#fff",
                  borderRadius: "inherit",
                },
              }),
              ...(n.vars && {
                "&:-webkit-autofill": { borderRadius: "inherit" },
                [n.getColorSchemeSelector("dark")]: {
                  "&:-webkit-autofill": {
                    WebkitBoxShadow: "0 0 0 100px #266798 inset",
                    WebkitTextFillColor: "#fff",
                    caretColor: "#fff",
                  },
                },
              }),
              variants: [
                { props: { size: "small" }, style: { padding: "8.5px 14px" } },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.multiline;
                  },
                  style: { padding: 0 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.startAdornment;
                  },
                  style: { paddingLeft: 0 },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.endAdornment;
                  },
                  style: { paddingRight: 0 },
                },
              ],
            };
          })
        ),
        g = a.forwardRef(function (e, n) {
          var p, r, t, P, i;
          let o = (0, u.b)({ props: e, name: "MuiOutlinedInput" }),
            {
              components: l = {},
              fullWidth: c = !1,
              inputComponent: m = "input",
              label: d,
              multiline: g = !1,
              notched: K,
              slots: Q = {},
              type: q = "text",
              ...y
            } = o,
            v = B(o),
            D = (0, b.A)(),
            S = (0, f.A)({
              props: o,
              muiFormControl: D,
              states: [
                "color",
                "disabled",
                "error",
                "focused",
                "hiddenLabel",
                "size",
                "required",
              ],
            }),
            A = {
              ...o,
              color: S.color || "primary",
              disabled: S.disabled,
              error: S.error,
              focused: S.focused,
              formControl: D,
              fullWidth: c,
              hiddenLabel: S.hiddenLabel,
              multiline: g,
              size: S.size,
              type: q,
            },
            V =
              null !==
                (t = null !== (r = Q.root) && void 0 !== r ? r : l.Root) &&
              void 0 !== t
                ? t
                : N,
            G =
              null !==
                (i = null !== (P = Q.input) && void 0 !== P ? P : l.Input) &&
              void 0 !== i
                ? i
                : k;
          return (0, s.jsx)(R.Ay, {
            slots: { root: V, input: G },
            renderSuffix: (e) =>
              (0, s.jsx)(h, {
                ownerState: A,
                className: v.notchedOutline,
                label:
                  null != d && "" !== d && S.required
                    ? p ||
                      (p = (0, s.jsxs)(a.Fragment, { children: [d, " ", "*"] }))
                    : d,
                notched:
                  void 0 !== K
                    ? K
                    : !!(e.startAdornment || e.filled || e.focused),
              }),
            fullWidth: c,
            inputComponent: m,
            multiline: g,
            ref: n,
            type: q,
            ...y,
            classes: { ...v, notchedOutline: null },
          });
        });
      g.muiName = "Input";
      let K = g;
    },
    83829: (e, n) => {
      "use strict";
      function p(e) {
        var n;
        let { config: p, src: r, width: a, quality: t } = e,
          P =
            t ||
            (null == (n = p.qualities)
              ? void 0
              : n.reduce((e, n) =>
                  Math.abs(n - 75) < Math.abs(e - 75) ? n : e
                )) ||
            75;
        return (
          p.path +
          "?url=" +
          encodeURIComponent(r) +
          "&w=" +
          a +
          "&q=" +
          P +
          (r.startsWith("/_next/static/media/"), "")
        );
      }
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "default", {
          enumerable: !0,
          get: function () {
            return r;
          },
        }),
        (p.__next_img_default = !0);
      let r = p;
    },
    84335: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(14232);
      function a({ controlled: e, default: n, name: p, state: a = "value" }) {
        let { current: t } = r.useRef(void 0 !== e),
          [P, i] = r.useState(n),
          o = r.useCallback((e) => {
            t || i(e);
          }, []);
        return [t ? e : P, o];
      }
    },
    84915: (e, n, p) => {
      "use strict";
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "getImgProps", {
          enumerable: !0,
          get: function () {
            return i;
          },
        }),
        p(60546);
      let r = p(45284),
        a = p(26904);
      function t(e) {
        return void 0 !== e.default;
      }
      function P(e) {
        return void 0 === e
          ? e
          : "number" == typeof e
            ? Number.isFinite(e)
              ? e
              : NaN
            : "string" == typeof e && /^[0-9]+$/.test(e)
              ? parseInt(e, 10)
              : NaN;
      }
      function i(e, n) {
        var p, i;
        let o,
          s,
          l,
          {
            src: c,
            sizes: b,
            unoptimized: f = !1,
            priority: m = !1,
            loading: u,
            className: d,
            quality: R,
            width: B,
            height: N,
            fill: h = !1,
            style: k,
            overrideSrc: g,
            onLoad: K,
            onLoadingComplete: Q,
            placeholder: q = "empty",
            blurDataURL: y,
            fetchPriority: v,
            decoding: D = "async",
            layout: S,
            objectFit: A,
            objectPosition: V,
            lazyBoundary: G,
            lazyRoot: C,
            ...w
          } = e,
          { imgConf: x, showAltText: M, blurComplete: O, defaultLoader: E } = n,
          I = x || a.imageConfigDefault;
        if ("allSizes" in I) o = I;
        else {
          let e = [...I.deviceSizes, ...I.imageSizes].sort((e, n) => e - n),
            n = I.deviceSizes.sort((e, n) => e - n),
            r = null == (p = I.qualities) ? void 0 : p.sort((e, n) => e - n);
          o = { ...I, allSizes: e, deviceSizes: n, qualities: r };
        }
        if (void 0 === E)
          throw Object.defineProperty(
            Error(
              "images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config"
            ),
            "__NEXT_ERROR_CODE",
            { value: "E163", enumerable: !1, configurable: !0 }
          );
        let L = w.loader || E;
        delete w.loader, delete w.srcSet;
        let z = "__next_img_default" in L;
        if (z) {
          if ("custom" === o.loader)
            throw Object.defineProperty(
              Error(
                'Image with src "' +
                  c +
                  '" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader'
              ),
              "__NEXT_ERROR_CODE",
              { value: "E252", enumerable: !1, configurable: !0 }
            );
        } else {
          let e = L;
          L = (n) => {
            let { config: p, ...r } = n;
            return e(r);
          };
        }
        if (S) {
          "fill" === S && (h = !0);
          let e = {
            intrinsic: { maxWidth: "100%", height: "auto" },
            responsive: { width: "100%", height: "auto" },
          }[S];
          e && (k = { ...k, ...e });
          let n = { responsive: "100vw", fill: "100vw" }[S];
          n && !b && (b = n);
        }
        let T = "",
          _ = P(B),
          F = P(N);
        if ((i = c) && "object" == typeof i && (t(i) || void 0 !== i.src)) {
          let e = t(c) ? c.default : c;
          if (!e.src)
            throw Object.defineProperty(
              Error(
                "An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " +
                  JSON.stringify(e)
              ),
              "__NEXT_ERROR_CODE",
              { value: "E460", enumerable: !1, configurable: !0 }
            );
          if (!e.height || !e.width)
            throw Object.defineProperty(
              Error(
                "An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " +
                  JSON.stringify(e)
              ),
              "__NEXT_ERROR_CODE",
              { value: "E48", enumerable: !1, configurable: !0 }
            );
          if (
            ((s = e.blurWidth),
            (l = e.blurHeight),
            (y = y || e.blurDataURL),
            (T = e.src),
            !h)
          ) {
            if (_ || F) {
              if (_ && !F) {
                let n = _ / e.width;
                F = Math.round(e.height * n);
              } else if (!_ && F) {
                let n = F / e.height;
                _ = Math.round(e.width * n);
              }
            } else (_ = e.width), (F = e.height);
          }
        }
        let j = !m && ("lazy" === u || void 0 === u);
        (!(c = "string" == typeof c ? c : T) ||
          c.startsWith("data:") ||
          c.startsWith("blob:")) &&
          ((f = !0), (j = !1)),
          o.unoptimized && (f = !0),
          z &&
            !o.dangerouslyAllowSVG &&
            c.split("?", 1)[0].endsWith(".svg") &&
            (f = !0);
        let W = P(R),
          H = Object.assign(
            h
              ? {
                  position: "absolute",
                  height: "100%",
                  width: "100%",
                  left: 0,
                  top: 0,
                  right: 0,
                  bottom: 0,
                  objectFit: A,
                  objectPosition: V,
                }
              : {},
            M ? {} : { color: "transparent" },
            k
          ),
          $ =
            O || "empty" === q
              ? null
              : "blur" === q
                ? 'url("data:image/svg+xml;charset=utf-8,' +
                  (0, r.getImageBlurSvg)({
                    widthInt: _,
                    heightInt: F,
                    blurWidth: s,
                    blurHeight: l,
                    blurDataURL: y || "",
                    objectFit: H.objectFit,
                  }) +
                  '")'
                : 'url("' + q + '")',
          U = $
            ? {
                backgroundSize: H.objectFit || "cover",
                backgroundPosition: H.objectPosition || "50% 50%",
                backgroundRepeat: "no-repeat",
                backgroundImage: $,
              }
            : {},
          Z = (function (e) {
            let {
              config: n,
              src: p,
              unoptimized: r,
              width: a,
              quality: t,
              sizes: P,
              loader: i,
            } = e;
            if (r) return { src: p, srcSet: void 0, sizes: void 0 };
            let { widths: o, kind: s } = (function (e, n, p) {
                let { deviceSizes: r, allSizes: a } = e;
                if (p) {
                  let e = /(^|\s)(1?\d?\d)vw/g,
                    n = [];
                  for (let r; (r = e.exec(p)); r) n.push(parseInt(r[2]));
                  if (n.length) {
                    let e = 0.01 * Math.min(...n);
                    return {
                      widths: a.filter((n) => n >= r[0] * e),
                      kind: "w",
                    };
                  }
                  return { widths: a, kind: "w" };
                }
                return "number" != typeof n
                  ? { widths: r, kind: "w" }
                  : {
                      widths: [
                        ...new Set(
                          [n, 2 * n].map(
                            (e) => a.find((n) => n >= e) || a[a.length - 1]
                          )
                        ),
                      ],
                      kind: "x",
                    };
              })(n, a, P),
              l = o.length - 1;
            return {
              sizes: P || "w" !== s ? P : "100vw",
              srcSet: o
                .map(
                  (e, r) =>
                    i({ config: n, src: p, quality: t, width: e }) +
                    " " +
                    ("w" === s ? e : r + 1) +
                    s
                )
                .join(", "),
              src: i({ config: n, src: p, quality: t, width: o[l] }),
            };
          })({
            config: o,
            src: c,
            unoptimized: f,
            width: _,
            quality: W,
            sizes: b,
            loader: L,
          });
        return {
          props: {
            ...w,
            loading: j ? "lazy" : u,
            fetchPriority: v,
            width: _,
            height: F,
            decoding: D,
            className: d,
            style: { ...H, ...U },
            sizes: Z.sizes,
            srcSet: Z.srcSet,
            src: g || Z.src,
          },
          meta: { unoptimized: f, priority: m, placeholder: q, fill: h },
        };
      }
    },
    85278: (e, n, p) => {
      "use strict";
      p.d(n, { Xr: () => f, fp: () => m, md: () => b });
      var r = p(14232),
        a = p(99542);
      let t = (0, r.createContext)(void 0),
        P = (e) => {
          let n = (0, r.useContext)(t);
          return (null == e ? void 0 : e.store) || n || (0, a.zp)();
        },
        i = (e) => "function" == typeof (null == e ? void 0 : e.then),
        o = (e) => {
          (e.status = "pending"),
            e.then(
              (n) => {
                (e.status = "fulfilled"), (e.value = n);
              },
              (n) => {
                (e.status = "rejected"), (e.reason = n);
              }
            );
        },
        s =
          r.use ||
          ((e) => {
            if ("pending" === e.status) throw e;
            if ("fulfilled" === e.status) return e.value;
            if ("rejected" === e.status) throw e.reason;
            throw (o(e), e);
          }),
        l = new WeakMap(),
        c = (e) => {
          let n = l.get(e);
          return (
            n ||
              ((n = new Promise((p, r) => {
                let a = e,
                  t = (e) => (n) => {
                    a === e && p(n);
                  },
                  P = (e) => (n) => {
                    a === e && r(n);
                  },
                  o = (e) => {
                    "onCancel" in e &&
                      "function" == typeof e.onCancel &&
                      e.onCancel((r) => {
                        if (r === e)
                          throw Error(
                            "[Bug] p is not updated even after cancelation"
                          );
                        i(r)
                          ? (l.set(r, n), (a = r), r.then(t(r), P(r)), o(r))
                          : p(r);
                      });
                  };
                e.then(t(e), P(e)), o(e);
              })),
              l.set(e, n)),
            n
          );
        };
      function b(e, n) {
        let p = P(n),
          [[a, t, l], b] = (0, r.useReducer)(
            (n) => {
              let r = p.get(e);
              return Object.is(n[0], r) && n[1] === p && n[2] === e
                ? n
                : [r, p, e];
            },
            void 0,
            () => [p.get(e), p, e]
          ),
          f = a;
        (t !== p || l !== e) && (b(), (f = p.get(e)));
        let m = null == n ? void 0 : n.delay;
        return ((0, r.useEffect)(() => {
          let n = p.sub(e, () => {
            if ("number" == typeof m) {
              let n = p.get(e);
              i(n) && o(c(n)), setTimeout(b, m);
              return;
            }
            b();
          });
          return b(), n;
        }, [p, e, m]),
        (0, r.useDebugValue)(f),
        i(f))
          ? s(c(f))
          : f;
      }
      function f(e, n) {
        let p = P(n);
        return (0, r.useCallback)(
          (...n) => {
            if (!("write" in e)) throw Error("not writable atom");
            return p.set(e, ...n);
          },
          [p, e]
        );
      }
      function m(e, n) {
        return [b(e, n), f(e, n)];
      }
    },
    85472: () => {},
    86863: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => i });
      var r = p(61637),
        a = p(26008),
        t = p(43903),
        P = p(60255);
      let i = function (e) {
        let {
            elementType: n,
            externalSlotProps: p,
            ownerState: i,
            skipResolvingSlotProps: o = !1,
            ...s
          } = e,
          l = o ? {} : (0, P.A)(p, i),
          { props: c, internalRef: b } = (0, t.A)({
            ...s,
            externalSlotProps: l,
          }),
          f = (0, r.A)(b, l?.ref, e.additionalProps?.ref);
        return (0, a.A)(n, { ...c, ref: f }, i);
      };
    },
    86965: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => t });
      var r = p(14232);
      let a = {};
      function t(e, n) {
        let p = r.useRef(a);
        return p.current === a && (p.current = e(n)), p;
      }
    },
    88707: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P });
      var r = p(12535);
      let a = { textTransform: "uppercase" },
        t = '"Roboto", "Helvetica", "Arial", sans-serif';
      function P(e, n) {
        let {
            fontFamily: p = t,
            fontSize: P = 14,
            fontWeightLight: i = 300,
            fontWeightRegular: o = 400,
            fontWeightMedium: s = 500,
            fontWeightBold: l = 700,
            htmlFontSize: c = 16,
            allVariants: b,
            pxToRem: f,
            ...m
          } = "function" == typeof n ? n(e) : n,
          u = P / 14,
          d = f || ((e) => "".concat((e / c) * u, "rem")),
          R = (e, n, r, a, P) => ({
            fontFamily: p,
            fontWeight: e,
            fontSize: d(n),
            lineHeight: r,
            ...(p === t
              ? {
                  letterSpacing: "".concat(
                    Math.round((a / n) * 1e5) / 1e5,
                    "em"
                  ),
                }
              : {}),
            ...P,
            ...b,
          }),
          B = {
            h1: R(i, 96, 1.167, -1.5),
            h2: R(i, 60, 1.2, -0.5),
            h3: R(o, 48, 1.167, 0),
            h4: R(o, 34, 1.235, 0.25),
            h5: R(o, 24, 1.334, 0),
            h6: R(s, 20, 1.6, 0.15),
            subtitle1: R(o, 16, 1.75, 0.15),
            subtitle2: R(s, 14, 1.57, 0.1),
            body1: R(o, 16, 1.5, 0.15),
            body2: R(o, 14, 1.43, 0.15),
            button: R(s, 14, 1.75, 0.4, a),
            caption: R(o, 12, 1.66, 0.4),
            overline: R(o, 12, 2.66, 1, a),
            inherit: {
              fontFamily: "inherit",
              fontWeight: "inherit",
              fontSize: "inherit",
              lineHeight: "inherit",
              letterSpacing: "inherit",
            },
          };
        return (0, r.A)(
          {
            htmlFontSize: c,
            pxToRem: d,
            fontFamily: p,
            fontSize: P,
            fontWeightLight: i,
            fontWeightRegular: o,
            fontWeightMedium: s,
            fontWeightBold: l,
            ...B,
          },
          m,
          { clone: !1 }
        );
      }
    },
    88713: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => B });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(54773),
        i = p(52196),
        o = p(49790),
        s = p(80027),
        l = p(73194),
        c = p(55509),
        b = p(47951),
        f = p(45879);
      function m(e) {
        return (0, f.Ay)("MuiFormControl", e);
      }
      (0, b.A)("MuiFormControl", [
        "root",
        "marginNone",
        "marginNormal",
        "marginDense",
        "fullWidth",
        "disabled",
      ]);
      var u = p(37876);
      let d = (e) => {
          let { classes: n, margin: p, fullWidth: r } = e,
            a = {
              root: [
                "root",
                "none" !== p && "margin".concat((0, s.A)(p)),
                r && "fullWidth",
              ],
            };
          return (0, t.A)(a, m, n);
        },
        R = (0, P.Ay)("div", {
          name: "MuiFormControl",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              n["margin".concat((0, s.A)(p.margin))],
              p.fullWidth && n.fullWidth,
            ];
          },
        })({
          display: "inline-flex",
          flexDirection: "column",
          position: "relative",
          minWidth: 0,
          padding: 0,
          margin: 0,
          border: 0,
          verticalAlign: "top",
          variants: [
            {
              props: { margin: "normal" },
              style: { marginTop: 16, marginBottom: 8 },
            },
            {
              props: { margin: "dense" },
              style: { marginTop: 8, marginBottom: 4 },
            },
            { props: { fullWidth: !0 }, style: { width: "100%" } },
          ],
        }),
        B = r.forwardRef(function (e, n) {
          let p;
          let t = (0, i.b)({ props: e, name: "MuiFormControl" }),
            {
              children: P,
              className: s,
              color: b = "primary",
              component: f = "div",
              disabled: m = !1,
              error: B = !1,
              focused: N,
              fullWidth: h = !1,
              hiddenLabel: k = !1,
              margin: g = "none",
              required: K = !1,
              size: Q = "medium",
              variant: q = "outlined",
              ...y
            } = t,
            v = {
              ...t,
              color: b,
              component: f,
              disabled: m,
              error: B,
              fullWidth: h,
              hiddenLabel: k,
              margin: g,
              required: K,
              size: Q,
              variant: q,
            },
            D = d(v),
            [S, A] = r.useState(() => {
              let e = !1;
              return (
                P &&
                  r.Children.forEach(P, (n) => {
                    if (!(0, l.A)(n, ["Input", "Select"])) return;
                    let p = (0, l.A)(n, ["Select"]) ? n.props.input : n;
                    p && (0, o.gr)(p.props) && (e = !0);
                  }),
                e
              );
            }),
            [V, G] = r.useState(() => {
              let e = !1;
              return (
                P &&
                  r.Children.forEach(P, (n) => {
                    (0, l.A)(n, ["Input", "Select"]) &&
                      ((0, o.lq)(n.props, !0) ||
                        (0, o.lq)(n.props.inputProps, !0)) &&
                      (e = !0);
                  }),
                e
              );
            }),
            [C, w] = r.useState(!1);
          m && C && w(!1);
          let x = void 0 === N || m ? C : N;
          r.useRef(!1);
          let M = r.useCallback(() => {
              G(!0);
            }, []),
            O = r.useCallback(() => {
              G(!1);
            }, []),
            E = r.useMemo(
              () => ({
                adornedStart: S,
                setAdornedStart: A,
                color: b,
                disabled: m,
                error: B,
                filled: V,
                focused: x,
                fullWidth: h,
                hiddenLabel: k,
                size: Q,
                onBlur: () => {
                  w(!1);
                },
                onFocus: () => {
                  w(!0);
                },
                onEmpty: O,
                onFilled: M,
                registerEffect: p,
                required: K,
                variant: q,
              }),
              [S, b, m, B, V, x, h, k, p, O, M, K, Q, q]
            );
          return (0, u.jsx)(c.A.Provider, {
            value: E,
            children: (0, u.jsx)(R, {
              as: f,
              ownerState: v,
              className: (0, a.A)(D.root, s),
              ref: n,
              ...y,
              children: P,
            }),
          });
        });
    },
    89099: (e, n, p) => {
      e.exports = p(48253);
    },
    89856: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => c });
      var r = p(12535);
      let a = (e) => {
        let n = Object.keys(e).map((n) => ({ key: n, val: e[n] })) || [];
        return (
          n.sort((e, n) => e.val - n.val),
          n.reduce((e, n) => ({ ...e, [n.key]: n.val }), {})
        );
      };
      var t = p(903);
      let P = { borderRadius: 4 };
      var i = p(53111),
        o = p(74615),
        s = p(31061);
      function l(e, n) {
        if (this.vars) {
          if (
            !this.colorSchemes?.[e] ||
            "function" != typeof this.getColorSchemeSelector
          )
            return {};
          let p = this.getColorSchemeSelector(e);
          return "&" === p
            ? n
            : ((p.includes("data-") || p.includes(".")) &&
                (p = `*:where(${p.replace(/\s*&$/, "")}) &`),
              { [p]: n });
        }
        return this.palette.mode === e ? n : {};
      }
      let c = function (e = {}, ...n) {
        let {
            breakpoints: p = {},
            palette: c = {},
            spacing: b,
            shape: f = {},
            ...m
          } = e,
          u = (function (e) {
            let {
                values: n = { xs: 0, sm: 600, md: 900, lg: 1200, xl: 1536 },
                unit: p = "px",
                step: r = 5,
                ...t
              } = e,
              P = a(n),
              i = Object.keys(P);
            function o(e) {
              let r = "number" == typeof n[e] ? n[e] : e;
              return `@media (min-width:${r}${p})`;
            }
            function s(e) {
              let a = "number" == typeof n[e] ? n[e] : e;
              return `@media (max-width:${a - r / 100}${p})`;
            }
            function l(e, a) {
              let t = i.indexOf(a);
              return `@media (min-width:${"number" == typeof n[e] ? n[e] : e}${p}) and (max-width:${(-1 !== t && "number" == typeof n[i[t]] ? n[i[t]] : a) - r / 100}${p})`;
            }
            return {
              keys: i,
              values: P,
              up: o,
              down: s,
              between: l,
              only: function (e) {
                return i.indexOf(e) + 1 < i.length
                  ? l(e, i[i.indexOf(e) + 1])
                  : o(e);
              },
              not: function (e) {
                let n = i.indexOf(e);
                return 0 === n
                  ? o(i[1])
                  : n === i.length - 1
                    ? s(i[n])
                    : l(e, i[i.indexOf(e) + 1]).replace(
                        "@media",
                        "@media not all and"
                      );
              },
              unit: p,
              ...t,
            };
          })(p),
          d = (0, i.A)(b),
          R = (0, r.A)(
            {
              breakpoints: u,
              direction: "ltr",
              components: {},
              palette: { mode: "light", ...c },
              spacing: d,
              shape: { ...P, ...f },
            },
            m
          );
        return (
          ((R = (0, t.Ay)(R)).applyStyles = l),
          ((R = n.reduce((e, n) => (0, r.A)(e, n), R)).unstable_sxConfig = {
            ...s.A,
            ...m?.unstable_sxConfig,
          }),
          (R.unstable_sx = function (e) {
            return (0, o.A)({ sx: e, theme: this });
          }),
          R
        );
      };
    },
    90089: (e, n, p) => {
      "use strict";
      p.d(n, { Q: () => r });
      var r = class {
        constructor() {
          (this.listeners = new Set()),
            (this.subscribe = this.subscribe.bind(this));
        }
        subscribe(e) {
          return (
            this.listeners.add(e),
            this.onSubscribe(),
            () => {
              this.listeners.delete(e), this.onUnsubscribe();
            }
          );
        }
        hasListeners() {
          return this.listeners.size > 0;
        }
        onSubscribe() {}
        onUnsubscribe() {}
      };
    },
    90405: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => y });
      var r = p(14232),
        a = p(4697),
        t = p(69241),
        P = p(27367),
        i = p(74073),
        o = p(80027),
        s = p(54773),
        l = p(82987),
        c = p(78457),
        b = p(52196),
        f = p(47951),
        m = p(45879);
      function u(e) {
        return (0, m.Ay)("MuiFormLabel", e);
      }
      let d = (0, f.A)("MuiFormLabel", [
        "root",
        "colorSecondary",
        "focused",
        "disabled",
        "error",
        "filled",
        "required",
        "asterisk",
      ]);
      var R = p(37876);
      let B = (e) => {
          let {
              classes: n,
              color: p,
              focused: r,
              disabled: t,
              error: P,
              filled: i,
              required: s,
            } = e,
            l = {
              root: [
                "root",
                "color".concat((0, o.A)(p)),
                t && "disabled",
                P && "error",
                i && "filled",
                r && "focused",
                s && "required",
              ],
              asterisk: ["asterisk", P && "error"],
            };
          return (0, a.A)(l, u, n);
        },
        N = (0, s.Ay)("label", {
          name: "MuiFormLabel",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              n.root,
              "secondary" === p.color && n.colorSecondary,
              p.filled && n.filled,
            ];
          },
        })(
          (0, l.A)((e) => {
            let { theme: n } = e;
            return {
              color: (n.vars || n).palette.text.secondary,
              ...n.typography.body1,
              lineHeight: "1.4375em",
              padding: 0,
              position: "relative",
              variants: [
                ...Object.entries(n.palette)
                  .filter((0, c.A)())
                  .map((e) => {
                    let [p] = e;
                    return {
                      props: { color: p },
                      style: {
                        ["&.".concat(d.focused)]: {
                          color: (n.vars || n).palette[p].main,
                        },
                      },
                    };
                  }),
                {
                  props: {},
                  style: {
                    ["&.".concat(d.disabled)]: {
                      color: (n.vars || n).palette.text.disabled,
                    },
                    ["&.".concat(d.error)]: {
                      color: (n.vars || n).palette.error.main,
                    },
                  },
                },
              ],
            };
          })
        ),
        h = (0, s.Ay)("span", {
          name: "MuiFormLabel",
          slot: "Asterisk",
          overridesResolver: (e, n) => n.asterisk,
        })(
          (0, l.A)((e) => {
            let { theme: n } = e;
            return {
              ["&.".concat(d.error)]: {
                color: (n.vars || n).palette.error.main,
              },
            };
          })
        ),
        k = r.forwardRef(function (e, n) {
          let p = (0, b.b)({ props: e, name: "MuiFormLabel" }),
            {
              children: r,
              className: a,
              color: o,
              component: s = "label",
              disabled: l,
              error: c,
              filled: f,
              focused: m,
              required: u,
              ...d
            } = p,
            k = (0, i.A)(),
            g = (0, P.A)({
              props: p,
              muiFormControl: k,
              states: [
                "color",
                "required",
                "focused",
                "disabled",
                "error",
                "filled",
              ],
            }),
            K = {
              ...p,
              color: g.color || "primary",
              component: s,
              disabled: g.disabled,
              error: g.error,
              filled: g.filled,
              focused: g.focused,
              required: g.required,
            },
            Q = B(K);
          return (0, R.jsxs)(N, {
            as: s,
            ownerState: K,
            className: (0, t.A)(Q.root, a),
            ref: n,
            ...d,
            children: [
              r,
              g.required &&
                (0, R.jsxs)(h, {
                  ownerState: K,
                  "aria-hidden": !0,
                  className: Q.asterisk,
                  children: [" ", "*"],
                }),
            ],
          });
        });
      var g = p(68275);
      function K(e) {
        return (0, m.Ay)("MuiInputLabel", e);
      }
      (0, f.A)("MuiInputLabel", [
        "root",
        "focused",
        "disabled",
        "error",
        "required",
        "asterisk",
        "formControl",
        "sizeSmall",
        "shrink",
        "animated",
        "standard",
        "filled",
        "outlined",
      ]);
      let Q = (e) => {
          let {
              classes: n,
              formControl: p,
              size: r,
              shrink: t,
              disableAnimation: P,
              variant: i,
              required: s,
            } = e,
            l = {
              root: [
                "root",
                p && "formControl",
                !P && "animated",
                t && "shrink",
                r && "normal" !== r && "size".concat((0, o.A)(r)),
                i,
              ],
              asterisk: [s && "asterisk"],
            },
            c = (0, a.A)(l, K, n);
          return { ...n, ...c };
        },
        q = (0, s.Ay)(k, {
          shouldForwardProp: (e) => (0, g.A)(e) || "classes" === e,
          name: "MuiInputLabel",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              { ["& .".concat(d.asterisk)]: n.asterisk },
              n.root,
              p.formControl && n.formControl,
              "small" === p.size && n.sizeSmall,
              p.shrink && n.shrink,
              !p.disableAnimation && n.animated,
              p.focused && n.focused,
              n[p.variant],
            ];
          },
        })(
          (0, l.A)((e) => {
            let { theme: n } = e;
            return {
              display: "block",
              transformOrigin: "top left",
              whiteSpace: "nowrap",
              overflow: "hidden",
              textOverflow: "ellipsis",
              maxWidth: "100%",
              variants: [
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.formControl;
                  },
                  style: {
                    position: "absolute",
                    left: 0,
                    top: 0,
                    transform: "translate(0, 20px) scale(1)",
                  },
                },
                {
                  props: { size: "small" },
                  style: { transform: "translate(0, 17px) scale(1)" },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return n.shrink;
                  },
                  style: {
                    transform: "translate(0, -1.5px) scale(0.75)",
                    transformOrigin: "top left",
                    maxWidth: "133%",
                  },
                },
                {
                  props: (e) => {
                    let { ownerState: n } = e;
                    return !n.disableAnimation;
                  },
                  style: {
                    transition: n.transitions.create(
                      ["color", "transform", "max-width"],
                      {
                        duration: n.transitions.duration.shorter,
                        easing: n.transitions.easing.easeOut,
                      }
                    ),
                  },
                },
                {
                  props: { variant: "filled" },
                  style: {
                    zIndex: 1,
                    pointerEvents: "none",
                    transform: "translate(12px, 16px) scale(1)",
                    maxWidth: "calc(100% - 24px)",
                  },
                },
                {
                  props: { variant: "filled", size: "small" },
                  style: { transform: "translate(12px, 13px) scale(1)" },
                },
                {
                  props: (e) => {
                    let { variant: n, ownerState: p } = e;
                    return "filled" === n && p.shrink;
                  },
                  style: {
                    userSelect: "none",
                    pointerEvents: "auto",
                    transform: "translate(12px, 7px) scale(0.75)",
                    maxWidth: "calc(133% - 24px)",
                  },
                },
                {
                  props: (e) => {
                    let { variant: n, ownerState: p, size: r } = e;
                    return "filled" === n && p.shrink && "small" === r;
                  },
                  style: { transform: "translate(12px, 4px) scale(0.75)" },
                },
                {
                  props: { variant: "outlined" },
                  style: {
                    zIndex: 1,
                    pointerEvents: "none",
                    transform: "translate(14px, 16px) scale(1)",
                    maxWidth: "calc(100% - 24px)",
                  },
                },
                {
                  props: { variant: "outlined", size: "small" },
                  style: { transform: "translate(14px, 9px) scale(1)" },
                },
                {
                  props: (e) => {
                    let { variant: n, ownerState: p } = e;
                    return "outlined" === n && p.shrink;
                  },
                  style: {
                    userSelect: "none",
                    pointerEvents: "auto",
                    maxWidth: "calc(133% - 32px)",
                    transform: "translate(14px, -9px) scale(0.75)",
                  },
                },
              ],
            };
          })
        ),
        y = r.forwardRef(function (e, n) {
          let p = (0, b.b)({ name: "MuiInputLabel", props: e }),
            {
              disableAnimation: r = !1,
              margin: a,
              shrink: o,
              variant: s,
              className: l,
              ...c
            } = p,
            f = (0, i.A)(),
            m = o;
          void 0 === m && f && (m = f.filled || f.focused || f.adornedStart);
          let u = (0, P.A)({
              props: p,
              muiFormControl: f,
              states: ["size", "variant", "required", "focused"],
            }),
            d = {
              ...p,
              disableAnimation: r,
              formControl: f,
              shrink: m,
              size: u.size,
              variant: u.variant,
              required: u.required,
              focused: u.focused,
            },
            B = Q(d);
          return (0, R.jsx)(q, {
            "data-shrink": m,
            ref: n,
            className: (0, t.A)(B.root, l),
            ...c,
            ownerState: d,
            classes: B,
          });
        });
    },
    90809: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P });
      var r = p(12535),
        a = p(31061);
      let t = (e) => {
        let n = { systemProps: {}, otherProps: {} },
          p = e?.theme?.unstable_sxConfig ?? a.A;
        return (
          Object.keys(e).forEach((r) => {
            p[r] ? (n.systemProps[r] = e[r]) : (n.otherProps[r] = e[r]);
          }),
          n
        );
      };
      function P(e) {
        let n;
        let { sx: p, ...a } = e,
          { systemProps: P, otherProps: i } = t(a);
        return (
          (n = Array.isArray(p)
            ? [P, ...p]
            : "function" == typeof p
              ? (...e) => {
                  let n = p(...e);
                  return (0, r.Q)(n) ? { ...P, ...n } : P;
                }
              : { ...P, ...p }),
          { ...i, sx: n }
        );
      }
    },
    90917: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(44471).A;
    },
    90932: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = {
        50: "#e3f2fd",
        100: "#bbdefb",
        200: "#90caf9",
        300: "#64b5f6",
        400: "#42a5f5",
        500: "#2196f3",
        600: "#1e88e5",
        700: "#1976d2",
        800: "#1565c0",
        900: "#0d47a1",
        A100: "#82b1ff",
        A200: "#448aff",
        A400: "#2979ff",
        A700: "#2962ff",
      };
    },
    91411: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(99659).A;
    },
    92094: (e, n, p) => {
      "use strict";
      p.d(n, {
        H: () => s,
        PE: () => l,
        RS: () => o,
        T3: () => i,
        eL: () => a,
        k_: () => P,
        sl: () => t,
      });
      var r = p(19271);
      let a = "#3B9AC6",
        t = "#3B9AC6",
        P = {
          [r.eK.Opening]: "#dbac86",
          [r.eK.Forced]: "#dbac86",
          [r.eK.Splendid]: "#19d4af",
          [r.eK.Perfect]: "#3894eb",
          [r.eK.Best]: "#22ac38",
          [r.eK.Excellent]: "#22ac38",
          [r.eK.Okay]: "#74b038",
          [r.eK.Inaccuracy]: "#f2be1f",
          [r.eK.Mistake]: "#e69f00",
          [r.eK.Blunder]: "#df5353",
        },
        i = r.Qz.Stockfish17Lite,
        o = r.Qz.Stockfish17,
        s = {
          [r.Qz.Stockfish17]: {
            full: "Stockfish 17 (75MB)",
            small: "Stockfish 17",
            sizeMb: 75,
          },
          [r.Qz.Stockfish17Lite]: {
            full: "Stockfish 17 Lite (6MB)",
            small: "Stockfish 17 Lite",
            sizeMb: 6,
          },
          [r.Qz.Stockfish16_1]: {
            full: "Stockfish 16.1 (64MB)",
            small: "Stockfish 16.1",
            sizeMb: 64,
          },
          [r.Qz.Stockfish16_1Lite]: {
            full: "Stockfish 16.1 Lite (6MB)",
            small: "Stockfish 16.1 Lite",
            sizeMb: 6,
          },
          [r.Qz.Stockfish16NNUE]: {
            full: "Stockfish 16 (40MB)",
            small: "Stockfish 16",
            sizeMb: 40,
          },
          [r.Qz.Stockfish16]: {
            full: "Stockfish 16 Lite (HCE)",
            small: "Stockfish 16 Lite",
            sizeMb: 2,
          },
          [r.Qz.Stockfish11]: {
            full: "Stockfish 11 (HCE)",
            small: "Stockfish 11",
            sizeMb: 2,
          },
        },
        l = [
          "alpha",
          "anarcandy",
          "caliente",
          "california",
          "cardinal",
          "cburnett",
          "celtic",
          "chess7",
          "chessnut",
          "chicago",
          "companion",
          "cooke",
          "dubrovny",
          "fantasy",
          "firi",
          "fresca",
          "gioco",
          "governor",
          "horsey",
          "icpieces",
          "iowa",
          "kiwen-suwi",
          "kosal",
          "leipzig",
          "letter",
          "maestro",
          "merida",
          "monarchy",
          "mpchess",
          "oslo",
          "pirouetti",
          "pixel",
          "reillycraig",
          "rhosgfx",
          "riohacha",
          "shapes",
          "spatial",
          "staunty",
          "symmetric",
          "tatiana",
          "xkcd",
        ];
    },
    92233: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = function (e, n = []) {
        if (void 0 === e) return {};
        let p = {};
        return (
          Object.keys(e)
            .filter(
              (p) =>
                p.match(/^on[A-Z]/) &&
                "function" == typeof e[p] &&
                !n.includes(p)
            )
            .forEach((n) => {
              p[n] = e[n];
            }),
          p
        );
      };
    },
    92634: (e, n, p) => {
      "use strict";
      p.d(n, { JX: () => a, PN: () => P, Wj: () => t });
      var r = p(47713);
      let a = (e) => {
          console.log("Creating worker from ".concat(e));
          let n = new window.Worker(e),
            p = {
              isReady: !1,
              uci: (e) => n.postMessage(e),
              listen: () => null,
              terminate: () => n.terminate(),
            };
          return (
            (n.onmessage = (e) => {
              p.listen(e.data);
            }),
            p
          );
        },
        t = (e, n, p, r) =>
          new Promise((a) => {
            let t = [];
            for (let P of ((e.listen = (e) => {
              t.push(e), null == r || r(t), e.startsWith(p) && a(t);
            }),
            n))
              e.uci(P);
          }),
        P = () => {
          if ("undefined" == typeof navigator) return 1;
          let e = Math.max(
            1,
            Math.round(navigator.hardwareConcurrency - 4),
            Math.floor((2 * navigator.hardwareConcurrency) / 3)
          );
          return Math.min(
            e,
            "deviceMemory" in navigator &&
              "number" == typeof navigator.deviceMemory
              ? Math.max(1, Math.round(navigator.deviceMemory))
              : 4,
            (0, r.ew)() ? 2 : (0, r.Xb)() ? 4 : 8
          );
        };
    },
    93256: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => d });
      var r = p(14232),
        a = p(69241),
        t = p(4697),
        P = p(54638),
        i = p(77018),
        o = p(99003),
        s = p(54773),
        l = p(52196),
        c = p(632),
        b = p(67360),
        f = p(37876);
      let m = (e) => {
          let { classes: n, inset: p, primary: r, secondary: a, dense: P } = e;
          return (0, t.A)(
            {
              root: ["root", p && "inset", P && "dense", r && a && "multiline"],
              primary: ["primary"],
              secondary: ["secondary"],
            },
            c.b,
            n
          );
        },
        u = (0, s.Ay)("div", {
          name: "MuiListItemText",
          slot: "Root",
          overridesResolver: (e, n) => {
            let { ownerState: p } = e;
            return [
              { ["& .".concat(c.A.primary)]: n.primary },
              { ["& .".concat(c.A.secondary)]: n.secondary },
              n.root,
              p.inset && n.inset,
              p.primary && p.secondary && n.multiline,
              p.dense && n.dense,
            ];
          },
        })({
          flex: "1 1 auto",
          minWidth: 0,
          marginTop: 4,
          marginBottom: 4,
          [".".concat(P.A.root, ":where(& .").concat(c.A.primary, ")")]: {
            display: "block",
          },
          [".".concat(P.A.root, ":where(& .").concat(c.A.secondary, ")")]: {
            display: "block",
          },
          variants: [
            {
              props: (e) => {
                let { ownerState: n } = e;
                return n.primary && n.secondary;
              },
              style: { marginTop: 6, marginBottom: 6 },
            },
            {
              props: (e) => {
                let { ownerState: n } = e;
                return n.inset;
              },
              style: { paddingLeft: 56 },
            },
          ],
        }),
        d = r.forwardRef(function (e, n) {
          let p = (0, l.b)({ props: e, name: "MuiListItemText" }),
            {
              children: t,
              className: P,
              disableTypography: s = !1,
              inset: c = !1,
              primary: d,
              primaryTypographyProps: R,
              secondary: B,
              secondaryTypographyProps: N,
              slots: h = {},
              slotProps: k = {},
              ...g
            } = p,
            { dense: K } = r.useContext(o.A),
            Q = null != d ? d : t,
            q = B,
            y = {
              ...p,
              disableTypography: s,
              inset: c,
              primary: !!Q,
              secondary: !!q,
              dense: K,
            },
            v = m(y),
            D = { slots: h, slotProps: { primary: R, secondary: N, ...k } },
            [S, A] = (0, b.A)("root", {
              className: (0, a.A)(v.root, P),
              elementType: u,
              externalForwardedProps: { ...D, ...g },
              ownerState: y,
              ref: n,
            }),
            [V, G] = (0, b.A)("primary", {
              className: v.primary,
              elementType: i.A,
              externalForwardedProps: D,
              ownerState: y,
            }),
            [C, w] = (0, b.A)("secondary", {
              className: v.secondary,
              elementType: i.A,
              externalForwardedProps: D,
              ownerState: y,
            });
          return (
            null == Q ||
              Q.type === i.A ||
              s ||
              (Q = (0, f.jsx)(V, {
                variant: K ? "body2" : "body1",
                component: (null == G ? void 0 : G.variant) ? void 0 : "span",
                ...G,
                children: Q,
              })),
            null == q ||
              q.type === i.A ||
              s ||
              (q = (0, f.jsx)(C, {
                variant: "body2",
                color: "textSecondary",
                ...w,
                children: q,
              })),
            (0, f.jsxs)(S, { ...A, children: [Q, q] })
          );
        });
    },
    93725: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(69135);
      function a(e) {
        if ("string" != typeof e) throw Error((0, r.A)(7));
        return e.charAt(0).toUpperCase() + e.slice(1);
      }
    },
    97369: (e, n, p) => {
      "use strict";
      function r(e) {
        try {
          return e.matches(":focus-visible");
        } catch (e) {}
        return !1;
      }
      p.d(n, { A: () => r });
    },
    97395: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(7061).A;
    },
    98140: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(15113);
      function a(e) {
        let { variants: n, ...p } = e,
          a = { variants: n, style: (0, r.tT)(p), isProcessed: !0 };
        return (
          a.style === p ||
            (n &&
              n.forEach((e) => {
                "function" != typeof e.style && (e.style = (0, r.tT)(e.style));
              })),
          a
        );
      }
    },
    98275: (e, n, p) => {
      "use strict";
      p.d(n, { m: () => t });
      var r = p(90089),
        a = p(37149),
        t = new (class extends r.Q {
          #Q;
          #n;
          #p;
          constructor() {
            super(),
              (this.#p = (e) => {
                if (!a.S$ && window.addEventListener) {
                  let n = () => e();
                  return (
                    window.addEventListener("visibilitychange", n, !1),
                    () => {
                      window.removeEventListener("visibilitychange", n);
                    }
                  );
                }
              });
          }
          onSubscribe() {
            this.#n || this.setEventListener(this.#p);
          }
          onUnsubscribe() {
            this.hasListeners() || (this.#n?.(), (this.#n = void 0));
          }
          setEventListener(e) {
            (this.#p = e),
              this.#n?.(),
              (this.#n = e((e) => {
                "boolean" == typeof e ? this.setFocused(e) : this.onFocus();
              }));
          }
          setFocused(e) {
            this.#Q !== e && ((this.#Q = e), this.onFocus());
          }
          onFocus() {
            let e = this.isFocused();
            this.listeners.forEach((n) => {
              n(e);
            });
          }
          isFocused() {
            return "boolean" == typeof this.#Q
              ? this.#Q
              : globalThis.document?.visibilityState !== "hidden";
          }
        })();
    },
    98291: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = {
        50: "#ffebee",
        100: "#ffcdd2",
        200: "#ef9a9a",
        300: "#e57373",
        400: "#ef5350",
        500: "#f44336",
        600: "#e53935",
        700: "#d32f2f",
        800: "#c62828",
        900: "#b71c1c",
        A100: "#ff8a80",
        A200: "#ff5252",
        A400: "#ff1744",
        A700: "#d50000",
      };
    },
    98554: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, Y: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiListItemButton", e);
      }
      let P = (0, r.A)("MuiListItemButton", [
        "root",
        "focusVisible",
        "dense",
        "alignItemsFlexStart",
        "disabled",
        "divider",
        "gutters",
        "selected",
      ]);
    },
    98594: (e, n, p) => {
      "use strict";
      let r;
      p.d(n, { In: () => eK });
      var a = p(14232);
      let t = Object.freeze({ left: 0, top: 0, width: 16, height: 16 }),
        P = Object.freeze({ rotate: 0, vFlip: !1, hFlip: !1 }),
        i = Object.freeze({ ...t, ...P }),
        o = Object.freeze({ ...i, body: "", hidden: !1 });
      function s(e, n) {
        let p = (function (e, n) {
          let p = {};
          !e.hFlip != !n.hFlip && (p.hFlip = !0),
            !e.vFlip != !n.vFlip && (p.vFlip = !0);
          let r = ((e.rotate || 0) + (n.rotate || 0)) % 4;
          return r && (p.rotate = r), p;
        })(e, n);
        for (let r in o)
          r in P
            ? r in e && !(r in p) && (p[r] = P[r])
            : r in n
              ? (p[r] = n[r])
              : r in e && (p[r] = e[r]);
        return p;
      }
      function l(e, n) {
        let p = [];
        if ("object" != typeof e || "object" != typeof e.icons) return p;
        e.not_found instanceof Array &&
          e.not_found.forEach((e) => {
            n(e, null), p.push(e);
          });
        let r = (function (e, n) {
          let p = e.icons,
            r = e.aliases || Object.create(null),
            a = Object.create(null);
          return (
            Object.keys(p)
              .concat(Object.keys(r))
              .forEach(function e(n) {
                if (p[n]) return (a[n] = []);
                if (!(n in a)) {
                  a[n] = null;
                  let p = r[n] && r[n].parent,
                    t = p && e(p);
                  t && (a[n] = [p].concat(t));
                }
                return a[n];
              }),
            a
          );
        })(e);
        for (let a in r) {
          let t = r[a];
          t &&
            (n(
              a,
              (function (e, n, p) {
                let r = e.icons,
                  a = e.aliases || Object.create(null),
                  t = {};
                function P(e) {
                  t = s(r[e] || a[e], t);
                }
                return P(n), p.forEach(P), s(e, t);
              })(e, a, t)
            ),
            p.push(a));
        }
        return p;
      }
      let c = { provider: "", aliases: {}, not_found: {}, ...t };
      function b(e, n) {
        for (let p in n) if (p in e && typeof e[p] != typeof n[p]) return !1;
        return !0;
      }
      function f(e) {
        if (
          "object" != typeof e ||
          null === e ||
          "string" != typeof e.prefix ||
          !e.icons ||
          "object" != typeof e.icons ||
          !b(e, c)
        )
          return null;
        let n = e.icons;
        for (let e in n) {
          let p = n[e];
          if (!e || "string" != typeof p.body || !b(p, o)) return null;
        }
        let p = e.aliases || Object.create(null);
        for (let e in p) {
          let r = p[e],
            a = r.parent;
          if (!e || "string" != typeof a || (!n[a] && !p[a]) || !b(r, o))
            return null;
        }
        return e;
      }
      let m = /^[a-z0-9]+(-[a-z0-9]+)*$/,
        u = (e, n, p, r = "") => {
          let a = e.split(":");
          if ("@" === e.slice(0, 1)) {
            if (a.length < 2 || a.length > 3) return null;
            r = a.shift().slice(1);
          }
          if (a.length > 3 || !a.length) return null;
          if (a.length > 1) {
            let e = a.pop(),
              p = a.pop(),
              t = { provider: a.length > 0 ? a[0] : r, prefix: p, name: e };
            return n && !d(t) ? null : t;
          }
          let t = a[0],
            P = t.split("-");
          if (P.length > 1) {
            let e = { provider: r, prefix: P.shift(), name: P.join("-") };
            return n && !d(e) ? null : e;
          }
          if (p && "" === r) {
            let e = { provider: r, prefix: "", name: t };
            return n && !d(e, p) ? null : e;
          }
          return null;
        },
        d = (e, n) => !!e && !!(((n && "" === e.prefix) || e.prefix) && e.name),
        R = Object.create(null);
      function B(e, n) {
        let p = R[e] || (R[e] = Object.create(null));
        return (
          p[n] ||
          (p[n] = {
            provider: e,
            prefix: n,
            icons: Object.create(null),
            missing: new Set(),
          })
        );
      }
      function N(e, n) {
        return f(n)
          ? l(n, (n, p) => {
              p ? (e.icons[n] = p) : e.missing.add(n);
            })
          : [];
      }
      let h = !1;
      function k(e) {
        return "boolean" == typeof e && (h = e), h;
      }
      function g(e) {
        let n = "string" == typeof e ? u(e, !0, h) : e;
        if (n) {
          let e = B(n.provider, n.prefix),
            p = n.name;
          return e.icons[p] || (e.missing.has(p) ? null : void 0);
        }
      }
      let K = Object.freeze({ width: null, height: null }),
        Q = Object.freeze({ ...K, ...P }),
        q = /(-?[0-9.]*[0-9]+[0-9.]*)/g,
        y = /^-?[0-9.]*[0-9]+[0-9.]*$/g;
      function v(e, n, p) {
        if (1 === n) return e;
        if (((p = p || 100), "number" == typeof e))
          return Math.ceil(e * n * p) / p;
        if ("string" != typeof e) return e;
        let r = e.split(q);
        if (null === r || !r.length) return e;
        let a = [],
          t = r.shift(),
          P = y.test(t);
        for (;;) {
          if (P) {
            let e = parseFloat(t);
            isNaN(e) ? a.push(t) : a.push(Math.ceil(e * n * p) / p);
          } else a.push(t);
          if (void 0 === (t = r.shift())) return a.join("");
          P = !P;
        }
      }
      let D = (e) => "unset" === e || "undefined" === e || "none" === e,
        S = /\sid="(\S+)"/g,
        A =
          "IconifyId" +
          Date.now().toString(16) +
          ((0x1000000 * Math.random()) | 0).toString(16),
        V = 0,
        G = Object.create(null);
      function C(e) {
        return G[e] || G[""];
      }
      function w(e) {
        let n;
        if ("string" == typeof e.resources) n = [e.resources];
        else if (!((n = e.resources) instanceof Array) || !n.length)
          return null;
        return {
          resources: n,
          path: e.path || "/",
          maxURL: e.maxURL || 500,
          rotate: e.rotate || 750,
          timeout: e.timeout || 5e3,
          random: !0 === e.random,
          index: e.index || 0,
          dataAfterTimeout: !1 !== e.dataAfterTimeout,
        };
      }
      let x = Object.create(null),
        M = ["https://api.simplesvg.com", "https://api.unisvg.com"],
        O = [];
      for (; M.length > 0; )
        1 === M.length
          ? O.push(M.shift())
          : Math.random() > 0.5
            ? O.push(M.shift())
            : O.push(M.pop());
      x[""] = w({ resources: ["https://api.iconify.design"].concat(O) });
      let E = (() => {
        let e;
        try {
          if (((e = fetch), "function" == typeof e)) return e;
        } catch (e) {}
      })();
      function I(e, n) {
        e.forEach((e) => {
          let p = e.loaderCallbacks;
          p && (e.loaderCallbacks = p.filter((e) => e.id !== n));
        });
      }
      let L = 0;
      var z = {
        resources: [],
        index: 0,
        timeout: 2e3,
        rotate: 750,
        random: !1,
        dataAfterTimeout: !1,
      };
      function T(e) {
        let n = { ...z, ...e },
          p = [];
        function r() {
          p = p.filter((e) => "pending" === e().status);
        }
        return {
          query: function (e, a, t) {
            let P = (function (e, n, p, r) {
              let a, t;
              let P = e.resources.length,
                i = e.random ? Math.floor(Math.random() * P) : e.index;
              if (e.random) {
                let n = e.resources.slice(0);
                for (a = []; n.length > 1; ) {
                  let e = Math.floor(Math.random() * n.length);
                  a.push(n[e]), (n = n.slice(0, e).concat(n.slice(e + 1)));
                }
                a = a.concat(n);
              } else a = e.resources.slice(i).concat(e.resources.slice(0, i));
              let o = Date.now(),
                s = "pending",
                l = 0,
                c = null,
                b = [],
                f = [];
              function m() {
                c && (clearTimeout(c), (c = null));
              }
              function u() {
                "pending" === s && (s = "aborted"),
                  m(),
                  b.forEach((e) => {
                    "pending" === e.status && (e.status = "aborted");
                  }),
                  (b = []);
              }
              function d(e, n) {
                n && (f = []), "function" == typeof e && f.push(e);
              }
              function R() {
                (s = "failed"),
                  f.forEach((e) => {
                    e(void 0, t);
                  });
              }
              function B() {
                b.forEach((e) => {
                  "pending" === e.status && (e.status = "aborted");
                }),
                  (b = []);
              }
              return (
                "function" == typeof r && f.push(r),
                setTimeout(function r() {
                  if ("pending" !== s) return;
                  m();
                  let P = a.shift();
                  if (void 0 === P) {
                    if (b.length) {
                      c = setTimeout(() => {
                        m(), "pending" === s && (B(), R());
                      }, e.timeout);
                      return;
                    }
                    R();
                    return;
                  }
                  let i = {
                    status: "pending",
                    resource: P,
                    callback: (n, p) => {
                      !(function (n, p, P) {
                        let i = "success" !== p;
                        switch (((b = b.filter((e) => e !== n)), s)) {
                          case "pending":
                            break;
                          case "failed":
                            if (i || !e.dataAfterTimeout) return;
                            break;
                          default:
                            return;
                        }
                        if ("abort" === p) {
                          (t = P), R();
                          return;
                        }
                        if (i) {
                          (t = P), b.length || (a.length ? r() : R());
                          return;
                        }
                        if ((m(), B(), !e.random)) {
                          let p = e.resources.indexOf(n.resource);
                          -1 !== p && p !== e.index && (e.index = p);
                        }
                        (s = "completed"),
                          f.forEach((e) => {
                            e(P);
                          });
                      })(i, n, p);
                    },
                  };
                  b.push(i),
                    l++,
                    (c = setTimeout(r, e.rotate)),
                    p(P, n, i.callback);
                }),
                function () {
                  return {
                    startTime: o,
                    payload: n,
                    status: s,
                    queriesSent: l,
                    queriesPending: b.length,
                    subscribe: d,
                    abort: u,
                  };
                }
              );
            })(n, e, a, (e, n) => {
              r(), t && t(e, n);
            });
            return p.push(P), P;
          },
          find: function (e) {
            return p.find((n) => e(n)) || null;
          },
          setIndex: (e) => {
            n.index = e;
          },
          getIndex: () => n.index,
          cleanup: r,
        };
      }
      function _() {}
      let F = Object.create(null),
        j = "iconify2",
        W = "iconify",
        H = W + "-count",
        $ = W + "-version";
      function U(e, n) {
        try {
          return e.getItem(n);
        } catch (e) {}
      }
      function Z(e, n, p) {
        try {
          return e.setItem(n, p), !0;
        } catch (e) {}
      }
      function Y(e, n) {
        try {
          e.removeItem(n);
        } catch (e) {}
      }
      function J(e, n) {
        return Z(e, H, n.toString());
      }
      function X(e) {
        return parseInt(U(e, H)) || 0;
      }
      let ee = { local: !0, session: !0 },
        en = { local: new Set(), session: new Set() },
        ep = !1,
        er = "undefined" == typeof window ? {} : window;
      function ea(e) {
        let n = e + "Storage";
        try {
          if (er && er[n] && "number" == typeof er[n].length) return er[n];
        } catch (e) {}
        ee[e] = !1;
      }
      function et(e, n) {
        let p = ea(e);
        if (!p) return;
        let r = U(p, $);
        if (r !== j) {
          if (r) {
            let e = X(p);
            for (let n = 0; n < e; n++) Y(p, W + n.toString());
          }
          Z(p, $, j), J(p, 0);
          return;
        }
        let a = Math.floor(Date.now() / 36e5) - 168,
          t = (e) => {
            let r = W + e.toString(),
              t = U(p, r);
            if ("string" == typeof t) {
              try {
                let p = JSON.parse(t);
                if (
                  "object" == typeof p &&
                  "number" == typeof p.cached &&
                  p.cached > a &&
                  "string" == typeof p.provider &&
                  "object" == typeof p.data &&
                  "string" == typeof p.data.prefix &&
                  n(p, e)
                )
                  return !0;
              } catch (e) {}
              Y(p, r);
            }
          },
          P = X(p);
        for (let n = P - 1; n >= 0; n--)
          t(n) || (n === P - 1 ? J(p, --P) : en[e].add(n));
      }
      function eP() {
        if (!ep)
          for (let e in ((ep = !0), ee))
            et(e, (e) => {
              let n = e.data,
                p = B(e.provider, n.prefix);
              if (!N(p, n).length) return !1;
              let r = n.lastModified || -1;
              return (
                (p.lastModifiedCached = p.lastModifiedCached
                  ? Math.min(p.lastModifiedCached, r)
                  : r),
                !0
              );
            });
      }
      function ei() {}
      function eo(e, n, p, r) {
        function a() {
          let p = e.pendingIcons;
          n.forEach((n) => {
            p && p.delete(n), e.icons[n] || e.missing.add(n);
          });
        }
        if (p && "object" == typeof p)
          try {
            if (!N(e, p).length) {
              a();
              return;
            }
            r &&
              (function (e, n) {
                function p(p) {
                  let r, a;
                  if (!ee[p] || !(r = ea(p))) return;
                  let t = en[p];
                  if (t.size) t.delete((a = Array.from(t).shift()));
                  else if ((a = X(r)) >= 50 || !J(r, a + 1)) return;
                  let P = {
                    cached: Math.floor(Date.now() / 36e5),
                    provider: e.provider,
                    data: n,
                  };
                  return Z(r, W + a.toString(), JSON.stringify(P));
                }
                ep || eP(),
                  (!n.lastModified ||
                    (function (e, n) {
                      let p = e.lastModifiedCached;
                      if (p && p >= n) return p === n;
                      if (((e.lastModifiedCached = n), p))
                        for (let p in ee)
                          et(p, (p) => {
                            let r = p.data;
                            return (
                              p.provider !== e.provider ||
                              r.prefix !== e.prefix ||
                              r.lastModified === n
                            );
                          });
                      return !0;
                    })(e, n.lastModified)) &&
                    Object.keys(n.icons).length &&
                    (n.not_found &&
                      ((n = Object.assign({}, n)), delete n.not_found),
                    p("local") || p("session"));
              })(e, p);
          } catch (e) {
            console.error(e);
          }
        a(),
          e.iconsLoaderFlag ||
            ((e.iconsLoaderFlag = !0),
            setTimeout(() => {
              (e.iconsLoaderFlag = !1),
                e.pendingCallbacksFlag ||
                  ((e.pendingCallbacksFlag = !0),
                  setTimeout(() => {
                    e.pendingCallbacksFlag = !1;
                    let n = e.loaderCallbacks ? e.loaderCallbacks.slice(0) : [];
                    if (!n.length) return;
                    let p = !1,
                      r = e.provider,
                      a = e.prefix;
                    n.forEach((n) => {
                      let t = n.icons,
                        P = t.pending.length;
                      (t.pending = t.pending.filter((n) => {
                        if (n.prefix !== a) return !0;
                        let P = n.name;
                        if (e.icons[P])
                          t.loaded.push({ provider: r, prefix: a, name: P });
                        else {
                          if (!e.missing.has(P)) return (p = !0), !0;
                          t.missing.push({ provider: r, prefix: a, name: P });
                        }
                        return !1;
                      })),
                        t.pending.length !== P &&
                          (p || I([e], n.id),
                          n.callback(
                            t.loaded.slice(0),
                            t.missing.slice(0),
                            t.pending.slice(0),
                            n.abort
                          ));
                    });
                  }));
            }));
      }
      function es(e, n) {
        e instanceof Promise
          ? e
              .then((e) => {
                n(e);
              })
              .catch(() => {
                n(null);
              })
          : n(e);
      }
      let el = (e, n) => {
          let p, r;
          let a = (function (e) {
            let n = { loaded: [], missing: [], pending: [] },
              p = Object.create(null);
            e.sort((e, n) =>
              e.provider !== n.provider
                ? e.provider.localeCompare(n.provider)
                : e.prefix !== n.prefix
                  ? e.prefix.localeCompare(n.prefix)
                  : e.name.localeCompare(n.name)
            );
            let r = { provider: "", prefix: "", name: "" };
            return (
              e.forEach((e) => {
                if (
                  r.name === e.name &&
                  r.prefix === e.prefix &&
                  r.provider === e.provider
                )
                  return;
                r = e;
                let a = e.provider,
                  t = e.prefix,
                  P = e.name,
                  i = p[a] || (p[a] = Object.create(null)),
                  o = i[t] || (i[t] = B(a, t));
                (P in o.icons
                  ? n.loaded
                  : "" === t || o.missing.has(P)
                    ? n.missing
                    : n.pending
                ).push({ provider: a, prefix: t, name: P });
              }),
              n
            );
          })(
            (function (e, n = !0, p = !1) {
              let r = [];
              return (
                e.forEach((e) => {
                  let a = "string" == typeof e ? u(e, n, p) : e;
                  a && r.push(a);
                }),
                r
              );
            })(e, !0, k())
          );
          if (!a.pending.length) {
            let e = !0;
            return (
              n &&
                setTimeout(() => {
                  e && n(a.loaded, a.missing, a.pending, ei);
                }),
              () => {
                e = !1;
              }
            );
          }
          let t = Object.create(null),
            P = [];
          return (
            a.pending.forEach((e) => {
              let { provider: n, prefix: a } = e;
              if (a === r && n === p) return;
              (p = n), (r = a), P.push(B(n, a));
              let i = t[n] || (t[n] = Object.create(null));
              i[a] || (i[a] = []);
            }),
            a.pending.forEach((e) => {
              let { provider: n, prefix: p, name: r } = e,
                a = B(n, p),
                P = a.pendingIcons || (a.pendingIcons = new Set());
              P.has(r) || (P.add(r), t[n][p].push(r));
            }),
            P.forEach((e) => {
              let n = t[e.provider][e.prefix];
              n.length &&
                (function (e, n) {
                  e.iconsToLoad
                    ? (e.iconsToLoad = e.iconsToLoad.concat(n).sort())
                    : (e.iconsToLoad = n),
                    e.iconsQueueFlag ||
                      ((e.iconsQueueFlag = !0),
                      setTimeout(() => {
                        e.iconsQueueFlag = !1;
                        let { provider: n, prefix: p } = e,
                          r = e.iconsToLoad;
                        if ((delete e.iconsToLoad, !r || !r.length)) return;
                        let a = e.loadIcon;
                        if (e.loadIcons && (r.length > 1 || !a)) {
                          es(e.loadIcons(r, p, n), (n) => {
                            eo(e, r, n, !1);
                          });
                          return;
                        }
                        if (a) {
                          r.forEach((r) => {
                            es(a(r, p, n), (n) => {
                              let a = n
                                ? { prefix: p, icons: { [r]: n } }
                                : null;
                              eo(e, [r], a, !1);
                            });
                          });
                          return;
                        }
                        let { valid: t, invalid: P } = (function (e) {
                          let n = [],
                            p = [];
                          return (
                            e.forEach((e) => {
                              (e.match(m) ? n : p).push(e);
                            }),
                            { valid: n, invalid: p }
                          );
                        })(r);
                        if ((P.length && eo(e, P, null, !1), !t.length)) return;
                        let i = p.match(m) ? C(n) : null;
                        if (!i) {
                          eo(e, t, null, !1);
                          return;
                        }
                        i.prepare(n, p, t).forEach((p) => {
                          !(function (e, n, p) {
                            let r, a;
                            if ("string" == typeof e) {
                              let n = C(e);
                              if (!n) return p(void 0, 424);
                              a = n.send;
                              let t = (function (e) {
                                if (!F[e]) {
                                  let n = x[e];
                                  if (!n) return;
                                  let p = T(n);
                                  F[e] = { config: n, redundancy: p };
                                }
                                return F[e];
                              })(e);
                              t && (r = t.redundancy);
                            } else {
                              let n = w(e);
                              if (n) {
                                r = T(n);
                                let p = C(e.resources ? e.resources[0] : "");
                                p && (a = p.send);
                              }
                            }
                            r && a ? r.query(n, a, p)().abort : p(void 0, 424);
                          })(n, p, (n) => {
                            eo(e, p.icons, n, !0);
                          });
                        });
                      }));
                })(e, n);
            }),
            n
              ? (function (e, n, p) {
                  let r = L++,
                    a = I.bind(null, p, r);
                  if (!n.pending.length) return a;
                  let t = { id: r, icons: n, callback: e, abort: a };
                  return (
                    p.forEach((e) => {
                      (e.loaderCallbacks || (e.loaderCallbacks = [])).push(t);
                    }),
                    a
                  );
                })(n, a, P)
              : ei
          );
        },
        ec = /[\s,]+/,
        eb = { ...Q, inline: !1 },
        ef = {
          xmlns: "http://www.w3.org/2000/svg",
          xmlnsXlink: "http://www.w3.org/1999/xlink",
          "aria-hidden": !0,
          role: "img",
        },
        em = { display: "inline-block" },
        eu = { backgroundColor: "currentColor" },
        ed = { backgroundColor: "transparent" },
        eR = { Image: "var(--svg)", Repeat: "no-repeat", Size: "100% 100%" },
        eB = { WebkitMask: eu, mask: eu, background: ed };
      for (let e in eB) {
        let n = eB[e];
        for (let p in eR) n[e + p] = eR[p];
      }
      let eN = { ...eb, inline: !0 };
      function eh(e) {
        return e + (e.match(/^[-0-9.]+$/) ? "px" : "");
      }
      let ek = (e, n, p) => {
        let t = n.inline ? eN : eb,
          P = (function (e, n) {
            let p = { ...e };
            for (let e in n) {
              let r = n[e],
                a = typeof r;
              e in K
                ? (null === r || (r && ("string" === a || "number" === a))) &&
                  (p[e] = r)
                : a === typeof p[e] && (p[e] = "rotate" === e ? r % 4 : r);
            }
            return p;
          })(t, n),
          o = n.mode || "svg",
          s = {},
          l = n.style || {},
          c = { ...("svg" === o ? ef : {}) };
        if (p) {
          let e = u(p, !1, !0);
          if (e) {
            let n = ["iconify"];
            for (let p of ["provider", "prefix"])
              e[p] && n.push("iconify--" + e[p]);
            c.className = n.join(" ");
          }
        }
        for (let e in n) {
          let p = n[e];
          if (void 0 !== p)
            switch (e) {
              case "icon":
              case "style":
              case "children":
              case "onLoad":
              case "mode":
              case "ssr":
                break;
              case "_ref":
                c.ref = p;
                break;
              case "className":
                c[e] = (c[e] ? c[e] + " " : "") + p;
                break;
              case "inline":
              case "hFlip":
              case "vFlip":
                P[e] = !0 === p || "true" === p || 1 === p;
                break;
              case "flip":
                "string" == typeof p &&
                  (function (e, n) {
                    n.split(ec).forEach((n) => {
                      switch (n.trim()) {
                        case "horizontal":
                          e.hFlip = !0;
                          break;
                        case "vertical":
                          e.vFlip = !0;
                      }
                    });
                  })(P, p);
                break;
              case "color":
                s.color = p;
                break;
              case "rotate":
                "string" == typeof p
                  ? (P[e] = (function (e, n = 0) {
                      let p = e.replace(/^-?[0-9.]*/, "");
                      function r(e) {
                        for (; e < 0; ) e += 4;
                        return e % 4;
                      }
                      if ("" === p) {
                        let n = parseInt(e);
                        return isNaN(n) ? 0 : r(n);
                      }
                      if (p !== e) {
                        let n = 0;
                        switch (p) {
                          case "%":
                            n = 25;
                            break;
                          case "deg":
                            n = 90;
                        }
                        if (n) {
                          let a = parseFloat(e.slice(0, e.length - p.length));
                          return isNaN(a) ? 0 : (a /= n) % 1 == 0 ? r(a) : 0;
                        }
                      }
                      return n;
                    })(p))
                  : "number" == typeof p && (P[e] = p);
                break;
              case "ariaHidden":
              case "aria-hidden":
                !0 !== p && "true" !== p && delete c["aria-hidden"];
                break;
              default:
                void 0 === t[e] && (c[e] = p);
            }
        }
        let b = (function (e, n) {
            let p, r;
            let a = { ...i, ...e },
              t = { ...Q, ...n },
              P = {
                left: a.left,
                top: a.top,
                width: a.width,
                height: a.height,
              },
              o = a.body;
            [a, t].forEach((e) => {
              let n;
              let p = [],
                r = e.hFlip,
                a = e.vFlip,
                t = e.rotate;
              switch (
                (r
                  ? a
                    ? (t += 2)
                    : (p.push(
                        "translate(" +
                          (P.width + P.left).toString() +
                          " " +
                          (0 - P.top).toString() +
                          ")"
                      ),
                      p.push("scale(-1 1)"),
                      (P.top = P.left = 0))
                  : a &&
                    (p.push(
                      "translate(" +
                        (0 - P.left).toString() +
                        " " +
                        (P.height + P.top).toString() +
                        ")"
                    ),
                    p.push("scale(1 -1)"),
                    (P.top = P.left = 0)),
                t < 0 && (t -= 4 * Math.floor(t / 4)),
                (t %= 4))
              ) {
                case 1:
                  p.unshift(
                    "rotate(90 " +
                      (n = P.height / 2 + P.top).toString() +
                      " " +
                      n.toString() +
                      ")"
                  );
                  break;
                case 2:
                  p.unshift(
                    "rotate(180 " +
                      (P.width / 2 + P.left).toString() +
                      " " +
                      (P.height / 2 + P.top).toString() +
                      ")"
                  );
                  break;
                case 3:
                  p.unshift(
                    "rotate(-90 " +
                      (n = P.width / 2 + P.left).toString() +
                      " " +
                      n.toString() +
                      ")"
                  );
              }
              t % 2 == 1 &&
                (P.left !== P.top &&
                  ((n = P.left), (P.left = P.top), (P.top = n)),
                P.width !== P.height &&
                  ((n = P.width), (P.width = P.height), (P.height = n))),
                p.length &&
                  (o = (function (e, n, p) {
                    var r, a;
                    let t = (function (e, n = "defs") {
                      let p = "",
                        r = e.indexOf("<" + n);
                      for (; r >= 0; ) {
                        let a = e.indexOf(">", r),
                          t = e.indexOf("</" + n);
                        if (-1 === a || -1 === t) break;
                        let P = e.indexOf(">", t);
                        if (-1 === P) break;
                        (p += e.slice(a + 1, t).trim()),
                          (e = e.slice(0, r).trim() + e.slice(P + 1));
                      }
                      return { defs: p, content: e };
                    })(e);
                    return (
                      (r = t.defs),
                      (a = n + t.content + p),
                      r ? "<defs>" + r + "</defs>" + a : a
                    );
                  })(o, '<g transform="' + p.join(" ") + '">', "</g>"));
            });
            let s = t.width,
              l = t.height,
              c = P.width,
              b = P.height;
            null === s
              ? (p = v((r = null === l ? "1em" : "auto" === l ? b : l), c / b))
              : ((p = "auto" === s ? c : s),
                (r = null === l ? v(p, b / c) : "auto" === l ? b : l));
            let f = {},
              m = (e, n) => {
                D(n) || (f[e] = n.toString());
              };
            m("width", p), m("height", r);
            let u = [P.left, P.top, c, b];
            return (
              (f.viewBox = u.join(" ")), { attributes: f, viewBox: u, body: o }
            );
          })(e, P),
          f = b.attributes;
        if ((P.inline && (s.verticalAlign = "-0.125em"), "svg" === o)) {
          (c.style = { ...s, ...l }), Object.assign(c, f);
          let e = 0,
            p = n.id;
          return (
            "string" == typeof p && (p = p.replace(/-/g, "_")),
            (c.dangerouslySetInnerHTML = {
              __html: (function (e) {
                return (
                  void 0 === r &&
                    (function () {
                      try {
                        r = window.trustedTypes.createPolicy("iconify", {
                          createHTML: (e) => e,
                        });
                      } catch (e) {
                        r = null;
                      }
                    })(),
                  r ? r.createHTML(e) : e
                );
              })(
                (function (e, n = A) {
                  let p;
                  let r = [];
                  for (; (p = S.exec(e)); ) r.push(p[1]);
                  if (!r.length) return e;
                  let a =
                    "suffix" +
                    ((0x1000000 * Math.random()) | Date.now()).toString(16);
                  return (
                    r.forEach((p) => {
                      let r =
                          "function" == typeof n ? n(p) : n + (V++).toString(),
                        t = p.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
                      e = e.replace(
                        RegExp('([#;"])(' + t + ')([")]|\\.[a-z])', "g"),
                        "$1" + r + a + "$3"
                      );
                    }),
                    (e = e.replace(RegExp(a, "g"), ""))
                  );
                })(b.body, p ? () => p + "ID" + e++ : "iconifyReact")
              ),
            }),
            (0, a.createElement)("svg", c)
          );
        }
        let { body: m, width: d, height: R } = e,
          B = "mask" === o || ("bg" !== o && -1 !== m.indexOf("currentColor")),
          N = (function (e, n) {
            let p =
              -1 === e.indexOf("xlink:")
                ? ""
                : ' xmlns:xlink="http://www.w3.org/1999/xlink"';
            for (let e in n) p += " " + e + '="' + n[e] + '"';
            return (
              '<svg xmlns="http://www.w3.org/2000/svg"' + p + ">" + e + "</svg>"
            );
          })(m, { ...f, width: d + "", height: R + "" });
        return (
          (c.style = {
            ...s,
            "--svg":
              'url("data:image/svg+xml,' +
              N.replace(/"/g, "'")
                .replace(/%/g, "%25")
                .replace(/#/g, "%23")
                .replace(/</g, "%3C")
                .replace(/>/g, "%3E")
                .replace(/\s+/g, " ") +
              '")',
            width: eh(f.width),
            height: eh(f.height),
            ...em,
            ...(B ? eu : ed),
            ...l,
          }),
          (0, a.createElement)("span", c)
        );
      };
      if (
        (k(!0),
        (G[""] = {
          prepare: (e, n, p) => {
            let r = [],
              a = (function (e, n) {
                let p;
                let r = x[e];
                if (!r) return 0;
                if (r.maxURL) {
                  let e = 0;
                  r.resources.forEach((n) => {
                    e = Math.max(e, n.length);
                  }),
                    (p =
                      r.maxURL -
                      e -
                      r.path.length -
                      (n + ".json?icons=").length);
                } else p = 0;
                return p;
              })(e, n),
              t = "icons",
              P = { type: t, provider: e, prefix: n, icons: [] },
              i = 0;
            return (
              p.forEach((p, o) => {
                (i += p.length + 1) >= a &&
                  o > 0 &&
                  (r.push(P),
                  (P = { type: t, provider: e, prefix: n, icons: [] }),
                  (i = p.length)),
                  P.icons.push(p);
              }),
              r.push(P),
              r
            );
          },
          send: (e, n, p) => {
            if (!E) {
              p("abort", 424);
              return;
            }
            let r = (function (e) {
              if ("string" == typeof e) {
                let n = x[e];
                if (n) return n.path;
              }
              return "/";
            })(n.provider);
            switch (n.type) {
              case "icons":
                r +=
                  n.prefix +
                  ".json?" +
                  new URLSearchParams({ icons: n.icons.join(",") }).toString();
                break;
              case "custom": {
                let e = n.uri;
                r += "/" === e.slice(0, 1) ? e.slice(1) : e;
                break;
              }
              default:
                p("abort", 400);
                return;
            }
            let a = 503;
            E(e + r)
              .then((e) => {
                let n = e.status;
                if (200 !== n) {
                  setTimeout(() => {
                    p(404 === n ? "abort" : "next", n);
                  });
                  return;
                }
                return (a = 501), e.json();
              })
              .then((e) => {
                if ("object" != typeof e || null === e) {
                  setTimeout(() => {
                    404 === e ? p("abort", e) : p("next", a);
                  });
                  return;
                }
                setTimeout(() => {
                  p("success", e);
                });
              })
              .catch(() => {
                p("next", a);
              });
          },
        }),
        "undefined" != typeof document && "undefined" != typeof window)
      ) {
        eP();
        let e = window;
        if (void 0 !== e.IconifyPreload) {
          let n = e.IconifyPreload,
            p = "Invalid IconifyPreload syntax.";
          "object" == typeof n &&
            null !== n &&
            (n instanceof Array ? n : [n]).forEach((e) => {
              try {
                ("object" != typeof e ||
                  null === e ||
                  e instanceof Array ||
                  "object" != typeof e.icons ||
                  "string" != typeof e.prefix ||
                  !(function (e, n) {
                    if ("object" != typeof e) return !1;
                    if (
                      ("string" != typeof n && (n = e.provider || ""),
                      h && !n && !e.prefix)
                    ) {
                      let n = !1;
                      return (
                        f(e) &&
                          ((e.prefix = ""),
                          l(e, (e, p) => {
                            (function (e, n) {
                              let p = u(e, !0, h);
                              if (!p) return !1;
                              let r = B(p.provider, p.prefix);
                              return n
                                ? (function (e, n, p) {
                                    try {
                                      if ("string" == typeof p.body)
                                        return (e.icons[n] = { ...p }), !0;
                                    } catch (e) {}
                                    return !1;
                                  })(r, p.name, n)
                                : (r.missing.add(p.name), !0);
                            })(e, p) && (n = !0);
                          })),
                        n
                      );
                    }
                    let p = e.prefix;
                    return (
                      !!d({ provider: n, prefix: p, name: "a" }) &&
                      !!N(B(n, p), e)
                    );
                  })(e)) &&
                  console.error(p);
              } catch (e) {
                console.error(p);
              }
            });
        }
        if (void 0 !== e.IconifyProviders) {
          let n = e.IconifyProviders;
          if ("object" == typeof n && null !== n)
            for (let e in n) {
              let p = "IconifyProviders[" + e + "] is invalid.";
              try {
                let r = n[e];
                if ("object" != typeof r || !r || void 0 === r.resources)
                  continue;
                !(function (e, n) {
                  let p = w(n);
                  return null !== p && ((x[e] = p), !0);
                })(e, r) && console.error(p);
              } catch (e) {
                console.error(p);
              }
            }
        }
      }
      function eg(e) {
        let [n, p] = (0, a.useState)(!!e.ssr),
          [r, t] = (0, a.useState)({}),
          [P, o] = (0, a.useState)(
            (function (n) {
              if (n) {
                let n = e.icon;
                if ("object" == typeof n) return { name: "", data: n };
                let p = g(n);
                if (p) return { name: n, data: p };
              }
              return { name: "" };
            })(!!e.ssr)
          );
        function s() {
          let e = r.callback;
          e && (e(), t({}));
        }
        function l(e) {
          if (JSON.stringify(P) !== JSON.stringify(e)) return s(), o(e), !0;
        }
        (0, a.useEffect)(() => (p(!0), s), []),
          (0, a.useEffect)(() => {
            n &&
              (function n() {
                var p;
                let r = e.icon;
                if ("object" == typeof r) {
                  l({ name: "", data: r });
                  return;
                }
                let a = g(r);
                l({ name: r, data: a }) &&
                  (void 0 === a
                    ? t({ callback: el([r], n) })
                    : a &&
                      (null === (p = e.onLoad) ||
                        void 0 === p ||
                        p.call(e, r)));
              })();
          }, [e.icon, n]);
        let { name: c, data: b } = P;
        return b
          ? ek({ ...i, ...b }, e, c)
          : e.children
            ? e.children
            : (0, a.createElement)("span", {});
      }
      let eK = (0, a.forwardRef)((e, n) => eg({ ...e, _ref: n }));
      (0, a.forwardRef)((e, n) => eg({ inline: !0, ...e, _ref: n }));
    },
    98630: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => P, B: () => t });
      var r = p(47951),
        a = p(45879);
      function t(e) {
        return (0, a.Ay)("MuiInput", e);
      }
      let P = {
        ...p(40642).A,
        ...(0, r.A)("MuiInput", ["root", "underline", "input"]),
      };
    },
    99003: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => r });
      let r = p(14232).createContext({});
    },
    99542: (e, n, p) => {
      "use strict";
      let r;
      p.d(n, { eU: () => t, zp: () => S });
      let a = 0;
      function t(e, n) {
        let p = `atom${++a}`,
          r = {
            toString() {
              return this.debugLabel ? p + ":" + this.debugLabel : p;
            },
          };
        return (
          "function" == typeof e
            ? (r.read = e)
            : ((r.init = e), (r.read = P), (r.write = i)),
          n && (r.write = n),
          r
        );
      }
      function P(e) {
        return e(this);
      }
      function i(e, n, p) {
        return n(this, "function" == typeof p ? p(e(this)) : p);
      }
      let o = (e, n) => (e.unstable_is ? e.unstable_is(n) : n === e),
        s = (e) => "init" in e,
        l = (e) => !!e.write,
        c = new WeakMap(),
        b = (e) => {
          var n;
          return u(e) && !(null == (n = c.get(e)) ? void 0 : n[1]);
        },
        f = (e, n) => {
          let p = c.get(e);
          if (p) (p[1] = !0), p[0].forEach((e) => e(n));
          else throw Error("[Bug] cancelable promise not found");
        },
        m = (e) => {
          if (c.has(e)) return;
          let n = [new Set(), !1];
          c.set(e, n);
          let p = () => {
            n[1] = !0;
          };
          e.then(p, p),
            (e.onCancel = (e) => {
              n[0].add(e);
            });
        },
        u = (e) => "function" == typeof (null == e ? void 0 : e.then),
        d = (e) => "v" in e || "e" in e,
        R = (e) => {
          if ("e" in e) throw e.e;
          if (!("v" in e)) throw Error("[Bug] atom state is not initialized");
          return e.v;
        },
        B = (e, n, p) => {
          p.p.has(e) ||
            (p.p.add(e),
            n.then(
              () => {
                p.p.delete(e);
              },
              () => {
                p.p.delete(e);
              }
            ));
        },
        N = (e, n, p, r, a) => {
          var t;
          if (r === n) throw Error("[Bug] atom cannot depend on itself");
          p.d.set(r, a.n),
            b(p.v) && B(n, p.v, a),
            null == (t = a.m) || t.t.add(n),
            e && K(e, r, n);
        },
        h = () => ({ D: new Map(), H: new Set(), M: new Set(), L: new Set() }),
        k = (e, n, p) => {
          e[n].add(p);
        },
        g = (e, n, p) => {
          e.D.has(n) ||
            (e.D.set(n, new Set()),
            k(e, "M", () => {
              var n;
              null == (n = p.m) || n.l.forEach((n) => k(e, "M", n));
            }));
        },
        K = (e, n, p) => {
          let r = e.D.get(n);
          r && r.add(p);
        },
        Q = (e, n) => e.D.get(n),
        q = (e) => {
          let n;
          let p = !1,
            r = (e) => {
              try {
                e();
              } catch (e) {
                p || ((n = e), (p = !0));
              }
            };
          for (; e.H.size || e.M.size || e.L.size; )
            e.D.clear(),
              e.H.forEach(r),
              e.H.clear(),
              e.M.forEach(r),
              e.M.clear(),
              e.L.forEach(r),
              e.L.clear();
          if (p) throw n;
        },
        y = (...[e, n, p, r]) => {
          let a = (n, p, r) => {
              let a = "v" in p,
                t = p.v,
                P = b(p.v) ? p.v : null;
              if (u(r)) {
                for (let a of (m(r), p.d.keys())) B(n, r, e(a));
                p.v = r;
              } else p.v = r;
              delete p.e,
                delete p.x,
                (a && Object.is(t, p.v)) || (++p.n, P && f(P, r));
            },
            t = (p, r) => {
              var P;
              let i, c;
              let b = e(r);
              if (
                d(b) &&
                ((b.m && !b.x) ||
                  Array.from(b.d).every(([e, n]) => t(p, e).n === n))
              )
                return b;
              b.d.clear();
              let f = !0;
              try {
                let m = n(
                  r,
                  (n) => {
                    if (o(r, n)) {
                      let p = e(n);
                      if (!d(p)) {
                        if (s(n)) a(n, p, n.init);
                        else throw Error("no atom init");
                      }
                      return R(p);
                    }
                    let P = t(p, n);
                    try {
                      return R(P);
                    } finally {
                      if (f) N(p, r, b, n, P);
                      else {
                        let e = h();
                        N(e, r, b, n, P), v(e, r, b), q(e);
                      }
                    }
                  },
                  {
                    get signal() {
                      return i || (i = new AbortController()), i.signal;
                    },
                    get setSelf() {
                      return (
                        l(r) ||
                          console.warn(
                            "setSelf function cannot be used with read-only atom"
                          ),
                        !c &&
                          l(r) &&
                          (c = (...e) => {
                            if (
                              (f &&
                                console.warn(
                                  "setSelf function cannot be called in sync"
                                ),
                              !f)
                            )
                              return K(r, ...e);
                          }),
                        c
                      );
                    },
                  }
                );
                if ((a(r, b, m), u(m))) {
                  null == (P = m.onCancel) ||
                    P.call(m, () => (null == i ? void 0 : i.abort()));
                  let e = () => {
                    if (b.m) {
                      let e = h();
                      v(e, r, b), q(e);
                    }
                  };
                  m.then(e, e);
                }
                return b;
              } catch (e) {
                return delete b.v, (b.e = e), delete b.x, ++b.n, b;
              } finally {
                f = !1;
              }
            },
            P = (n, p, r) => {
              var a, t;
              let P = new Map();
              for (let n of (null == (a = r.m) ? void 0 : a.t) || []) {
                let p = e(n);
                p.m && P.set(n, p);
              }
              for (let n of r.p) P.set(n, e(n));
              return (
                null == (t = Q(n, p)) ||
                  t.forEach((n) => {
                    P.set(n, e(n));
                  }),
                P
              );
            },
            i = (e, n, p) => {
              let r = [],
                a = new Set(),
                i = new Set(),
                o = [[n, p]];
              for (; o.length > 0; ) {
                let [n, p] = o[o.length - 1];
                if (i.has(n)) {
                  o.pop();
                  continue;
                }
                if (a.has(n)) {
                  r.push([n, p, p.n]), i.add(n), (p.x = !0), o.pop();
                  continue;
                }
                for (let [r, t] of (a.add(n), P(e, n, p)))
                  n === r || a.has(r) || o.push([r, t]);
              }
              k(e, "H", () => {
                let p = new Set([n]);
                for (let n = r.length - 1; n >= 0; --n) {
                  let [a, P, i] = r[n],
                    o = !1;
                  for (let e of P.d.keys())
                    if (e !== a && p.has(e)) {
                      o = !0;
                      break;
                    }
                  o &&
                    (t(e, a), v(e, a, P), i !== P.n && (g(e, a, P), p.add(a))),
                    delete P.x;
                }
              });
            },
            c = (n, r, ...P) => {
              let l = !0;
              try {
                return p(
                  r,
                  (e) => R(t(n, e)),
                  (p, ...t) => {
                    let P = e(p);
                    try {
                      if (!o(r, p)) return c(n, p, ...t);
                      {
                        if (!s(p)) throw Error("atom not writable");
                        let e = P.n,
                          r = t[0];
                        a(p, P, r),
                          v(n, p, P),
                          e !== P.n && (g(n, p, P), i(n, p, P));
                        return;
                      }
                    } finally {
                      l || q(n);
                    }
                  },
                  ...P
                );
              } finally {
                l = !1;
              }
            },
            K = (e, ...n) => {
              let p = h();
              try {
                return c(p, e, ...n);
              } finally {
                q(p);
              }
            },
            v = (n, p, r) => {
              if (r.m && !b(r.v)) {
                for (let a of r.d.keys())
                  r.m.d.has(a) || (D(n, a, e(a)).t.add(p), r.m.d.add(a));
                for (let a of r.m.d || [])
                  if (!r.d.has(a)) {
                    r.m.d.delete(a);
                    let t = S(n, a, e(a));
                    null == t || t.t.delete(p);
                  }
              }
            },
            D = (n, p, a) => {
              if (!a.m) {
                for (let r of (t(n, p), a.d.keys())) D(n, r, e(r)).t.add(p);
                if (
                  ((a.m = {
                    l: new Set(),
                    d: new Set(a.d.keys()),
                    t: new Set(),
                  }),
                  l(p))
                ) {
                  let e;
                  let t = a.m,
                    P = (n, r) => {
                      let a = !0;
                      e = (...e) => {
                        try {
                          return c(n, p, ...e);
                        } finally {
                          a || q(n);
                        }
                      };
                      try {
                        return r();
                      } finally {
                        a = !1;
                      }
                    };
                  k(n, "L", () => {
                    let a = P(n, () => r(p, (...n) => e(...n)));
                    a && (t.u = (e) => P(e, a));
                  });
                }
              }
              return a.m;
            },
            S = (n, p, r) => {
              if (
                r.m &&
                !r.m.l.size &&
                !Array.from(r.m.t).some((n) => {
                  var r;
                  return null == (r = e(n).m) ? void 0 : r.d.has(p);
                })
              ) {
                let a = r.m.u;
                for (let t of (a && k(n, "L", () => a(n)),
                delete r.m,
                r.d.keys())) {
                  let r = S(n, t, e(t));
                  null == r || r.t.delete(p);
                }
                return;
              }
              return r.m;
            };
          return {
            get: (e) => R(t(void 0, e)),
            set: K,
            sub: (n, p) => {
              let r = h(),
                a = e(n),
                t = D(r, n, a).l;
              return (
                t.add(p),
                q(r),
                () => {
                  t.delete(p);
                  let e = h();
                  S(e, n, a), q(e);
                }
              );
            },
            unstable_derive: (a) => y(...a(e, n, p, r)),
          };
        },
        v = (e) => {
          let n;
          let p = new WeakMap(),
            r = new Set(),
            a = 0,
            t = e.unstable_derive(
              (e, t, P, i) => (
                (n = e),
                [
                  (n) => {
                    let a = p.get(n);
                    return (
                      a ||
                        ((a = new Proxy(e(n), {
                          set: (e, p, a) => (
                            "m" === p && r.add(n), Reflect.set(e, p, a)
                          ),
                          deleteProperty: (e, p) => (
                            "m" === p && r.delete(n),
                            Reflect.deleteProperty(e, p)
                          ),
                        })),
                        p.set(n, a)),
                      a
                    );
                  },
                  t,
                  (e, n, p, ...r) => (a ? p(e, ...r) : P(e, n, p, ...r)),
                  i,
                ]
              )
            ),
            P = t.set;
          return Object.assign(t, {
            dev4_get_internal_weak_map: () => ({
              get: (e) => {
                let p = n(e);
                if (0 !== p.n) return p;
              },
            }),
            dev4_get_mounted_atoms: () => r,
            dev4_restore_atoms: (e) => {
              P({
                read: () => null,
                write: (n, p) => {
                  ++a;
                  try {
                    for (let [n, r] of e) s(n) && p(n, r);
                  } finally {
                    --a;
                  }
                },
              });
            },
          });
        },
        D = () => {
          let e = new WeakMap();
          return v(
            y(
              (n) => {
                if (!n) throw Error("Atom is undefined or null");
                let p = e.get(n);
                return (
                  p ||
                    ((p = { d: new Map(), p: new Set(), n: 0 }), e.set(n, p)),
                  p
                );
              },
              (e, ...n) => e.read(...n),
              (e, ...n) => e.write(...n),
              (e, ...n) => {
                var p;
                return null == (p = e.onMount) ? void 0 : p.call(e, ...n);
              }
            )
          );
        },
        S = () => (
          !r &&
            ((r = D()),
            globalThis.__JOTAI_DEFAULT_STORE__ ||
              (globalThis.__JOTAI_DEFAULT_STORE__ = r),
            globalThis.__JOTAI_DEFAULT_STORE__ !== r &&
              console.warn(
                "Detected multiple Jotai instances. It may cause unexpected behavior with the default store. https://github.com/pmndrs/jotai/discussions/2044"
              )),
          r
        );
    },
    99659: (e, n, p) => {
      "use strict";
      p.d(n, { A: () => a });
      var r = p(14232);
      let a = "undefined" != typeof window ? r.useLayoutEffect : r.useEffect;
    },
  },
  (e) => {
    var n = (n) => e((e.s = n));
    e.O(0, [593, 792], () => (n(92), n(48253))), (_N_E = e.O());
  },
]);
